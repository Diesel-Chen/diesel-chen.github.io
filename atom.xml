<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>DieselChen</title>
  
  <subtitle>个人博客,记录一下学习的点滴～</subtitle>
  <link href="https://blog.gwjzc.top/atom.xml" rel="self"/>
  
  <link href="https://blog.gwjzc.top/"/>
  <updated>2025-04-18T08:56:30.000Z</updated>
  <id>https://blog.gwjzc.top/</id>
  
  <author>
    <name>Diesel-Chen</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>客户分析变更讨论</title>
    <link href="https://blog.gwjzc.top/archives/857a03ed.html"/>
    <id>https://blog.gwjzc.top/archives/857a03ed.html</id>
    <published>2025-04-18T08:56:30.000Z</published>
    <updated>2025-04-18T08:56:30.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>任务与客户分析结构调整</p></blockquote><span id="more"></span><h3 id="会议总结：客户分析变更安排"><a href="#会议总结：客户分析变更安排" class="headerlink" title="会议总结：客户分析变更安排"></a><strong>会议总结：客户分析变更安排</strong></h3><p><strong>会议时间</strong>：2025年4月18日 16:34 - 16:53</p><hr><h4 id="核心变更内容"><a href="#核心变更内容" class="headerlink" title="核心变更内容"></a><strong>核心变更内容</strong></h4><ol><li><strong>任务与客户分析结构调整</strong><ul><li>一个任务下支持多个客户分析，每个任务包含一个客户列表。</li><li>客户列表来源：<ul><li>当前仅支持手动输入（网址或客户名称），暂不支持从客户库选择。</li><li>列表显示优化：优先显示网址，若无则显示客户名称。</li></ul></li></ul></li><li><strong>分析流程</strong><ul><li><strong>独立分析</strong>：<ul><li>勾选客户后执行分析，每个客户生成独立报告（单独表格展示）。</li><li>状态管理：分析中（显示进度百分比）、已完成、失败（可重启）、可手动停止。</li><li><strong>停止分析实现</strong>：需通过异步任务循环检测取消状态，非直接队列中断。</li></ul></li><li><strong>对比分析</strong>：<ul><li>先完成各客户的独立分析，再基于多份报告生成对比报告（合并表格展示）。</li><li>若客户已独立分析过，可直接引用结果生成对比报告。</li><li>报告数量：N个客户独立报告 + 1份对比报告（暂不隐藏中间报告）。</li></ul></li></ul></li><li><strong>报告生成与导出</strong><ul><li>分析完成后自动生成报告，包含：<ul><li>思维导图（数据为Markdown格式，导出支持Markdown文本）。</li><li>文本内容（导出PDF）。</li></ul></li><li>详情页展示：思维导图 + 文本，暂不显示分析过程。</li></ul></li><li><strong>数据结构调整</strong><ul><li>任务类型需扩展：原仅<code>agent task</code>，现需支持<code>客户分析任务</code>。</li><li>方案选项：<ul><li>扩展原表字段，或新增<code>job</code>表关联子任务（如<code>agent task</code>或客户分析）。</li></ul></li><li>抽象任务结构：任务列表统一展示，详情页按类型动态渲染。</li></ul></li></ol><hr><h4 id="待明确与后续事项"><a href="#待明确与后续事项" class="headerlink" title="待明确与后续事项"></a><strong>待明确与后续事项</strong></h4><ol><li><strong>技术实现细节</strong><ul><li>停止分析功能优先级：若实现复杂可延后处理。</li><li>流式对象输出：小关优先评估可行性，遇到问题及时反馈。</li><li>批量删除需求：小关需跟进群消息处理（使用Server Action实现）。</li></ul></li><li><strong>其他任务安排</strong><ul><li>朱晨：评估“Android自动扩充产品库”开发周期，优先处理或调整顺序。</li></ul></li></ol><hr><h4 id="关键注意事项"><a href="#关键注意事项" class="headerlink" title="关键注意事项"></a><strong>关键注意事项</strong></h4><ul><li><strong>对比分析逻辑</strong>：确保先独立分析再聚合，提示词可暂简化，后续优化。</li><li><strong>数据兼容性</strong>：调整任务表结构时需兼容历史<code>agent task</code>数据。</li><li><strong>进度反馈</strong>：分析中需实时更新进度（每完成一个步骤更新20%）。</li></ul><p><strong>下一步行动</strong>：</p><ul><li>开发团队按分工推进（任务拆分、接口调整、UI适配），阻塞问题及时同步。</li></ul>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;任务与客户分析结构调整&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="会议总结" scheme="https://blog.gwjzc.top/categories/%E4%BC%9A%E8%AE%AE%E6%80%BB%E7%BB%93/"/>
    
    <category term="葵普" scheme="https://blog.gwjzc.top/categories/%E4%BC%9A%E8%AE%AE%E6%80%BB%E7%BB%93/%E8%91%B5%E6%99%AE/"/>
    
    
    <category term="会议总结" scheme="https://blog.gwjzc.top/tags/%E4%BC%9A%E8%AE%AE%E6%80%BB%E7%BB%93/"/>
    
    <category term="葵普" scheme="https://blog.gwjzc.top/tags/%E8%91%B5%E6%99%AE/"/>
    
  </entry>
  
  <entry>
    <title>中国房地产市场与精装房问题剖析</title>
    <link href="https://blog.gwjzc.top/archives/91a69400.html"/>
    <id>https://blog.gwjzc.top/archives/91a69400.html</id>
    <published>2025-04-14T15:05:23.000Z</published>
    <updated>2025-04-14T15:05:23.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>深入剖析了中国房地产市场及精装房问题的历史根源、发展脉络和深层机制，指出土地财政、土地金融、开发商高周转高杠杆模式与政策的互动如何塑造当前局面。</p></blockquote><span id="more"></span><h1 id="中国房地产市场与精装房问题剖析"><a href="#中国房地产市场与精装房问题剖析" class="headerlink" title="中国房地产市场与精装房问题剖析"></a>中国房地产市场与精装房问题剖析</h1><h2 id="核心主题"><a href="#核心主题" class="headerlink" title="核心主题"></a>核心主题</h2><p>视频从宏观经济和历史角度探讨了中国房地产市场，特别是“精装房”问题的由来、现状及其对中国经济和普通民众生活的影响。内容并非装修教程，而是分析房地产问题成因，并对未来趋势和个人选择提出看法。</p><h2 id="主要观点与内容"><a href="#主要观点与内容" class="headerlink" title="主要观点与内容"></a>主要观点与内容</h2><h3 id="引言与问题提出"><a href="#引言与问题提出" class="headerlink" title="引言与问题提出"></a>引言与问题提出</h3><ul><li><strong>主题敏感</strong>：房地产话题敏感，呼吁观众理性讨论。</li><li><strong>行业痛点</strong>：房地产常被认为是“最深恶痛绝”的行业。</li><li><strong>精装房问题</strong>：频发质量丑闻（如万科、绿地漏水，汤臣一品豪宅问题导致业主女儿抑郁），被形容为“恶心加倍”。</li><li><strong>核心疑问</strong>：精装房质量差、居住需求难满足的根源是什么？</li><li><strong>视频结构</strong>：分为“毛坯房”、“精装房”、“时代”三部分，参考吴晓波、安小欢、白紫璇等人资料。</li></ul><hr><h3 id="第一部分：毛坯房的由来"><a href="#第一部分：毛坯房的由来" class="headerlink" title="第一部分：毛坯房的由来"></a>第一部分：毛坯房的由来</h3><ul><li><strong>全球反差</strong>：全球多数国家交付精装房，毛坯房（水泥盒子）是中国特色，本身不合理（如同买衣服要自己缝）。</li><li><strong>非个性化需求</strong>：多数业主追求方便、省心、实惠，而非极致个性化。优质精装房可满足需求。</li><li><strong>毛坯房弊端</strong>：<ul><li>资源浪费：主体改造每年浪费300亿。</li><li>环境污染：每户装修产生约2吨垃圾。</li></ul></li><li><strong>精装房优势</strong>：规模化装修提高效率、降低成本、提升价值、增强竞争力。</li><li><strong>历史溯源</strong>：毛坯房为何成为主流？<ul><li>**改革开放初期 (1978-1993)**：经济建设为中心，计划经济转向市场经济。地方政府获“财政包干”自主权，GDP高速增长。</li><li>**财政包干弊端 (1990s初)**：地方“藏富”，中央财政枯竭，宏观调控能力减弱。</li><li><strong>1994年分税制改革</strong>：加强中央财政，土地转让收益权留给地方，埋下“土地财政”伏笔。</li><li><strong>地方财政压力</strong>：分税制后，地方需新财源，投资成为关键。</li><li><strong>土地财政形成</strong>：土地转让（卖地）为城市建设积累资金。</li><li><strong>1998年房改</strong>：取消福利分房，开启商品房时代，开放住房信贷，房地产成为支柱产业。</li><li>**招拍挂制度 (2002起)**：规范土地出让，土地财政成型。</li><li><strong>早期良性循环</strong>：土地财政 -&gt; 城市基建 -&gt; 吸引人口 -&gt; 房价上涨 -&gt; 土地增值 -&gt; 更多财政收入。改善居住条件，带动相关产业。</li></ul></li></ul><h4 id="土地财政的演变：土地金融"><a href="#土地财政的演变：土地金融" class="headerlink" title="土地财政的演变：土地金融"></a>土地财政的演变：土地金融</h4><ul><li><strong>资金需求扩大</strong>：土地财政不足以支撑高速城市化。</li><li><strong>土地金融模式</strong>：地方政府成立“城投公司”（LGFV），以土地抵押借贷，开展大规模基建。</li><li><strong>模式优点</strong>：推动城市现代化，改善基础设施和生活。</li><li><strong>模式风险</strong>：依赖土地和债务，经济/房价下行时债务风险巨大。</li><li><strong>2008年金融危机</strong>：“四万亿”刺激和宽松货币政策稳经济，但推高房价，地方债务激增。</li><li><strong>后续刺激</strong>：2015年棚改货币化、2020年疫情后宽松政策，进一步推高房价。</li><li><strong>困局</strong>：房价不能跌成为维持模式的关键，房地产与经济深度绑定。</li></ul><hr><h3 id="第二部分：精装房的“兴起”与开发商模式"><a href="#第二部分：精装房的“兴起”与开发商模式" class="headerlink" title="第二部分：精装房的“兴起”与开发商模式"></a>第二部分：精装房的“兴起”与开发商模式</h3><ul><li><strong>毛坯房主导原因</strong>：房价飞涨预期下，“早买房”比“买好房”更重要。开发商提供低成本毛坯房，快速销售获利。</li><li><strong>精装房增多原因</strong>：非市场成熟或开发商良心发现，而是政策驱动：<ul><li>**限价政策 (2011-2016起)**：限制新房备案价，毛坯房利润空间受限。</li><li>**精装房推广政策 (2017起)**：基于环保、效率等，鼓励全装修成品住宅。</li></ul></li><li><strong>开发商对策</strong>：利用精装房装修成本不透明，虚报装修标准（如宣称3000元/平，实际成本几百），绕过限价，提高售价和利润。</li><li><strong>房企经营模式</strong>：高周转、高杠杆<ul><li><strong>路径</strong>：通过扩大销量赚钱，而非主要靠提价或降本。</li><li><strong>驱动力</strong>：市场火热时快速扩张，规模大易获低息贷款。</li><li><strong>手段</strong>：大量借贷（银行、信托、供应商欠款等）；快速拿地、开发、销售、回款（如碧桂园“3456”模式）。</li><li><strong>后果</strong>：<ul><li>金融化：实体开发变金融游戏。</li><li>牺牲质量：赶工期、控制成本（拖欠施工方款），导致劣质精装房泛滥。</li><li>高风险：依赖市场热度和融资顺畅，市场转冷或政策收紧（如“三道红线”）易引发债务危机（如恒大、融创爆雷）。</li></ul></li></ul></li><li><strong>对开发商的批判</strong>：赚钱时被奉为英雄，留下烂尾楼、劣质房后应承担责任，而非继续奢华生活。</li></ul><h4 id="购房与装修建议"><a href="#购房与装修建议" class="headerlink" title="购房与装修建议"></a>购房与装修建议</h4><ul><li><strong>买不买房？</strong><ul><li>视个人情况。房价长期看供需，重点城市大概率稳中有升。</li><li>刚需、改善型且有能力可买；收入不稳、高杠杆者不建议恐慌入市。</li><li>反对纯粹炒房。</li></ul></li><li><strong>选谁的房？</strong><ul><li>优先国资背景房企（保利、中海、华润等），相对稳健。</li><li>尽量选品质高的住宅。</li></ul></li><li><strong>毛坯 vs 精装？</strong><ul><li>同等条件下优先毛坯。</li></ul></li><li><strong>买了精装房怎么办？</strong><ul><li><strong>验房</strong>：非常重要，建议请专业人士或做足功课，及时要求整改。</li><li><strong>装修策略</strong>：<ul><li><strong>上策</strong>：轻硬装，添置便宜家具家电暂住，几年后彻底翻新。</li><li><strong>中策</strong>：直接拆除重装，接受精装溢价损失。</li><li><strong>下策</strong>：局部改造（成本高、难协调、未改部分仍易出问题）。</li></ul></li></ul></li></ul><hr><h3 id="第三部分：时代、未来与个人选择"><a href="#第三部分：时代、未来与个人选择" class="headerlink" title="第三部分：时代、未来与个人选择"></a>第三部分：时代、未来与个人选择</h3><ul><li><strong>反对幸灾乐祸</strong>：房地产硬着陆对所有人是灾难，不要期待“看烟花”。</li><li><strong>历史视角</strong>：<ul><li>房地产在资金匮乏、发展需求迫切时期推动中国快速发展，功不可没。</li><li>政策有两面性，是特定条件下的“两害相权取其轻”。</li></ul></li><li><strong>国家政策调整</strong>：<ul><li>“房住不炒”定位明确。</li><li>社会主要矛盾转变：追求美好生活 vs 不平衡不充分发展。</li><li>加强金融监管（约谈信托、三道红线）。</li><li>建设全国统一大市场。</li></ul></li><li><strong>目标</strong>：房地产去金融化、去杠杆，削弱支柱地位，走向健康经济结构，实现共同富裕。</li><li><strong>保持乐观</strong>：<ul><li>相信国家有能力、有决心解决问题，引导房地产回归居住属性，房价回归合理。</li><li>回顾历史，中国克服了更严峻挑战。</li><li>有智慧、有抱负的人在努力，国家在为人民“撑伞”。</li></ul></li><li><strong>反对“躺平”</strong>：<ul><li>承认年轻人压力（房价、就业、生活成本）。</li><li>个人命运与国家命运相连，躺平不利于国家和民族未来。</li><li>中国成就是奋斗出来的，放弃奋斗可能失去现有成果。</li></ul></li><li><strong>个人作为</strong>：<ul><li>理解发展是“前进性与曲折性的统一”，问题属成长阶段。</li><li>政策提供环境，幸福生活需个人奋斗。</li><li>做好本职工作（学习、工作、创业），不当“蛀虫”。</li><li>把握机会，控制风险（不高杠杆）。</li><li>提高能力，积极面对挑战，为解决问题贡献力量。</li></ul></li></ul><hr><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>深入剖析了中国房地产市场及精装房问题的历史根源、发展脉络和深层机制，指出土地财政、土地金融、开发商高周转高杠杆模式与政策的互动如何塑造当前局面。在批判现实问题的同时，强调房地产的历史贡献和国家政策调整的积极信号，表达审慎乐观的态度，呼吁年轻一代摒弃“躺平”心态，继续奋斗，共同面对和解决时代挑战。</p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;深入剖析了中国房地产市场及精装房问题的历史根源、发展脉络和深层机制，指出土地财政、土地金融、开发商高周转高杠杆模式与政策的互动如何塑造当前局面。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="装修" scheme="https://blog.gwjzc.top/categories/%E8%A3%85%E4%BF%AE/"/>
    
    
    <category term="装修" scheme="https://blog.gwjzc.top/tags/%E8%A3%85%E4%BF%AE/"/>
    
    <category term="诡计up" scheme="https://blog.gwjzc.top/tags/%E8%AF%A1%E8%AE%A1up/"/>
    
    <category term="通识课入门" scheme="https://blog.gwjzc.top/tags/%E9%80%9A%E8%AF%86%E8%AF%BE%E5%85%A5%E9%97%A8/"/>
    
  </entry>
  
  <entry>
    <title>【设计师】要不要找</title>
    <link href="https://blog.gwjzc.top/archives/a16118a2.html"/>
    <id>https://blog.gwjzc.top/archives/a16118a2.html</id>
    <published>2025-04-14T14:54:21.000Z</published>
    <updated>2025-04-14T14:54:21.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>家装设计师行业存在诸多乱象，但专业设计师对装修效果至关重要。业主需理性选择，优先考察设计师的责任心、沟通能力和落地经验，而非仅看名气或低价噱头。</p></blockquote><span id="more"></span><h3 id="一、家装设计师行业现状与问题"><a href="#一、家装设计师行业现状与问题" class="headerlink" title="一、家装设计师行业现状与问题"></a><strong>一、家装设计师行业现状与问题</strong></h3><ol><li><strong>收入与利益链</strong><ul><li>设计师主要收入来源：设计费+材料回扣（普遍30%左右，高者可达单笔60万）。</li><li>材料商通过送礼（如iPad）、饭局、娱乐活动维护关系，设计师掌握业主采购主导权。</li><li>典型案例：500万别墅装修中设计师吃回扣100万；因业主拒绝高价水龙头遭设计师指责。</li></ul></li><li><strong>职业行为乱象</strong><ul><li><strong>态度傲慢</strong>：对材料商（“送礼直接送，东西差就别来”）、业主（偏好“爆发户型”冤大头）均表现轻视。</li><li><strong>工作懒散</strong>：量房、设计依赖助理，日常以社交、自我包装为主。</li><li><strong>道德风险</strong>：私生活混乱（与助理、材料商销售不当关系）、虚假宣传（套用网络案例应付业主）。</li></ul></li><li><strong>行业两极分化</strong><ul><li><strong>底层</strong>：营销型公司“设计师”实为销售，或助理月薪1-2k，承担脏活累活。</li><li><strong>顶层</strong>：早期从业者已财务自由，业务靠口碑；但设计水平未必显著优于新人，因家装发挥空间有限。</li></ul></li></ol><hr><h3 id="二、设计师的核心价值与工作内容"><a href="#二、设计师的核心价值与工作内容" class="headerlink" title="二、设计师的核心价值与工作内容"></a><strong>二、设计师的核心价值与工作内容</strong></h3><ol><li><strong>核心作用</strong><ul><li><strong>三大职能</strong>：空间美感设计、需求匹配、工艺品质保障。</li><li><strong>角色类比</strong>：类似互联网“产品经理”，协调业主（甲方）、工人（程序员）实现理想空间。</li></ul></li><li><strong>工作流程</strong><ul><li><strong>设计阶段</strong>：提供平面图、效果图、施工图（含水电点位等30+细分图纸）。</li><li><strong>落地阶段</strong>：全程跟进施工，解决工艺问题，确保效果还原度≥90%。</li></ul></li></ol><hr><h3 id="三、业主如何选择设计师"><a href="#三、业主如何选择设计师" class="headerlink" title="三、业主如何选择设计师"></a><strong>三、业主如何选择设计师</strong></h3><ol><li><p><strong>是否必要找设计师</strong></p><ul><li><strong>推荐找</strong>：尤其适合对审美/品质要求高、预算充足、缺乏经验的业主。</li><li><strong>自装条件</strong>：需自身懂工艺，或有可靠施工队+详细设计方案。</li></ul></li><li><p><strong>避坑指南</strong></p><ul><li><strong>拒绝免费设计</strong>：多为装修公司获客噱头，后续隐性成本高。</li><li><strong>合理收费区间</strong>：<ul><li>普通家装：100-200元/㎡（设计费约占装修总预算5%）。</li><li>警惕超低价（＜50元/㎡）或虚高（＞200元/㎡）。</li></ul></li></ul></li><li><p><strong>设计师类型对比</strong></p><table><thead><tr><th align="left"><strong>类型</strong></th><th align="left"><strong>优势</strong></th><th align="left"><strong>风险</strong></th></tr></thead><tbody><tr><td align="left">装修公司设计师</td><td align="left">便捷、配套服务全</td><td align="left">销售导向，易有营销陷阱</td></tr><tr><td align="left">设计工作室/独立</td><td align="left">注重设计本身</td><td align="left">价格较高，需甄别水平</td></tr><tr><td align="left">线上设计</td><td align="left">性价比高，适合简单需求</td><td align="left">易遇敷衍套模板案例</td></tr></tbody></table></li><li><p><strong>靠谱设计师特征</strong></p><ul><li>主动了解需求，提供多方案选择；</li><li>平衡专业建议与业主决策权（非强制或完全迎合）；</li><li>耐心解答工艺、预算问题。</li></ul></li></ol><hr><h3 id="四、行业反思与呼吁"><a href="#四、行业反思与呼吁" class="headerlink" title="四、行业反思与呼吁"></a><strong>四、行业反思与呼吁</strong></h3><ul><li><strong>理想与现实差距</strong>：室内设计本应提升居住体验，但部分从业者为利益背离初衷。</li><li><strong>从业者自省</strong>：需坚守艺术追求，避免沦为“回扣中介”（引用马克思：“不为挣钱而生活写作”）。</li><li><strong>消费者教育</strong>：树立为设计付费的意识，尊重专业价值。</li></ul><hr><h3 id="五、关键建议摘要"><a href="#五、关键建议摘要" class="headerlink" title="五、关键建议摘要"></a><strong>五、关键建议摘要</strong></h3><ol><li>优先选择收费透明、沟通细致的工作室或独立设计师。</li><li>签订合同时明确设计内容、跟进次数及材料推荐条款。</li><li>业主需参与关键节点（如方案确认、选材），避免完全放权。</li></ol>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;家装设计师行业存在诸多乱象，但专业设计师对装修效果至关重要。业主需理性选择，优先考察设计师的责任心、沟通能力和落地经验，而非仅看名气或低价噱头。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="装修" scheme="https://blog.gwjzc.top/categories/%E8%A3%85%E4%BF%AE/"/>
    
    
    <category term="装修" scheme="https://blog.gwjzc.top/tags/%E8%A3%85%E4%BF%AE/"/>
    
    <category term="诡计up" scheme="https://blog.gwjzc.top/tags/%E8%AF%A1%E8%AE%A1up/"/>
    
    <category term="通识课入门" scheme="https://blog.gwjzc.top/tags/%E9%80%9A%E8%AF%86%E8%AF%BE%E5%85%A5%E9%97%A8/"/>
    
  </entry>
  
  <entry>
    <title>客户分析功能讨论</title>
    <link href="https://blog.gwjzc.top/archives/e4f50009.html"/>
    <id>https://blog.gwjzc.top/archives/e4f50009.html</id>
    <published>2025-04-14T03:13:26.000Z</published>
    <updated>2025-04-14T03:13:26.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>简化API开发流程 客户分析完发送 邮件</p></blockquote><span id="more"></span><h3 id="会议主题：产品任务与优化"><a href="#会议主题：产品任务与优化" class="headerlink" title="会议主题：产品任务与优化"></a><strong>会议主题：产品任务与优化</strong></h3><p><strong>会议时间：</strong> 2025年4月14日 14:25 - 15:00<br><strong>参会人员：</strong> 说话人A（主导）、说话人B（参与讨论）</p><hr><h4 id="一、当前任务与优先级"><a href="#一、当前任务与优先级" class="headerlink" title="一、当前任务与优先级"></a><strong>一、当前任务与优先级</strong></h4><ol><li><strong>页面更新任务</strong><ul><li><strong>目标</strong>：根据最新设计稿更新指定页面样式，支持流式对象输出。</li><li><strong>负责人</strong>：小关</li><li><strong>备注</strong>：需先分析现有音频找课任务的流式输出逻辑，再同步到新页面。</li></ul></li><li><strong>客户分析功能优化</strong><ul><li><strong>调整内容</strong>：<ul><li>将原“Company Research”功能独立为“分析客户”任务类型。</li><li>创建页面优化：输入框文案改为“输入客户公司名称或网址”，按钮文案改为“开始研究”。</li><li>逻辑调整：取消原列表页设计，改为在“样品”模块下新增独立页面“客户列表”。</li></ul></li><li><strong>后续计划</strong>：未来可能将客户列表与任务列表数据融合（需前端处理）。</li><li><strong>争议点</strong>：当前逻辑存在设计问题（如一个任务包含多个客户），需老板确认是否合理。</li></ul></li><li><strong>邮件通知功能迁移</strong><ul><li><strong>任务</strong>：将后端的邮件通知代码迁移至前端项目。</li><li><strong>实现方式</strong>：<ul><li>新建<code>email.ts</code>工具类，接收标题、邮箱、内容参数。</li><li>使用AI生成测试用例，确保功能覆盖。</li></ul></li><li><strong>负责人</strong>：朱晨</li></ul></li><li><strong>图片变种生成功能</strong><ul><li><strong>当前问题</strong>：UI设计逻辑混乱，需求不明确。</li><li><strong>临时方案</strong>：<ul><li>优先开发对话框式聊天页面，支持上传产品图后通过AI生成设计变种。</li><li>简化流程，跳过“灵感分析”步骤，直接生成并修改设计。</li></ul></li><li><strong>后续</strong>：待其他任务完成后细化。</li></ul></li></ol><hr><h4 id="二、技术实现规范"><a href="#二、技术实现规范" class="headerlink" title="二、技术实现规范"></a><strong>二、技术实现规范</strong></h4><ol><li><strong>简化API开发流程</strong><ul><li><strong>适用场景</strong>：单表或简单逻辑的增删改查。</li><li><strong>步骤</strong>：<ol><li>通过<code>db pull</code>同步后端表结构到前端。</li><li>使用AI生成Server Action代码（含测试用例）。</li><li>人工校验后直接集成到前端项目。</li></ol></li><li><strong>优势</strong>：减少人工编码，10-30分钟即可完成基础功能。</li></ul></li><li><strong>前端项目配置</strong><ul><li><strong>AI工具配置</strong>：<ul><li>在<code>.env</code>中配置自定义OpenAI API Key（低成本，约1万Token/0.1元）。</li><li>可尝试谷歌免费API（需测试兼容性）。</li></ul></li><li><strong>注意事项</strong>：<ul><li>Server Action文件需添加<code>use server</code>标识。</li><li>表结构变更仅在后端操作，前端通过<code>db pull</code>同步。</li></ul></li></ul></li><li><strong>测试规范</strong><ul><li>AI生成的测试用例需实际运行，确保覆盖增删改查边界场景。</li><li>测试数据需隔离，避免污染生产数据。</li></ul></li></ol><hr><h4 id="三、争议与待确认事项"><a href="#三、争议与待确认事项" class="headerlink" title="三、争议与待确认事项"></a><strong>三、争议与待确认事项</strong></h4><ol><li><strong>客户分析任务逻辑</strong><ul><li>当前设计允许一个任务关联多个客户，但未明确是否合理，需老板确认需求意图。</li></ul></li><li><strong>图片变种生成流程</strong><ul><li>团队认为现有UI设计过于复杂，建议简化为核心聊天式交互，需与老板对齐预期。</li></ul></li></ol><hr><h4 id="四、后续行动计划"><a href="#四、后续行动计划" class="headerlink" title="四、后续行动计划"></a><strong>四、后续行动计划</strong></h4><table><thead><tr><th align="left">任务</th><th align="left">负责人</th><th align="left">时间节点</th></tr></thead><tbody><tr><td align="left">页面样式更新</td><td align="left">小关</td><td align="left">优先处理</td></tr><tr><td align="left">客户列表页开发</td><td align="left">小白</td><td align="left">本周内</td></tr><tr><td align="left">邮件通知迁移</td><td align="left">朱晨</td><td align="left">本周内</td></tr><tr><td align="left">图片变种Demo开发</td><td align="left">待定</td><td align="left">其他完成后</td></tr></tbody></table><hr><p><strong>会议结论</strong>：</p><ul><li>对需求模糊的功能采取“最小化可行方案”，避免过度设计。</li><li>鼓励使用AI辅助开发，提升简单功能的交付效率。</li><li>争议点需在群内同步并等待老板反馈。</li></ul>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;简化API开发流程 客户分析完发送 邮件&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="会议总结" scheme="https://blog.gwjzc.top/categories/%E4%BC%9A%E8%AE%AE%E6%80%BB%E7%BB%93/"/>
    
    <category term="葵普" scheme="https://blog.gwjzc.top/categories/%E4%BC%9A%E8%AE%AE%E6%80%BB%E7%BB%93/%E8%91%B5%E6%99%AE/"/>
    
    
    <category term="会议总结" scheme="https://blog.gwjzc.top/tags/%E4%BC%9A%E8%AE%AE%E6%80%BB%E7%BB%93/"/>
    
    <category term="葵普" scheme="https://blog.gwjzc.top/tags/%E8%91%B5%E6%99%AE/"/>
    
  </entry>
  
  <entry>
    <title>【装修公司】 年轻人如何避免被装修公司坑</title>
    <link href="https://blog.gwjzc.top/archives/bab5769.html"/>
    <id>https://blog.gwjzc.top/archives/bab5769.html</id>
    <published>2025-04-11T09:40:40.000Z</published>
    <updated>2025-04-11T09:40:40.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>尽管装修行业存在诸多问题（低门槛、重营销轻服务、现金流玩法导致跑路风险、成本压缩影响质量、增项收费等），但对于时间精力有限、缺乏专业知识和资源的年轻人来说，选择装修公司往往仍是现实的选择。关键在于提高警惕，增加被”割韭菜”的难度。</p></blockquote><span id="more"></span><h1 id="【装修公司】年轻人如何避免被装修公司坑"><a href="#【装修公司】年轻人如何避免被装修公司坑" class="headerlink" title="【装修公司】年轻人如何避免被装修公司坑"></a>【装修公司】年轻人如何避免被装修公司坑</h1><h2 id="核心观点"><a href="#核心观点" class="headerlink" title="核心观点"></a>核心观点</h2><p>尽管装修行业存在诸多问题（低门槛、重营销轻服务、现金流玩法导致跑路风险、成本压缩影响质量、增项收费等），但对于时间精力有限、缺乏专业知识和资源的年轻人来说，选择装修公司往往仍是现实的选择。关键在于提高警惕，增加被”割韭菜”的难度。</p><h2 id="系统性防坑指南"><a href="#系统性防坑指南" class="headerlink" title="系统性防坑指南"></a>系统性防坑指南</h2><h3 id="第一步：前期准备（接触装修公司前必须做好的功课）"><a href="#第一步：前期准备（接触装修公司前必须做好的功课）" class="headerlink" title="第一步：前期准备（接触装修公司前必须做好的功课）"></a>第一步：前期准备（接触装修公司前必须做好的功课）</h3><h4 id="1-预算准备"><a href="#1-预算准备" class="headerlink" title="1. 预算准备"></a>1. 预算准备</h4><ul><li>明确你的硬装预算（区别于包含软装、家具家电的总预算）</li><li>心态调整：认识到找装修公司是消费行为，放弃追求极致性价比的想法</li><li>关注重点：除了价格，更要关注装修公司的专业度、责任心、质量和口碑</li></ul><h4 id="2-知识准备"><a href="#2-知识准备" class="headerlink" title="2. 知识准备"></a>2. 知识准备</h4><ul><li>拒绝做小白：先通过网络、请教朋友、参观已装修的家等途径了解基本装修知识</li><li>形成自己想法：对自己的家有初步设想和要求</li><li>提升议价能力：了解行情和知识，减少被”坑”的可能性</li></ul><h4 id="3-时间准备"><a href="#3-时间准备" class="headerlink" title="3. 时间准备"></a>3. 时间准备</h4><ul><li>预留时间：为接下来的大约半年时间，预留出学习、沟通、监工和选材的时间</li></ul><h3 id="第二步：选择装修模式"><a href="#第二步：选择装修模式" class="headerlink" title="第二步：选择装修模式"></a>第二步：选择装修模式</h3><ul><li><strong>优先半包</strong>：自己把控主材（如地板、瓷砖、卫浴、橱柜等），效果和质量更有保障</li><li><strong>全包也可考虑</strong>：省心但放弃更多控制权，有时可能更省钱（公司有采购渠道优势）</li></ul><h3 id="第三步：初步筛选装修公司（高效过滤，避免骚扰）"><a href="#第三步：初步筛选装修公司（高效过滤，避免骚扰）" class="headerlink" title="第三步：初步筛选装修公司（高效过滤，避免骚扰）"></a>第三步：初步筛选装修公司（高效过滤，避免骚扰）</h3><ol><li>拒绝非法获客：对骚扰电话联系的公司一律拒绝</li><li>要求看实例：不提供实际工地参观的公司直接放弃</li><li>观察员工专业性：警惕朋友圈只有营销没有专业内容的公司</li><li>考虑本地老牌/大型公司：更注重长期声誉，问题概率相对较低</li></ol><h3 id="第四步：到店了解与谈判（保持清醒，切勿冲动）"><a href="#第四步：到店了解与谈判（保持清醒，切勿冲动）" class="headerlink" title="第四步：到店了解与谈判（保持清醒，切勿冲动）"></a>第四步：到店了解与谈判（保持清醒，切勿冲动）</h3><ol><li>认识到店风险：装修公司擅长营销和促单（到店签单率可达30%以上）</li><li>设定自我约束：不看够5家公司、不思考1个月绝不当场交钱</li><li>抵抗当场签约压力：坚决不要当场签约，认真做记录</li><li>回家冷静分析：清醒时仔细回顾记录，检查报价和合同</li></ol><h3 id="第五步：签约环节（核心：书面约定，明确细节）"><a href="#第五步：签约环节（核心：书面约定，明确细节）" class="headerlink" title="第五步：签约环节（核心：书面约定，明确细节）"></a>第五步：签约环节（核心：书面约定，明确细节）</h3><ol><li>合同细节是关键：<ul><li>详细过遍所有环节和细节</li><li>所有口头承诺、具体要求等清晰写入合同及附件</li></ul></li><li>再次验证公司：签约过程是最后一次验证机会</li><li>付款方式：<ul><li>分期付款：尽量减少首付款比例</li><li>设计费先行：可拿着方案找其他施工方</li></ul></li></ol><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>年轻人与装修公司打交道，核心在于：</p><ol><li>事前充分准备（预算、知识、时间）</li><li>过程中保持警惕和理性</li><li>事后依赖详细的书面合同</li></ol><p>通过这些步骤，可以有效降低被”坑”的风险，提高装修过程的可控性。</p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;尽管装修行业存在诸多问题（低门槛、重营销轻服务、现金流玩法导致跑路风险、成本压缩影响质量、增项收费等），但对于时间精力有限、缺乏专业知识和资源的年轻人来说，选择装修公司往往仍是现实的选择。关键在于提高警惕，增加被”割韭菜”的难度。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="装修" scheme="https://blog.gwjzc.top/categories/%E8%A3%85%E4%BF%AE/"/>
    
    
    <category term="装修" scheme="https://blog.gwjzc.top/tags/%E8%A3%85%E4%BF%AE/"/>
    
    <category term="诡计up" scheme="https://blog.gwjzc.top/tags/%E8%AF%A1%E8%AE%A1up/"/>
    
    <category term="通识课入门" scheme="https://blog.gwjzc.top/tags/%E9%80%9A%E8%AF%86%E8%AF%BE%E5%85%A5%E9%97%A8/"/>
    
  </entry>
  
  <entry>
    <title>【装修行业】为什么装修，必定成韭菜</title>
    <link href="https://blog.gwjzc.top/archives/1acda2.html"/>
    <id>https://blog.gwjzc.top/archives/1acda2.html</id>
    <published>2025-04-11T09:23:57.000Z</published>
    <updated>2025-04-11T09:23:57.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>为什么装修，必定成韭菜  装修行业的三大核心特点导致消费者易被坑 极端复杂性、严重低频、高度非标化</p></blockquote><span id="more"></span><h1 id="【装修行业】为什么装修，必定成韭菜"><a href="#【装修行业】为什么装修，必定成韭菜" class="headerlink" title="【装修行业】为什么装修，必定成韭菜"></a>【装修行业】为什么装修，必定成韭菜</h1><h2 id="行业本质与挑战"><a href="#行业本质与挑战" class="headerlink" title="行业本质与挑战"></a>行业本质与挑战</h2><ul><li>作者以早期从业者视角指出，互联网家装路径并未成功解决行业痛点</li><li>装修市场虽大（万亿级别），但水很深，连电商巨头都难以把握</li><li>运用”透过现象看本质”的方法，分析行业特点</li></ul><h2 id="1-装修行业的三大核心特点导致消费者易被坑"><a href="#1-装修行业的三大核心特点导致消费者易被坑" class="headerlink" title="1. 装修行业的三大核心特点导致消费者易被坑"></a>1. 装修行业的三大核心特点导致消费者易被坑</h2><h3 id="极端复杂性-缝合怪"><a href="#极端复杂性-缝合怪" class="headerlink" title="极端复杂性 (缝合怪)"></a>极端复杂性 (缝合怪)</h3><ul><li>环节多（水电、泥瓦、木工、油漆等）、周期长、跨度大</li><li>需对接多方角色（设计师、项目经理、工人、监理、材料商、家居商、电器商等）</li><li>涉及主辅材和软装种类繁多（几十种）</li><li>每一个环节的参与者都需要从中获利</li></ul><h3 id="严重低频消费"><a href="#严重低频消费" class="headerlink" title="严重低频消费"></a>严重低频消费</h3><ul><li>多数人一生只装修一两次，商家不依赖复购率和口碑（转介绍不现实）</li><li>重心在于通过营销获取新客户，并倾向于最大化单次利润（”割韭菜”）</li><li>所谓”高端品质”往往是针对高消费人群的营销概念，性价比低（”一分钱买半分货”等）</li></ul><h3 id="高度非标化"><a href="#高度非标化" class="headerlink" title="高度非标化"></a>高度非标化</h3><ul><li>地域、公司、产品、项目、销售话术等都存在巨大差异</li><li>消费者容易陷入”信息茧房”，只了解到商家想让他们知道的信息</li></ul><h2 id="2-行业各角色的运作模式与问题"><a href="#2-行业各角色的运作模式与问题" class="headerlink" title="2. 行业各角色的运作模式与问题"></a>2. 行业各角色的运作模式与问题</h2><h3 id="设计师"><a href="#设计师" class="headerlink" title="设计师"></a>设计师</h3><ul><li>很多名为设计师，实为销售，不一定具备专业技能（如CAD、3DMAX）</li><li>主要目的是谈单并赚取回扣</li></ul><h3 id="装修公司"><a href="#装修公司" class="headerlink" title="装修公司"></a>装修公司</h3><ul><li>本质是营销中介，而非施工执行者</li><li>大量员工（如950/1000）是销售</li><li>通过各种手段获取客户信息并营销签约，然后将工程转包给外部工长，抽取高额提成（30%-50%）</li><li>精力主要用于研究营销和销售激励，而非提升装修品质</li></ul><h3 id="材料商"><a href="#材料商" class="headerlink" title="材料商"></a>材料商</h3><ul><li>多为经销商，并非品牌直营</li><li>关注点是销售差价和利润</li><li>面临品牌方压榨、卖场高额租金、给装修公司/设计师的高额回扣（动辄20-30%）、员工成本等多重压力</li><li>为生存只能提高售价，形成恶性循环</li></ul><h2 id="3-系统性问题与行业生态"><a href="#3-系统性问题与行业生态" class="headerlink" title="3. 系统性问题与行业生态"></a>3. 系统性问题与行业生态</h2><ul><li>信息极度不对等：消费者信息匮乏，商家掌握主导权</li><li>普遍性问题：并非个别无良商家，而是行业普遍现象。当所有人都参与”坑人”时，是整个行业结构和生态的问题</li><li>劣币驱逐良币：行业缺乏提升性价比的动力，从业者倾向于”摆烂”。有理想的从业者要么被同化，要么只能退出</li></ul><h2 id="4-给消费者的建议（隐含）"><a href="#4-给消费者的建议（隐含）" class="headerlink" title="4. 给消费者的建议（隐含）"></a>4. 给消费者的建议（隐含）</h2><ul><li>认清现实，不要指望占商家便宜</li><li>需要自己做功课：记录、整理、分析、求证</li><li>明确自身需求和设计想法</li><li>了解商家的营销逻辑</li><li>目标是”大坑不踩，小坑少踩”</li><li>做好预算规划（硬装+软装+家居用品=总预算）</li></ul><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>总而言之，文章认为装修行业由于其固有的复杂性、低频消费特性、高度非标化，以及各环节参与者（设计师、装修公司、材料商）基于自身利益的运作模式，导致信息严重不对称，形成了一个消费者极易被”收割”的系统性困境。</p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;为什么装修，必定成韭菜  装修行业的三大核心特点导致消费者易被坑 极端复杂性、严重低频、高度非标化&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="装修" scheme="https://blog.gwjzc.top/categories/%E8%A3%85%E4%BF%AE/"/>
    
    
    <category term="装修" scheme="https://blog.gwjzc.top/tags/%E8%A3%85%E4%BF%AE/"/>
    
    <category term="诡计up" scheme="https://blog.gwjzc.top/tags/%E8%AF%A1%E8%AE%A1up/"/>
    
    <category term="通识课入门" scheme="https://blog.gwjzc.top/tags/%E9%80%9A%E8%AF%86%E8%AF%BE%E5%85%A5%E9%97%A8/"/>
    
  </entry>
  
  <entry>
    <title>收藏喜欢等商品优化</title>
    <link href="https://blog.gwjzc.top/archives/66d15e30.html"/>
    <id>https://blog.gwjzc.top/archives/66d15e30.html</id>
    <published>2025-04-07T02:54:42.000Z</published>
    <updated>2025-04-07T02:54:42.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>收藏喜欢等商品优化</p></blockquote><span id="more"></span><h3 id="会议总结：商品功能优化会"><a href="#会议总结：商品功能优化会" class="headerlink" title="会议总结：商品功能优化会"></a><strong>会议总结：商品功能优化会</strong></h3><p><strong>时间：</strong> 2025/04/07 10:33 - 11:23<br><strong>主题：</strong> 商品功能逻辑调整与优化</p><hr><h4 id="一、核心功能调整：喜欢-→-收藏"><a href="#一、核心功能调整：喜欢-→-收藏" class="headerlink" title="一、核心功能调整：喜欢 → 收藏"></a><strong>一、核心功能调整：喜欢 → 收藏</strong></h4><ol><li><strong>移除原有“喜欢”功能</strong><ul><li>删除标记喜欢、商品列表点击喜欢筛选的逻辑。</li><li>业务逻辑上彻底废弃，API 改造为“收藏”功能。</li></ul></li><li><strong>收藏功能设计</strong><ul><li><strong>图标与交互</strong>：<ul><li>商品图片中的“喜欢”图标改为“收藏”。</li><li>Hover 时显示操作选项：新建文件夹或选择已有文件夹加入收藏。</li></ul></li><li><strong>列表页调整</strong>：<ul><li>移除“喜欢”按钮及筛选功能。</li><li>收藏入口移至顶部导航栏（“我的” → “私密” → 新增“收藏”标签）。</li></ul></li></ul></li><li><strong>收藏列表展示逻辑</strong><ul><li>顶部显示分类标签：<strong>全部</strong>、<strong>文件夹1</strong>、<strong>文件夹2</strong>（默认展示“全部”下的收藏列表）。</li><li>点击文件夹仅显示该文件夹内收藏的商品。</li><li><strong>限制</strong>：不支持二级文件夹，仅允许单层文件夹结构。</li></ul></li></ol><hr><h4 id="二、权限与文案优化"><a href="#二、权限与文案优化" class="headerlink" title="二、权限与文案优化"></a><strong>二、权限与文案优化</strong></h4><ol><li><strong>商品编辑权限</strong><ul><li>仅商品创建者可修改“公开/私密”状态，其他用户无操作权限。</li></ul></li><li><strong>文案调整</strong><ul><li>“我创建的”改为“我的”。</li><li>“更新时间”改为“状态”，并增加操作者头像显示。</li></ul></li></ol><hr><h4 id="三、商品列表与操作逻辑"><a href="#三、商品列表与操作逻辑" class="headerlink" title="三、商品列表与操作逻辑"></a><strong>三、商品列表与操作逻辑</strong></h4><ol><li><strong>“我的”标签页</strong><ul><li>默认展示用户创建的公开商品。</li><li>勾选商品后，底部工具条增加“设为私密”按钮。</li></ul></li><li><strong>“私密”标签页</strong><ul><li>工具条增加“设为公开”按钮，支持批量操作。</li></ul></li><li><strong>包装方案显示</strong><ul><li>列表页表头固定宽度，无论是否存在“一件一箱/两件一箱”选项。</li></ul></li></ol><hr><h4 id="四、交互与样式优化"><a href="#四、交互与样式优化" class="headerlink" title="四、交互与样式优化"></a><strong>四、交互与样式优化</strong></h4><ol><li><strong>图片相关</strong><ul><li>轮播图需按顺序从第一张开始播放。</li><li>优化图片加载状态提示（如加载动画）。</li></ul></li><li><strong>其他细节</strong><ul><li>商品列表增加滚动条，支持滑动浏览。</li><li>创建任务时默认不预选类型（需用户手动选择）。</li><li>文字样式调整（如“更新状态”不加粗）。</li></ul></li></ol><hr><h4 id="五、其他说明"><a href="#五、其他说明" class="headerlink" title="五、其他说明"></a><strong>五、其他说明</strong></h4><ol><li><strong>暂不调整的内容</strong><ul><li>画布功能、设计相关改动延后处理，优先完成业务逻辑优化。</li></ul></li><li><strong>API 改造建议</strong><ul><li>评估是否复用原“喜欢”API 或新建“收藏”API，需技术侧确认。</li></ul></li><li><strong>历史问题</strong><ul><li>原“喜欢”功能因绑定文件夹和推荐逻辑复杂，改为“收藏”后更符合用户习惯（参考抖音/淘宝收藏模式）。</li></ul></li></ol><hr><h4 id="六、后续任务分配"><a href="#六、后续任务分配" class="headerlink" title="六、后续任务分配"></a><strong>六、后续任务分配</strong></h4><ul><li>开发按优先级拆分任务，复杂功能可逐步处理。</li><li>任务进度需在文档中标记，确保团队同步。</li></ul><p><strong>会议结论：</strong> 聚焦收藏功能重构，简化交互逻辑，提升用户体验，技术侧需配合API调整与细节优化。</p><hr><p><strong>附：关键决策点</strong><br>✅ 彻底废弃“喜欢”功能，全面转向“收藏”。<br>✅ 收藏仅支持单层文件夹，禁止二级嵌套。<br>✅ 权限控制严格区分创建者与非创建者操作。<br>✅ 交互优化以“默认简洁+灵活操作”为原则。</p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;收藏喜欢等商品优化&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="会议总结" scheme="https://blog.gwjzc.top/categories/%E4%BC%9A%E8%AE%AE%E6%80%BB%E7%BB%93/"/>
    
    <category term="葵普" scheme="https://blog.gwjzc.top/categories/%E4%BC%9A%E8%AE%AE%E6%80%BB%E7%BB%93/%E8%91%B5%E6%99%AE/"/>
    
    
    <category term="会议总结" scheme="https://blog.gwjzc.top/tags/%E4%BC%9A%E8%AE%AE%E6%80%BB%E7%BB%93/"/>
    
    <category term="葵普" scheme="https://blog.gwjzc.top/tags/%E8%91%B5%E6%99%AE/"/>
    
  </entry>
  
  <entry>
    <title>图片编辑器会议</title>
    <link href="https://blog.gwjzc.top/archives/99a1f047.html"/>
    <id>https://blog.gwjzc.top/archives/99a1f047.html</id>
    <published>2025-04-03T02:34:05.000Z</published>
    <updated>2025-04-03T02:34:05.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>图片编辑器开发进展与后续计划</p></blockquote><span id="more"></span><h3 id="会议总结：图片编辑器开发进展与后续计划"><a href="#会议总结：图片编辑器开发进展与后续计划" class="headerlink" title="会议总结：图片编辑器开发进展与后续计划"></a>会议总结：图片编辑器开发进展与后续计划</h3><h4 id="一、核心进展"><a href="#一、核心进展" class="headerlink" title="一、核心进展"></a><strong>一、核心进展</strong></h4><ol><li><strong>前端架构</strong><ul><li>基于Konva的图片编辑器框架搭建完成，包含画布、工具条、弹窗三部分。</li><li>核心功能：拖拽、缩放（支持快捷键Control/Command+滚轮）、图层管理（后续优化显示更多信息）。</li><li>弹窗功能分区：编辑、创作（调用GPT接口）、背景处理（未来改用专用模型）。</li></ul></li><li><strong>AI集成</strong><ul><li>当前支持Gemini（速度快，约10秒出图）和第三方OpenAI接口（慢，约90秒，但分辨率更高）。</li><li>计划测试低成本第三方API（价格仅为官方1/3，需验证稳定性）。</li></ul></li><li><strong>性能与存储优化</strong><ul><li><strong>问题</strong>：当前图片以Base64存储，导致画布卡顿、Redis内存占用高。</li><li><strong>解决方案</strong>：<ul><li>图片上传至对象存储（如腾讯云S3），替换Base64。</li><li>监听画布图片新增事件，自动触发上传并更新链接。</li></ul></li><li>状态管理优化：避免频繁更新Redux状态，拖拽等操作仅在结束时提交。</li></ul></li><li><strong>任务队列</strong><ul><li>使用<code>bullMQ</code>+Redis处理AI任务，但考虑未来改用数据库表（因并发低，且需持久化任务记录）。</li></ul></li></ol><hr><h4 id="二、待开发功能（优先级排序）"><a href="#二、待开发功能（优先级排序）" class="headerlink" title="二、待开发功能（优先级排序）"></a><strong>二、待开发功能（优先级排序）</strong></h4><ol><li><strong>基础功能</strong><ul><li><strong>图片操作</strong>：下载单张/批量图片、批量插入画布（支持四宫格布局）。</li><li><strong>复制粘贴</strong>：支持从画布复制图片到系统剪贴板。</li><li><strong>编辑区域标记</strong>：涂抹指定区域生成Mask图层，供AI针对性修改（如局部重绘）。</li></ul></li><li><strong>批量处理</strong><ul><li>新增“批量模式”开关，支持对多张图片并发处理（如统一风格转换）。</li></ul></li><li><strong>数据持久化</strong><ul><li>画布数据保存至数据库（需前端添加“保存”按钮）。</li><li>任务记录存储（包括生成参数、结果URL等）。</li></ul></li><li><strong>业务集成</strong><ul><li>预设提示词：针对家具等产品提供快捷编辑指令（如改颜色、形状）。</li><li>自定义动作：将编辑结果通过API回传至Renewmake系统（如替换原图）。</li></ul></li><li><strong>其他优化</strong><ul><li>显示图片属性（尺寸、来源、提示词）。</li><li>合并重复的<code>utils</code>代码库。</li></ul></li></ol><hr><h4 id="三、技术决策与后续计划"><a href="#三、技术决策与后续计划" class="headerlink" title="三、技术决策与后续计划"></a><strong>三、技术决策与后续计划</strong></h4><ol><li><strong>存储迁移</strong><ul><li>优先实现对象存储上传，解决Base64性能问题。</li><li>数据库表设计需兼容画布状态和任务记录。</li></ul></li><li><strong>代理与API</strong><ul><li>代理问题统一处理（部分API需强制代理）。</li><li>使用React Server Action替代传统API调用，简化前后端交互。</li></ul></li><li><strong>分工建议</strong><ul><li><strong>小关</strong>：实现下载、批量插入、画布保存按钮。</li><li><strong>朱晨</strong>：协助优化状态管理，参与数据库交互设计。</li><li><strong>后续重点</strong>：对象存储集成完成后，集中处理预设提示词与业务对接。</li></ul></li></ol><hr><h4 id="四、风险与注意事项"><a href="#四、风险与注意事项" class="headerlink" title="四、风险与注意事项"></a><strong>四、风险与注意事项</strong></h4><ul><li><strong>性能瓶颈</strong>：Base64传输可能触发Redis大小限制（历史版本限制5MB）。</li><li><strong>第三方API稳定性</strong>：低成本OpenAI替代方案需充分测试。</li><li><strong>交互优化</strong>：弹窗与右侧功能区布局需根据用户反馈调整。</li></ul><p><strong>下一步会议</strong>：对象存储集成完成后Review进度，并讨论预设提示词具体设计。</p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;图片编辑器开发进展与后续计划&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="会议总结" scheme="https://blog.gwjzc.top/categories/%E4%BC%9A%E8%AE%AE%E6%80%BB%E7%BB%93/"/>
    
    <category term="葵普" scheme="https://blog.gwjzc.top/categories/%E4%BC%9A%E8%AE%AE%E6%80%BB%E7%BB%93/%E8%91%B5%E6%99%AE/"/>
    
    
    <category term="会议总结" scheme="https://blog.gwjzc.top/tags/%E4%BC%9A%E8%AE%AE%E6%80%BB%E7%BB%93/"/>
    
    <category term="葵普" scheme="https://blog.gwjzc.top/tags/%E8%91%B5%E6%99%AE/"/>
    
  </entry>
  
  <entry>
    <title>图片生成与库扩</title>
    <link href="https://blog.gwjzc.top/archives/dfc4bc50.html"/>
    <id>https://blog.gwjzc.top/archives/dfc4bc50.html</id>
    <published>2025-04-02T02:19:32.000Z</published>
    <updated>2025-04-02T02:19:32.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>讨论了图片生成与产品库扩充</p></blockquote><span id="more"></span><h3 id="会议记录总结：《图片生成与库扩》"><a href="#会议记录总结：《图片生成与库扩》" class="headerlink" title="会议记录总结：《图片生成与库扩》"></a>会议记录总结：《图片生成与库扩》</h3><h4 id="一、会议基本信息"><a href="#一、会议基本信息" class="headerlink" title="一、会议基本信息"></a><strong>一、会议基本信息</strong></h4><ul><li><strong>时间</strong>：2025年4月2日 16:36 - 17:35</li><li><strong>主要议题</strong>：<ol><li>图片变种生成的实现方案</li><li>产品库扩充的技术优化</li><li>外部数据爬取与处理的工具开发</li></ol></li></ul><hr><h4 id="二、核心讨论内容"><a href="#二、核心讨论内容" class="headerlink" title="二、核心讨论内容"></a><strong>二、核心讨论内容</strong></h4><h5 id="1-图片变种生成"><a href="#1-图片变种生成" class="headerlink" title="1. 图片变种生成"></a><strong>1. 图片变种生成</strong></h5><ul><li><strong>需求背景</strong>：<ul><li>老板希望实现通过自然语言描述快速修改产品设计（如颜色、形状等），类似电商场景的AI生成效果。</li><li>早期方案依赖Stable Diffusion等模型，但需复杂提示语，效率低。</li></ul></li><li><strong>技术进展</strong>：<ul><li><strong>多模态模型（如GPT-4V、Gemini）</strong>：<ul><li>支持直接上传图片并基于文本指令修改（如“将狗改成机器人”），无需手动标注选区。</li><li>优势：语义理解更强，减少人工干预。</li></ul></li><li><strong>当前局限</strong>：<ul><li>生成结果仍需人工编辑优化，无法完全自动化满足老板的“完美”预期。</li><li>需构建工作流：用户编辑 → AI生成 → 人工调整 → 最终输出。</li></ul></li></ul></li><li><strong>Demo演示</strong>：<ul><li>使用Google AI Studio的免费API实现图片编辑功能（如修改产品颜色、形状）。</li><li>对比GPT-4V生成效果更稳定，但API未开放，暂用替代方案。</li></ul></li><li><strong>后续计划</strong>：<ul><li>开发集成多模态API的编辑器（类似Figma），支持批量处理多张图片。</li><li>优先实现人工编辑流程，再逐步优化自动化变种生成。</li></ul></li></ul><hr><h5 id="2-产品库扩充优化"><a href="#2-产品库扩充优化" class="headerlink" title="2. 产品库扩充优化"></a><strong>2. 产品库扩充优化</strong></h5><ul><li><strong>现状与问题</strong>：<ul><li>本地数据库已存26万产品（7.1GB），目标扩充至千万级，但服务器成本高。</li><li>当前爬取依赖搜索引擎（如Google），需解决代理问题（国内服务器直连国外网站易被封）。</li></ul></li><li><strong>解决方案</strong>：<ul><li><strong>代理架构调整</strong>：<ul><li>腾讯云服务器 → 本地代理 → 国外网站，避免直接国际流量。</li></ul></li><li><strong>增量爬取与去重</strong>：<ul><li>定时任务从MySQL提取新产品名，排除一个月内已搜索记录。</li><li>支持图片搜索（如Google Lens）补充文本搜索的不足。</li></ul></li><li><strong>数据应用</strong>：<ul><li>在商品详情页增加“类似产品推荐”功能，基于爬取数据提供参考。</li></ul></li></ul></li><li><strong>任务分工</strong>：<ul><li>代理配置优化（A负责）。</li><li>朱晨实现查询构建与任务提交逻辑。</li></ul></li></ul><hr><h5 id="3-外部数据爬取工具开发"><a href="#3-外部数据爬取工具开发" class="headerlink" title="3. 外部数据爬取工具开发"></a><strong>3. 外部数据爬取工具开发</strong></h5><ul><li><strong>需求场景</strong>：<ul><li>从竞品网站爬取产品数据并转为结构化文本（Markdown），供AI分析。</li></ul></li><li><strong>技术方案</strong>：<ul><li><strong>分阶段处理URL</strong>：<ol><li><strong>直接HTML转Markdown</strong>：适用于静态页面（70%-80%案例）。</li><li><strong>无头浏览器渲染</strong>：处理JS动态内容（如React单页应用）。</li><li><strong>付费反爬服务</strong>（如ScrapingBee）：应对Cloudflare等验证（成本高，备用方案）。</li></ol></li><li><strong>开源工具整合</strong>：<ul><li>使用<code>readability</code>库提取主体内容，<code>html-to-markdown</code>转换格式。</li></ul></li></ul></li><li><strong>挑战</strong>：<ul><li>反爬机制（如LinkedIn）需特殊处理，可能依赖第三方API。</li><li>成本控制：优先低费用方案，仅对关键数据调用高价服务。</li></ul></li></ul><hr><h4 id="三、其他工具与资源推荐"><a href="#三、其他工具与资源推荐" class="headerlink" title="三、其他工具与资源推荐"></a><strong>三、其他工具与资源推荐</strong></h4><ul><li><strong>AI代码助手</strong>：<ul><li>推荐<code>Cursor</code>（付费）或<code>CherryStudio</code>（开源），本地运行更流畅。</li><li>模型优先级：Claude 3.5（代码） &gt; Gemini 1.5（多模态） &gt; GPT-4（综合）。</li></ul></li><li><strong>免费资源</strong>：<ul><li>Google AI Studio提供高额免费API调用额度。</li></ul></li></ul><hr><h4 id="四、下一步行动项"><a href="#四、下一步行动项" class="headerlink" title="四、下一步行动项"></a><strong>四、下一步行动项</strong></h4><ol><li><strong>图片生成</strong>：<ul><li>小关完善编辑器功能，接入多模态API。</li></ul></li><li><strong>产品库扩充</strong>：<ul><li>朱晨实现增量爬取任务，A完成代理配置。</li></ul></li><li><strong>爬虫工具</strong>：<ul><li>A补充URL转Markdown的Demo代码，团队评估优先级。</li></ul></li></ol><p><strong>会议结束</strong>：无进一步问题，后续按分工推进。</p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;讨论了图片生成与产品库扩充&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="会议总结" scheme="https://blog.gwjzc.top/categories/%E4%BC%9A%E8%AE%AE%E6%80%BB%E7%BB%93/"/>
    
    <category term="葵普" scheme="https://blog.gwjzc.top/categories/%E4%BC%9A%E8%AE%AE%E6%80%BB%E7%BB%93/%E8%91%B5%E6%99%AE/"/>
    
    
    <category term="会议总结" scheme="https://blog.gwjzc.top/tags/%E4%BC%9A%E8%AE%AE%E6%80%BB%E7%BB%93/"/>
    
    <category term="葵普" scheme="https://blog.gwjzc.top/tags/%E8%91%B5%E6%99%AE/"/>
    
  </entry>
  
  <entry>
    <title>产品优化讨论</title>
    <link href="https://blog.gwjzc.top/archives/cc552ea2.html"/>
    <id>https://blog.gwjzc.top/archives/cc552ea2.html</id>
    <published>2025-03-20T02:52:16.000Z</published>
    <updated>2025-03-20T02:52:16.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>产品优化讨论</p></blockquote><span id="more"></span><h3 id="会议总结：产品优化讨论"><a href="#会议总结：产品优化讨论" class="headerlink" title="会议总结：产品优化讨论"></a><strong>会议总结：产品优化讨论</strong></h3><p><strong>时间</strong>：2025/03/20 17:14 - 17:52<br><strong>参与人</strong>：说话人A（主导）、说话人B（开发）、说话人C（前端）</p><hr><h4 id="一、核心议题与结论"><a href="#一、核心议题与结论" class="headerlink" title="一、核心议题与结论"></a><strong>一、核心议题与结论</strong></h4><ol><li><strong>多品类产品分析逻辑</strong><ul><li>当前实现：用户选择两个不同品类时，系统独立分析每个产品（分别向AI发送请求），返回结果以数组形式包含两个产品的分析数据。</li><li>问题点：<ul><li>总结功能是否基于两个产品联合生成？需确认AI返回的总结是否合并了多产品信息。</li><li>定位客户时，需明确搜索逻辑（是否分别走接口）。</li></ul></li></ul></li><li><strong>搜索优化</strong><ul><li><strong>文本搜索 vs 图片搜索</strong>：<ul><li>当前使用产品标题（name）进行文本搜索，但图片搜索效果更优（如一次性刀叉勺案例）。</li><li>图片搜索需处理向量相似度阈值问题（不同产品阈值差异大，可能导致结果过多或过少）。</li></ul></li><li><strong>改进方向</strong>：<ul><li>优先使用图片URL链接搜索，限制返回结果数量（如Top 100）。</li><li>前端需调整产品列表搜索逻辑，忽略大小写（SQL查询优化）。</li></ul></li></ul></li><li><strong>客户定位逻辑</strong><ul><li>当前流程：<ol><li>分别搜索每个产品，获取关联商品列表（如产品A搜出20个，产品B搜出22个）。</li><li>去重后汇总店铺（如42个），按商品数量排序，随机选取5~15个目标客户。</li></ol></li><li>问题点：<ul><li>部分店铺类目杂乱（如自然流量店铺含上万商品），需标记或过滤异常数据。</li></ul></li></ul></li><li><strong>数据源与联系人问题</strong><ul><li>当前联系人数据为Mock数据，需接入真实来源（如爬虫或第三方API）。</li><li>产品库数据需自动化更新（目前依赖本地代理爬取国外网站，线上部署需解决访问速度问题）。</li></ul></li><li><strong>流式输出技术问题</strong><ul><li>当前AI接口是否支持流式输出结构体（如JSON）尚不明确，需进一步测试：<ul><li>文本聊天可流式输出，但结构体返回机制未验证。</li><li>服务端可尝试转换响应为流式JS对象，需与前端配合调试。</li></ul></li></ul></li><li><strong>前端交互优化</strong><ul><li>产品列表中的“未选中”状态逻辑需调整：<ul><li>当前未选中产品在分析时会被忽略，但列表需保留记录（后续可能需复制或删除功能）。</li><li>建议默认全选，或仅支持多选删除操作。</li></ul></li></ul></li></ol><hr><h4 id="二、新增功能讨论：外部数据集成"><a href="#二、新增功能讨论：外部数据集成" class="headerlink" title="二、新增功能讨论：外部数据集成"></a><strong>二、新增功能讨论：外部数据集成</strong></h4><ol><li><strong>公司深度分析工具</strong><ul><li><strong>流程</strong>：输入公司名称 → AI自动研究（耗时约10分钟，优化后目标3-4分钟） → 生成报告。</li><li><strong>输出内容</strong>：<ul><li>基础信息（创始人、员工规模、融资情况等）。</li><li>进出口数据（海关记录、供应链伙伴、热门产品）。</li><li>新闻动态（如融资目的、业务扩展计划）。</li></ul></li><li><strong>技术实现</strong>：<ul><li>多步骤AI反思模型（搜索→分析→总结），依赖长上下文模型（如GPT-4o）。</li><li>成本控制：分阶段执行任务（初步分析后决定是否深度研究），单次任务目标成本＜5元。</li></ul></li></ul></li><li><strong>应用场景</strong><ul><li>销售辅助：手动调用分析工具，匹配客户需求与产品库。</li><li>后续集成：在客户搜索环节直接联网分析，评估合作潜力（如销量、产品匹配度）。</li></ul></li></ol><hr><h4 id="三、后续行动计划"><a href="#三、后续行动计划" class="headerlink" title="三、后续行动计划"></a><strong>三、后续行动计划</strong></h4><ol><li><strong>技术优化</strong><ul><li>图片搜索优先于文本搜索，调整向量相似度阈值策略。</li><li>验证AI结构体流式输出可行性，协调前后端测试。</li><li>自动化产品库更新（部署线上爬虫，解决代理问题）。</li></ul></li><li><strong>功能迭代</strong><ul><li>客户定位逻辑增强：过滤异常店铺，优化随机选取算法。</li><li>外部数据工具集成：简化输出形式（如表格化公司关键数据）。</li></ul></li><li><strong>会议待决事项</strong><ul><li>流式输出技术细节确认（联系AI服务商或查阅SDK文档）。</li><li>未选中产品列表的交互设计最终方案。</li></ul></li></ol><p><strong>备注</strong>：部分问题需次日会议进一步讨论（如产品列表交互优化）。</p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;产品优化讨论&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="会议总结" scheme="https://blog.gwjzc.top/categories/%E4%BC%9A%E8%AE%AE%E6%80%BB%E7%BB%93/"/>
    
    <category term="葵普" scheme="https://blog.gwjzc.top/categories/%E4%BC%9A%E8%AE%AE%E6%80%BB%E7%BB%93/%E8%91%B5%E6%99%AE/"/>
    
    
    <category term="会议总结" scheme="https://blog.gwjzc.top/tags/%E4%BC%9A%E8%AE%AE%E6%80%BB%E7%BB%93/"/>
    
    <category term="葵普" scheme="https://blog.gwjzc.top/tags/%E8%91%B5%E6%99%AE/"/>
    
  </entry>
  
  <entry>
    <title>近期关于图像相关的技术选型及总结</title>
    <link href="https://blog.gwjzc.top/archives/71bcff18.html"/>
    <id>https://blog.gwjzc.top/archives/71bcff18.html</id>
    <published>2022-08-05T09:41:41.000Z</published>
    <updated>2022-08-05T09:41:41.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>近期有相关业务需要自适应抠图，在了解到阿里云有相关api后 进行了对接。总结一下踩的坑～</p></blockquote><span id="more"></span><h3 id="阿里云视觉智能开放平台"><a href="#阿里云视觉智能开放平台" class="headerlink" title="阿里云视觉智能开放平台"></a>阿里云视觉智能开放平台</h3><p>阿里云视觉智能开放平台将围绕多个视觉领域，例如：通用、图像、视频、目标识别以及3D、AR/VR等类目，不断的为您提供多种视觉AI能力。具体方向包括：</p><ul><li>人脸人体</li><li>文字识别</li><li>商品理解</li><li>内容审核</li><li>图像识别</li><li>分割抠图</li><li>图像生产</li><li>视觉搜索</li><li>视频理解</li><li>视频分割</li><li>视频生产</li><li>视频搜索</li><li>目标检测</li><li>3D 视觉</li><li>AR/VR</li></ul><p>​    之前用阿里云这个平台做个文字识别感觉还是很不错的。api的对接以及文档规范程度都不错。按流量收费性价比也很高。这一次的新业务也用到了自适应抠图。正好阿里云平台提供了分割抠图</p><h3 id="人体分割"><a href="#人体分割" class="headerlink" title="人体分割"></a>人体分割</h3><h4 id="输入限制"><a href="#输入限制" class="headerlink" title="输入限制"></a>输入限制</h4><ul><li>图像格式：JPEG、JPG、PNG、BMP。</li><li>图像大小：不超过3 MB。</li><li>图像分辨率：大于32×32像素，小于2000×2000像素。</li><li>URL地址不能包含中文字符。</li></ul><p>​    首先改api在2QPS的时候是免费的。所以我们写demo的时候需要控制一个队列来让其满足2QPS。通过ImageMagick 调用相关go的api cgo完成对一些图像的预处理让其符合规范。而且阿里云处理好的图像底部以及大小位置并不是透明的。位置有坐标信息我们可以通过ImageMagick重新定位这些元素以及让背景透明化</p><p>以下是核心代码</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">segBodyRateLimit = time.Tick(time.Second / <span class="number">2</span>)</span><br><span class="line">segBodyReqQueue = <span class="built_in">make</span>([]<span class="keyword">string</span>, <span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">HandleSegmentBody</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> (</span><br><span class="line">req  requestBody.SegmentReq</span><br><span class="line">lock sync.Mutex</span><br><span class="line">)</span><br><span class="line">err := c.BindJSON(&amp;req)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">logrus.Println(<span class="string">&quot;bind requestBody.SegmentReq failed err:&quot;</span>, err)</span><br><span class="line">handler.ResponseJson(c, <span class="string">&quot;&quot;</span>, errno.BadRequest)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">lock.Lock()</span><br><span class="line">segBodyReqQueue = <span class="built_in">append</span>(segBodyReqQueue, req.Url)</span><br><span class="line">lock.Unlock()</span><br><span class="line">u, err := segmentBody()</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="comment">//进行对常见的错误处理</span></span><br><span class="line">ExplainErr(c, err)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//处理照片 自适应裁剪</span></span><br><span class="line">localFile, err := imageMagick.TrimImageByUrl(u.Resp.Url)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">logrus.Println(<span class="string">&quot;[imageMagick trim err]:&quot;</span>, err.Error())</span><br><span class="line">handler.ResponseJson(c, <span class="string">&quot;自适应处理图片失败&quot;</span>, errno.ErrTrimImageMagickFail)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//图像地址持久化</span></span><br><span class="line">returnUrl, err := handler.UploadToAliyunOssByLocalFile(localFile)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">logrus.Println(<span class="string">&quot;[upload err]:&quot;</span>, err.Error())</span><br><span class="line">handler.ResponseJson(c, <span class="string">&quot;上传到阿里云oss失败&quot;</span>, errno.ErrUploadAliOssFail)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">u.Resp.Url = returnUrl</span><br><span class="line"></span><br><span class="line">handler.ResponseJson(c, u, <span class="literal">nil</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="踩过的坑"><a href="#踩过的坑" class="headerlink" title="踩过的坑"></a>踩过的坑</h3><ul><li>一开始把阿里云处理的结果直接返回给前端，居然发现背景是白色而不是透明的。就自己引入了ImageMagick对图像进行了处理</li><li>ImageMagick配合go的生产环境搭配起来是个坑。我是利用docker-compose 编排的服务。所以在写dockerfile的时候修改了好几个版本，一开始我自己本地mac环境跑的是iamgeMagick 6版本。本地用是没什么问题打，但是在docker环境跑6一直失败，调研之后发现。由于ImageMagick依赖很多第三方的包比如libjpeg-dev libpng-dev libtiff-dev 在ubuntu中和go的兼容性6的版本做的不好，智能用7</li><li>在docker引入ImageMagick的缺点。docker的编排时间由原来的1分钟到现在的4分钟。由于ImageMagick所依赖的依赖包比较多。所以后续针对CI、CD的时间还需要进一步的优化</li></ul><h3 id="dockerfile"><a href="#dockerfile" class="headerlink" title="dockerfile"></a>dockerfile</h3><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FROM</span> golang:<span class="number">1.14</span> as builder</span><br><span class="line"></span><br><span class="line"><span class="keyword">WORKDIR</span><span class="bash"> /app</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">ENV</span> DEBIAN_FRONTEND noninteractive</span><br><span class="line"><span class="keyword">ENV</span> GO111MODULE on</span><br><span class="line"><span class="keyword">ENV</span> GOPROXY=https://goproxy.cn</span><br><span class="line"><span class="keyword">ENV</span> CGO_ENABLED=<span class="number">1</span></span><br><span class="line"><span class="keyword">ENV</span> CGO_CFLAGS_ALLOW=-Xpreprocessor</span><br><span class="line"><span class="keyword">ENV</span> GIN_MODE release</span><br><span class="line"><span class="keyword">ENV</span> IMAGEMAGICK_VERSION=<span class="number">7.0</span>.<span class="number">8</span>-<span class="number">11</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># install build essentials</span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> apt-get update &amp;&amp; \</span></span><br><span class="line"><span class="bash">    apt-get install -y wget build-essential pkg-config --no-install-recommends</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Install ImageMagick deps</span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> apt-get -q -y install libjpeg-dev libpng-dev libtiff-dev \</span></span><br><span class="line"><span class="bash">    libgif-dev libx11-dev --no-install-recommends</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">COPY</span><span class="bash"> go.mod go.sum ./</span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> go mod download</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">COPY</span><span class="bash"> . .</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> <span class="built_in">cd</span> static/font/tmp &amp;&amp; \</span></span><br><span class="line"><span class="bash">tar xvzf ImageMagick-<span class="variable">$&#123;IMAGEMAGICK_VERSION&#125;</span>.tar.gz &amp;&amp; \</span></span><br><span class="line"><span class="bash"><span class="built_in">cd</span> ImageMagick* &amp;&amp; \</span></span><br><span class="line"><span class="bash">./configure \</span></span><br><span class="line"><span class="bash">    --without-magick-plus-plus \</span></span><br><span class="line"><span class="bash">    --without-perl \</span></span><br><span class="line"><span class="bash">    --disable-openmp \</span></span><br><span class="line"><span class="bash">    --with-gvc=no \</span></span><br><span class="line"><span class="bash">    --disable-docs &amp;&amp; \</span></span><br><span class="line"><span class="bash">make -j$(nproc) &amp;&amp; make install &amp;&amp; \</span></span><br><span class="line"><span class="bash">ldconfig /usr/<span class="built_in">local</span>/lib</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> go build -a -installsuffix cgo -o api ./main.go</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">CMD</span><span class="bash"> [<span class="string">&quot;/app/api&quot;</span>]</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;近期有相关业务需要自适应抠图，在了解到阿里云有相关api后 进行了对接。总结一下踩的坑～&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="总结" scheme="https://blog.gwjzc.top/categories/%E6%80%BB%E7%BB%93/"/>
    
    <category term="ImageMagick" scheme="https://blog.gwjzc.top/categories/%E6%80%BB%E7%BB%93/ImageMagick/"/>
    
    
    <category term="总结" scheme="https://blog.gwjzc.top/tags/%E6%80%BB%E7%BB%93/"/>
    
    <category term="ImageMagick" scheme="https://blog.gwjzc.top/tags/ImageMagick/"/>
    
  </entry>
  
  <entry>
    <title>go-zero 入门概述篇</title>
    <link href="https://blog.gwjzc.top/archives/1180b2c7.html"/>
    <id>https://blog.gwjzc.top/archives/1180b2c7.html</id>
    <published>2022-06-11T10:07:05.000Z</published>
    <updated>2022-06-11T10:07:05.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>go-zero 包含极简的 API 定义和生成工具 goctl，可以根据定义的 api 文件一键生成 Go, iOS, Android, Kotlin, Dart, TypeScript, JavaScript 代码，并可直接运行。</p></blockquote><span id="more"></span><h1 id="1、简介："><a href="#1、简介：" class="headerlink" title="1、简介："></a>1、简介：</h1><p>go-zero（收录于 CNCF 云原生技术全景图：<a href="https://landscape.cncf.io/?selected=go-zero%EF%BC%89%E6%98%AF%E4%B8%80%E4%B8%AA%E9%9B%86%E6%88%90%E4%BA%86%E5%90%84%E7%A7%8D%E5%B7%A5%E7%A8%8B%E5%AE%9E%E8%B7%B5%E7%9A%84">https://landscape.cncf.io/?selected=go-zero）是一个集成了各种工程实践的</a> web 和 rpc 框架。通过弹性设计保障了大并发服务端的稳定性，经受了充分的实战检验。</p><p>使用 go-zero 的好处：</p><ul><li>轻松获得支撑千万日活服务的稳定性</li><li>内建级联超时控制、限流、自适应熔断、自适应降载等微服务治理能力，无需配置和额外代码</li><li>微服务治理中间件可无缝集成到其它现有框架使用</li><li>极简的 API 描述，一键生成各端代码</li><li>自动校验客户端请求参数合法性</li><li>大量微服务治理和并发工具包</li></ul><p><img src="https://image.dieselchen.work/uPic/2022/08/31/image-20220831181325912.png" alt="image-20220831181325912"></p><h1 id="2、特点"><a href="#2、特点" class="headerlink" title="2、特点"></a>2、特点</h1><p>go-zero 是一个集成了各种工程实践的包含 web 和 rpc 框架，有如下主要特点：</p><ul><li>强大的工具支持，尽可能少的代码编写</li><li>极简的接口</li><li>完全兼容 net/http</li><li>支持中间件，方便扩展</li><li>高性能</li><li>面向故障编程，弹性设计</li><li>内建服务发现、负载均衡</li><li>内建限流、熔断、降载，且自动触发，自动恢复</li><li>API 参数自动校验</li><li>超时级联控制</li><li>自动缓存控制</li><li>链路跟踪、统计报警等</li><li>高并发支撑，稳定保障了疫情期间每天的流量洪峰</li></ul><h1 id="3、选择go-zero原因"><a href="#3、选择go-zero原因" class="headerlink" title="3、选择go-zero原因"></a>3、选择go-zero原因</h1><p>go-zero 为提供了许多高并发场景下的实用工具，如：</p><ul><li>为了降低接口耗时往往需要并发的请求依赖的服务，这个时候可以使用 mapreduce 并行的处理请求；</li><li>面对海量请求为了降低Redis压力和提高响应时间，可以使用 collection 构建本地缓存；</li><li>避免用户连续请求造成服务压力可以使用 limit 做用户级别的限流等等。</li></ul><p>好的框架能够给项目开发带来事半功倍的效果，Go-zero的简洁易用性与内置的开箱即用的工具和服务治理能力助力构建一个高并发高可靠的系统。</p><h1 id="4、需求"><a href="#4、需求" class="headerlink" title="4、需求"></a>4、需求</h1><p>为了更加贴近真实的项目开发，项目会基于真实的产品需求进行构建。商城是接触比较多而又比较复杂的系统，所以决定通过构建商城系统来学习如何基于 go-zero 构建高并发系统。实现一个 mvp版本，在mvp版本中把 go-zero 的核心功能和构建高并发商城系统的核心点演示。</p><p>如下思维导图列出了该电商系统主要实现的功能：</p><p><img src="https://image.dieselchen.work/uPic/2022/08/31/image-20220831181404402.png" alt="image-20220831181404402"></p><p>从以上思维导图可以看出整个电商系统功能还是比较多的，根据业务职能做如下微服务的划分：</p><ul><li>商品服务(product) - 商品的添加、信息查询、库存管理等功能</li><li>购物车服务(cart) - 购物车的增删改查</li><li>订单服务(order) - 生成订单，订单管理</li><li>支付服务(pay) - 通过调用第三方支付实现支付功能</li><li>账号服务(user) - 用户信息、等级、封禁、地址管理</li><li>推荐服务(recommend) - 首页商品推荐</li><li>评论服务(reply) - 商品的评论功能、评论的回复功能</li></ul>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;go-zero 包含极简的 API 定义和生成工具 goctl，可以根据定义的 api 文件一键生成 Go, iOS, Android, Kotlin, Dart, TypeScript, JavaScript 代码，并可直接运行。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="Golang" scheme="https://blog.gwjzc.top/categories/Golang/"/>
    
    
    <category term="Golang" scheme="https://blog.gwjzc.top/tags/Golang/"/>
    
  </entry>
  
  <entry>
    <title>ImageMagick学习笔记</title>
    <link href="https://blog.gwjzc.top/archives/18e82ec3.html"/>
    <id>https://blog.gwjzc.top/archives/18e82ec3.html</id>
    <published>2022-05-01T09:18:08.000Z</published>
    <updated>2022-05-01T09:18:08.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>ImageMagick是一个神奇的软件，你可以通过命令行进行对图片你想到的一切操作……</p></blockquote><span id="more"></span><p>在认识ImageMagick之前，我使用的图像浏览软件是KuickShow，截图软件是KSnapShot，这两款软件都是KDE附带的软件，用起来也是蛮方便的。在一次偶然的机会中，我遇到了ImageMagick，才发现Linux竟然有如此功能强大的图像软件。</p><p>你将会发现，大部分的操作，你只要在终端下动动键盘即可，省得你用鼠标点来点去。</p><p>下面，我对ImageMagick的主要功能做一个简单的介绍，其中覆盖的大都是人们常用的一些功能，如果你要全面的了解它的知识，你可以看看它的man手册。</p><h2 id="convert"><a href="#convert" class="headerlink" title="convert"></a>convert</h2><p>convert顾名思义就是对图像进行转化，它主要用来对图像进行格式的转化，同时还可以做缩放、剪切、模糊、反转等操作。</p><ul><li><p>格式转化</p><p>比如把 foo.jpg 转化为 foo.png：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">convert foo.jpg foo.png</span><br></pre></td></tr></table></figure><p>如果要想把目录下所有的jpg文件都转化为gif，我们可借助于shell的强大功能：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find .&#x2F; -name &quot;*.jpg&quot; -exec convert &#123;&#125; &#123;&#125;.gif \;</span><br></pre></td></tr></table></figure><p>转化后的gif名称为 *.jpg.gif ，这样看起来不太自然，没关系，我们可以再来一步：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rename .jpg.gif .gif *.jpg.gif</span><br></pre></td></tr></table></figure><p>本来，我想在find的时候，用basename来取得不带后缀的文件名的，这样就不会形成.jpg.gif这种丑陋的名子了，可是不知道为什么，就是不行，如果你知道的话，告诉我</p><p>或者，你也可用shell script来完成上述的操作：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">for i in *.jpg</span><br><span class="line">do</span><br><span class="line">convert $i &#96;basename $i .jpg&#96;.gif</span><br><span class="line">done</span><br></pre></td></tr></table></figure><p>我们还可用mogrify来完成同样的效果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mogrify -format png *.jpg</span><br></pre></td></tr></table></figure><p>上面命令将会把目录下面所有的jpg文件转化为png格式。</p><p>convert还可以把多张照片转化成pdf格式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">convert *.jpg foo.pdf</span><br></pre></td></tr></table></figure></li><li><p>大小缩放</p><p>比如我们要为一个普通大小的图片做一个缩略图，我们可以这样</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">convert -resize 100x100 foo.jpg thumbnail.jpg</span><br></pre></td></tr></table></figure><p>你也可以用百分比，这样显的更为直观：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">convert -resize 50%x50% foo.jpg thumbnail.jpg</span><br></pre></td></tr></table></figure><p>convert会自动地考虑在缩放图像大小时图像的高宽的比例，也就是说着新的图像的高宽比与原图相同。</p><p>我们还可以批量生成缩略图：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mogrify -sample 80x60 *.jpg</span><br></pre></td></tr></table></figure><p>注意，这个命令会覆盖原来的图片，不过你可以在操作前，先把你的图片备份一下。</p></li><li><p>加边框</p><p>在一张照片的四周加上边框，可以用 -mattecolor 参数，比如某位同志牺牲了，我们需要为他做一张黑边框的遗像，可以这样：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">convert -mattecolor &quot;#000000&quot; -frame 60x60 yourname.jpg rememberyou.png</span><br></pre></td></tr></table></figure><p>其中，”#000000”是边框的颜色，边框的大小为60x60</p><p>你也可以这样加边框:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">convert -border 60x60 -bordercolor &quot;#000000&quot; yourname.jpg rememberyou.png</span><br></pre></td></tr></table></figure></li><li><p>在图片上加文字</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">convert -fill green -pointsize 40 -draw &#39;text 10,50 &quot;charry.org&quot;&#39; foo.png bar.png</span><br></pre></td></tr></table></figure><p>上面的命令在距离图片的左上角10x50的位置，用绿色的字写下charry.org，如果你要指定别的字体，可以用-font参数。</p></li><li><p>模糊</p><p>高斯模糊:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">convert -blur 80 foo.jpg foo.png</span><br></pre></td></tr></table></figure><p>-blur参数还可以这样-blur 80x5。后面的那个5表示的是Sigma的值，这个是图像术语，我也不太清楚，总之，它的值对模糊的效果起关键的作用。</p></li><li><p>翻转</p><p>上下翻转：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">convert -flip foo.png bar.png</span><br></pre></td></tr></table></figure><p>左右翻转：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">convert -flop foo.png bar.png</span><br></pre></td></tr></table></figure></li><li><p>反色</p><p>形成底片的样子：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">convert -negate foo.png bar.png</span><br></pre></td></tr></table></figure></li><li><p>单色</p><p>把图片变为黑白颜色：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">convert -monochrome foo.png bar.png</span><br></pre></td></tr></table></figure></li><li><p>加噪声</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">convert -noise 3 foo.png bar.png</span><br></pre></td></tr></table></figure></li><li><p>油画效果</p><p>我们可用这个功能，把一张普通的图片，变成一张油画，效果非常的逼真</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">convert -paint 4 foo.png bar.png</span><br></pre></td></tr></table></figure></li><li><p>旋转</p><p>把一张图片，旋转一定的角度：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">convert -rotate 30 foo.png bar.png</span><br></pre></td></tr></table></figure><p>上面的30，表示向右旋转30度，如果要向左旋转，度数就是负数。</p></li><li><p>炭笔效果</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">convert -charcoal 2 foo.png bar.png</span><br></pre></td></tr></table></figure><p>形成炭笔或者说是铅笔画的效果。</p></li><li><p>散射</p><p>毛玻璃效果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">convert -spread 30 foo.png bar.png</span><br></pre></td></tr></table></figure></li><li><p>漩涡</p><p>以图片的中心作为参照，把图片扭转，形成漩涡的效果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">convert -swirl 67 foo.png bar.png</span><br></pre></td></tr></table></figure></li><li><p>凸起效果</p><p>用-raise来创建凸边：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">convert -raise 5x5 foo.png bar.png</span><br></pre></td></tr></table></figure><p>执行后，你会看到，照片的四周会一个5x5的边，如果你要一个凹下去的边，把-raise改为+raise就可以了。其实凸边和凹边看起来区别并不是很大。</p></li><li><p>其他</p><p>其他功能都是不太常用的，如果你感兴趣的话，可以看它的联机文档</p></li></ul><h2 id="import"><a href="#import" class="headerlink" title="import"></a>import</h2><p>import是一个用于屏幕截图的组件，下面列出的是我们常用的功能，其他的功能，你参考它的man好了。</p><ul><li><p>截取屏幕的任一矩形区域</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">import foo.png</span><br></pre></td></tr></table></figure><p>在输入上述的命令后，你的鼠标会变成一个十字，这个时候，你只要在想要截取的地方划一个矩形就可以了</p></li><li><p>截取程序的窗口</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">import -pause 3 -frame foo.png</span><br></pre></td></tr></table></figure><p>回车后，用鼠标在你想截的窗口上点一下即可。参数-frame的作用是告诉import，截图的时候把目标窗口的外框架带上，参数-pause的作用很重要，你可以试着把它去掉，对比一下，你会发现，目标窗口的标题栏是灰色的，pause就是让import稍微延迟一下，等你的目标窗口获得焦点了，才开始截图，这样的图才比较自然。</p></li><li><p>截取一个倾斜的窗口</p><p>如果想让你的截图比较cool，你可以把截取一个倾斜的窗口，方法如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">import -rotate 30 -pause 3 -frame foo.png</span><br></pre></td></tr></table></figure></li><li><p>截取整个屏幕</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">import -pause 3 -window root screen.png</span><br></pre></td></tr></table></figure><p>注意，暂停了3秒钟，你需要在3秒钟内切换到需要截取的画面噢。</p></li></ul><h2 id="display"><a href="#display" class="headerlink" title="display"></a>display</h2><p>display应该是我们使用的最为频繁的图像处理软件了，毕竟，还是看的多</p><ul><li><p>显示图片</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">display foo.png</span><br></pre></td></tr></table></figure><p>如果你要显示多个文件，你可以使用通配符</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">display *.png</span><br></pre></td></tr></table></figure></li><li><p>幻灯片</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">display -delay 5 *</span><br></pre></td></tr></table></figure><p>每隔5个百分之秒显示一张图片</p></li><li><p>一些快捷键</p><ol><li>space(空格): 显示下一张图片</li><li>backspace(回删键):显示上一张图片</li><li>h: 水平翻转</li><li>v: 垂直翻转</li><li>/:顺时针旋转90度</li><li>:逆时针旋转90度</li><li>&gt;: 放大</li><li>&lt;: 缩小</li><li>F7:模糊图片</li><li>Alt+s:把图片中间的像素旋转</li><li>Ctrl+s:图象另存</li><li>Ctrl+d:删除图片</li><li>q: 退出</li></ol></li></ul><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p>ImageMagick还提供有丰富的编程接口，比如，你可以用php来调用它，用ImageMagick来生成验证码图片，效果非常棒。</p><p>ImageMagick还有一个小工具identify，它可以用来显示一个图片文件的详悉信息，比如格式、分辨率、大小、色深等等，你都可用它来帮你的忙。</p><p>如果你对命令行不太熟悉，你也可以在图片上单击，你会发现，通过鼠标你也可以完成图像的编辑。</p><p>ImageMagick的网站：<a href="http://www.imagemagick.org/">www.imagemagick.org</a>。<a href="http://www.imagemagick.org/image/examples.jpg">这里</a>是ImageMagick加工过的图片的例子。</p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;ImageMagick是一个神奇的软件，你可以通过命令行进行对图片你想到的一切操作……&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="ImageMagick" scheme="https://blog.gwjzc.top/categories/ImageMagick/"/>
    
    
    <category term="ImageMagick" scheme="https://blog.gwjzc.top/tags/ImageMagick/"/>
    
  </entry>
  
  <entry>
    <title>Zookeeper学习笔记</title>
    <link href="https://blog.gwjzc.top/archives/398b07d0.html"/>
    <id>https://blog.gwjzc.top/archives/398b07d0.html</id>
    <published>2022-03-18T08:57:14.000Z</published>
    <updated>2022-03-18T08:57:14.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Zookeeper是一个分布式应用程序协调服务，主要负责集中维护配置信息的服务，提供分布式的同步机制。其所有的服务都是做为其他分布式应用的基础。</p></blockquote><span id="more"></span><h2 id="Zookeeper-介绍"><a href="#Zookeeper-介绍" class="headerlink" title="Zookeeper 介绍"></a>Zookeeper 介绍</h2><p>Zookeeper是Google Chubby的一个开源实现，是现在很多分布式应用的重要组件，包括诸如Hadoop、HBase、Kafka等，可以说现在Zookeeper是大家必须掌握的一门软件。</p><p>Zookeeper主要提供以下几种服务：<br>1、命名服务<br>2、配置管理<br>3、集群管理<br>4、分布式锁<br>5、队列管理</p><h2 id="Zookeeper的特点"><a href="#Zookeeper的特点" class="headerlink" title="Zookeeper的特点"></a>Zookeeper的特点</h2><ul><li>简单：Zookeeper的核心是一个精简的文件系统，它支持一些简单的操作和一些抽象操作，例如，排序和通知。</li><li>丰富：Zookeeper的原语操作是很丰富的，可实现一些协调数据结构和协议。例如，分布式队列、分布式锁和一组同级别节点中的“领导者选举”。</li><li>高可用：Zookeeper支持集群模式，可以很容易的解决单点故障问题。</li><li>松耦合式交互：不同进程间的交互不需要了解彼此，甚至可以不必同时存在，某进程在zookeeper中留下消息后，该进程结束后其它进程还可以读这条消息。</li><li>资源库：Zookeeper实现了一个关于通用协调模式的开源共享存储库，能使开发者免于编写这类通用协议。</li></ul><h2 id="常用操作"><a href="#常用操作" class="headerlink" title="常用操作"></a>常用操作</h2><p>为了熟悉Zookeeper的常用操作，最简单的办法就是使用Docker。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ docker pull zookeeper</span><br><span class="line"><span class="comment"># 完成后启动zookeeper</span></span><br><span class="line">$ docker run -p 2181:2181 zookeeper</span><br><span class="line"><span class="comment"># 重新打开一个Terminal界面，查找到当前容器的ID，登陆到容器中</span></span><br><span class="line">$ docker ps</span><br><span class="line">CONTAINER ID        IMAGE               COMMAND                  CREATED              STATUS              PORTS                                        NAMES</span><br><span class="line">63c3aa117fca        zookeeper           <span class="string">&quot;/docker-entrypoint.…&quot;</span>   About a minute ago   Up About a minute   2888/tcp, 0.0.0.0:2181-&gt;2181/tcp, 3888/tcp   infallible_saha</span><br><span class="line">$ docker <span class="built_in">exec</span> -it 63c3aa117fca bash</span><br></pre></td></tr></table></figure><p>现在一个单机版的Zookeeper就运行起来了，可以尝试常用的命令了。</p><h3 id="查看Server运行状态"><a href="#查看Server运行状态" class="headerlink" title="查看Server运行状态"></a>查看Server运行状态</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">bash-4.4<span class="comment"># ./zkServer.sh status</span></span><br><span class="line">ZooKeeper JMX enabled by default</span><br><span class="line">Using config: /conf/zoo.cfg</span><br><span class="line">Mode: standalone</span><br></pre></td></tr></table></figure><h3 id="客户端连接服务器"><a href="#客户端连接服务器" class="headerlink" title="客户端连接服务器"></a>客户端连接服务器</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">bash-4.4<span class="comment"># ./zkCli.sh </span></span><br><span class="line">Connecting to localhost:2181</span><br></pre></td></tr></table></figure><h3 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h3><ul><li>查看: <code>ls</code></li><li>获取节点数据和更新信息: <code>get /zookeeper</code></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[zk: localhost:2181(CONNECTED) 3] get /zookeeper</span><br><span class="line"></span><br><span class="line">cZxid = 0x0</span><br><span class="line">ctime = Thu Jan 01 00:00:00 GMT 1970</span><br><span class="line">mZxid = 0x0</span><br><span class="line">mtime = Thu Jan 01 00:00:00 GMT 1970</span><br><span class="line">pZxid = 0x0</span><br><span class="line">cversion = -1</span><br><span class="line">dataVersion = 0</span><br><span class="line">aclVersion = 0</span><br><span class="line">ephemeralOwner = 0x0</span><br><span class="line">dataLength = 0</span><br><span class="line">numChildren = 1</span><br></pre></td></tr></table></figure><ul><li>获取节点的更新信息: <code>stat /zookeeper</code></li><li>创建节点: <code>craete [-s] [-e] path data acl</code>，<code>-s</code>表示创建顺序节点，<code>-e</code>表示创建临时节点。</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[zk: localhost:2181(CONNECTED) 6] create /spring hello</span><br><span class="line">Created /spring</span><br><span class="line">[zk: localhost:2181(CONNECTED) 9] get /spring</span><br><span class="line">hello</span><br><span class="line">cZxid = 0x4</span><br><span class="line">ctime = Fri Apr 05 09:30:55 GMT 2019</span><br><span class="line">mZxid = 0x4</span><br><span class="line">mtime = Fri Apr 05 09:30:55 GMT 2019</span><br><span class="line">pZxid = 0x4</span><br><span class="line">cversion = 0</span><br><span class="line">dataVersion = 0</span><br><span class="line">aclVersion = 0</span><br><span class="line">ephemeralOwner = 0x0</span><br><span class="line">dataLength = 5</span><br><span class="line">numChildren = 0</span><br></pre></td></tr></table></figure><ul><li>修改节点: <code>set path data [version]</code>，可以看到dataVersion变成了1</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[zk: localhost:2181(CONNECTED) 11] <span class="built_in">set</span> /spring spring-v1</span><br><span class="line">cZxid = 0x4</span><br><span class="line">ctime = Fri Apr 05 09:30:55 GMT 2019</span><br><span class="line">mZxid = 0x5</span><br><span class="line">mtime = Fri Apr 05 09:34:19 GMT 2019</span><br><span class="line">pZxid = 0x4</span><br><span class="line">cversion = 0</span><br><span class="line">dataVersion = 1</span><br><span class="line">aclVersion = 0</span><br><span class="line">ephemeralOwner = 0x0</span><br><span class="line">dataLength = 9</span><br><span class="line">numChildren = 0</span><br></pre></td></tr></table></figure><ul><li>删除节点: <code>delete path [version]</code></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[zk: localhost:2181(CONNECTED) 17] delete /spring</span><br><span class="line">[zk: localhost:2181(CONNECTED) 18] get /spring</span><br><span class="line">Node does not exist: /spring</span><br></pre></td></tr></table></figure><ul><li>设置watch事件: <code>stat path [watch]</code></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[zk: localhost:2181(CONNECTED) 33] <span class="built_in">stat</span> /spring/bootx watch</span><br><span class="line">Node does not exist: /spring/bootx</span><br><span class="line">[zk: localhost:2181(CONNECTED) 34] create /spring/bootx bootx</span><br><span class="line">Created /spring/bootx</span><br><span class="line"></span><br><span class="line">WATCHER::</span><br><span class="line">[zk: localhost:2181(CONNECTED) 35] </span><br><span class="line">WatchedEvent state:SyncConnected <span class="built_in">type</span>:NodeCreated path:/spring/bootx</span><br></pre></td></tr></table></figure><ul><li>设置watch事件: <code>get path [watch]</code></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">[zk: localhost:2181(CONNECTED) 38] get /spring/booty watch</span><br><span class="line">new-boot-y</span><br><span class="line">cZxid = 0xc</span><br><span class="line">ctime = Fri Apr 05 13:38:36 GMT 2019</span><br><span class="line">mZxid = 0xd</span><br><span class="line">mtime = Fri Apr 05 13:38:48 GMT 2019</span><br><span class="line">pZxid = 0xc</span><br><span class="line">cversion = 0</span><br><span class="line">dataVersion = 1</span><br><span class="line">aclVersion = 0</span><br><span class="line">ephemeralOwner = 0x0</span><br><span class="line">dataLength = 10</span><br><span class="line">numChildren = 0</span><br><span class="line">[zk: localhost:2181(CONNECTED) 39] <span class="built_in">set</span> /spring/booty nnew-boot-y</span><br><span class="line"></span><br><span class="line">WATCHER::</span><br><span class="line"></span><br><span class="line">WatchedEvent state:SyncConnected <span class="built_in">type</span>:NodeDataChanged path:/spring/booty</span><br><span class="line">cZxid = 0xc</span><br><span class="line">ctime = Fri Apr 05 13:38:36 GMT 2019</span><br><span class="line">mZxid = 0xe</span><br><span class="line">mtime = Fri Apr 05 13:39:26 GMT 2019</span><br><span class="line">pZxid = 0xc</span><br><span class="line">cversion = 0</span><br><span class="line">dataVersion = 2</span><br><span class="line">aclVersion = 0</span><br><span class="line">ephemeralOwner = 0x0</span><br><span class="line">dataLength = 11</span><br><span class="line">numChildren = 0</span><br></pre></td></tr></table></figure><ul><li>xxxx</li><li>xxxx</li></ul><h3 id="ACL权限"><a href="#ACL权限" class="headerlink" title="ACL权限"></a>ACL权限</h3><p>ZK的节点有5种操作权限：<code>CREATE、READ、WRITE、DELETE、ADMIN</code> 也就是 增、删、改、查、管理权限。</p><blockquote><p>注：这5种权限中，delete是指对子节点的删除权限，其它4种权限指对自身节点的操作权限。</p></blockquote><p>身份的认证有4种方式：</p><ul><li>world：默认方式，相当于全世界都能访问</li><li>auth：代表已经认证通过的用户(cli中可以通过addauth digest user:pwd 来添加当前上下文中的授权用户)</li><li>digest：即用户名:密码这种方式认证，这也是业务系统中最常用的</li><li>ip：使用Ip地址认证</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[zk: localhost:2181(CONNECTED) 42] getAcl /spring</span><br><span class="line"><span class="string">&#x27;world,&#x27;</span>anyone</span><br><span class="line">: cdrwa</span><br><span class="line">[zk: localhost:2181(CONNECTED) 43] getAcl /zookeeper</span><br><span class="line"><span class="string">&#x27;world,&#x27;</span>anyone</span><br><span class="line">: cdrwa</span><br></pre></td></tr></table></figure><h2 id="四字命令"><a href="#四字命令" class="headerlink" title="四字命令"></a>四字命令</h2><p>ZooKeeper 支持某些特定的四字命令字母与其的交互。它们大多是查询命令，用来获取 ZooKeeper 服务的当前状态及相关信息。用户在客户端可以通过 <code>telnet</code> 或 <code>nc</code> 向 ZooKeeper 提交相应的命令。 ZooKeeper 常用四字命令如下表所示。</p><table><thead><tr><th>Zookeeper四字命令</th><th>功能描述</th></tr></thead><tbody><tr><td>conf</td><td>输出相关服务配置的详细信息。</td></tr><tr><td>cons</td><td>列出所有连接到服务器的客户端的完全的连接 / 会话的详细信息。包括“接受 / 发送”的包数量、会话 id 、操作延迟、最后的操作执行等等信息。</td></tr><tr><td>dump</td><td>列出未经处理的会话和临时节点。</td></tr><tr><td>envi</td><td>输出关于服务环境的详细信息（区别于 conf 命令）。</td></tr><tr><td>reqs</td><td>列出未经处理的请求</td></tr><tr><td>ruok</td><td>测试服务是否处于正确状态。如果确实如此，那么服务返回“ imok ”，否则不做任何相应。</td></tr><tr><td>stat</td><td>输出关于性能和连接的客户端的列表。</td></tr><tr><td>wchs</td><td>列出服务器 watch 的详细信息。</td></tr><tr><td>wchc</td><td>通过 session 列出服务器 watch 的详细信息，它的输出是一个与 watch 相关的会话的列表。</td></tr><tr><td>wchp</td><td>通过路径列出服务器 watch 的详细信息。它输出一个与 session 相关的路径。</td></tr></tbody></table><p>使用方法</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">echo</span> <span class="built_in">stat</span> | nc 127.0.0.1 2181</span><br><span class="line">Zookeeper version: 3.4.13-2d71af4dbe22557fda74f9a9b4309b15a7487f03, built on 06/29/2018 04:05 GMT</span><br><span class="line">Clients:</span><br><span class="line"> /172.17.0.1:53548[0](queued=0,recved=1,sent=0)</span><br><span class="line"> /127.0.0.1:56306[1](queued=0,recved=483,sent=485)</span><br><span class="line"></span><br><span class="line">Latency min/avg/max: 0/0/45</span><br><span class="line">Received: 500</span><br><span class="line">Sent: 501</span><br><span class="line">Connections: 2</span><br><span class="line">Outstanding: 0</span><br><span class="line">Zxid: 0xe</span><br><span class="line">Mode: standalone</span><br><span class="line">Node count: 8</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;Zookeeper是一个分布式应用程序协调服务，主要负责集中维护配置信息的服务，提供分布式的同步机制。其所有的服务都是做为其他分布式应用的基础。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="Zookeeper" scheme="https://blog.gwjzc.top/categories/Zookeeper/"/>
    
    
    <category term="Zookeeper" scheme="https://blog.gwjzc.top/tags/Zookeeper/"/>
    
  </entry>
  
  <entry>
    <title>2021年终总结</title>
    <link href="https://blog.gwjzc.top/archives/a23e5172.html"/>
    <id>https://blog.gwjzc.top/archives/a23e5172.html</id>
    <published>2022-01-01T02:05:35.000Z</published>
    <updated>2022-01-01T02:05:35.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>2021年就这样过去了，这一年有得有失，稍微总结一下</p></blockquote><span id="more"></span><h3 id="年初计划"><a href="#年初计划" class="headerlink" title="年初计划"></a>年初计划</h3><ul><li>工资翻倍 ❌</li><li>减肥让自己满意❌</li><li>持续学习，完成3个小项目✅</li><li>阅读5本书 进行中……</li></ul><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><ul><li>大概回顾：</li></ul><p>​       21年是毕业后的第一年，这一年经历了一次被动跳槽，何为被动跳槽呢？那就要简述一下自己的第一段工作经历了。第一份工作的薪水不高。但是遇到的技术主管是字节出来的，直系领导是外企出来的，他们都还怀揣着创业的梦想。他们都来到了这家儿童线上体育教育公司。我们经历了公司搬家，搬到了周围都是大厂的地方。一度以为一直会在这家公司干着，但事与愿违，可能技术主管和老板的观念产生了分歧又或是老板不想再大力投入互联网开发。我不得已开始了第二段工作经历。其实也拿了好几个offer，有比现在这家做海外家具贸易工资高的。但要不就是外包，要不就是方向太冷门。虽然现在这家公司薪水给的不高。但不怎么加班让我有了更多的时间丰富自己的课余时间。可以进行必要的减肥计划、完成自己的github小项目。</p><ul><li>收获</li></ul><p>​        大学的室友都在北方工作，我选择来上海工作的原因可能就是想陪陪家里人吧。家里人在这做生意。今年最大的收获就是隔三差五的可以见到自己的父母，可以陪伴他们。所以我会好好的在上海尽力扎下根来。</p><ul><li>失去</li></ul><p>​        下半年因为熟悉了公司的基本流程后逐步有些懈怠了。加上配的一台电竞电脑 重心转移到吃鸡游戏上了。自控力还是太差</p><ul><li>展望</li></ul><p>​       我希望22年能够获得自己想要的。能够升职加薪，能够继续充实自己的专业能力。可以的话可以考个软考中级抑或是完成自己的985名校梦。不管怎么说，生活都要积极向上。努力的人生都不会太差。</p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;2021年就这样过去了，这一年有得有失，稍微总结一下&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="总结" scheme="https://blog.gwjzc.top/categories/%E6%80%BB%E7%BB%93/"/>
    
    <category term="成长与收获" scheme="https://blog.gwjzc.top/categories/%E6%80%BB%E7%BB%93/%E6%88%90%E9%95%BF%E4%B8%8E%E6%94%B6%E8%8E%B7/"/>
    
    
    <category term="总结" scheme="https://blog.gwjzc.top/tags/%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>Docker构建一个简单的java开发环境</title>
    <link href="https://blog.gwjzc.top/archives/2700d4b7.html"/>
    <id>https://blog.gwjzc.top/archives/2700d4b7.html</id>
    <published>2021-12-11T08:44:00.000Z</published>
    <updated>2021-12-11T08:44:00.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>首先确保已经安装了 Docker ，并且把 <code>openjdk:8</code> 的镜像拉取下来</p></blockquote><span id="more"></span><p>目前 Java 语言的版本很多，除了常用的 Java 8，有一些遗留项目可能使用了 Java 7，也可能有一些比较新的的项目使用了 Java 10 以上的版本。如果想切换自己本地的 Java 开发环境，折腾起来还是需要花费一些时间的，并且日后在不同版本间切换每次都要折腾一次。</p><p>Docker 的出现让我们维护不同版本的开发编译环境变得简单，如果你还不知道什么是 Docker 可以看看 <a href="http://edulinks.cn/2018/06/20/20180620-docker-overview/">Docker 入门介绍</a>。我们可以采用两种方式来构建 java 的开发环境，一种是在容器内编译运行，一种是在容器外编译运行，下面分别来看看具体如何操作。</p><h2 id="容器内编译与运行"><a href="#容器内编译与运行" class="headerlink" title="容器内编译与运行"></a>容器内编译与运行</h2><p>本文以一个简单的 Helloworld 程序为例，工程的文件目录结构及代码如下。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> ls -lh</span></span><br><span class="line">total 24</span><br><span class="line">-rw-r--r--  1 shiqiang  staff    60B 11 11 19:02 Dockerfile</span><br><span class="line">-rw-r--r--  1 shiqiang  staff   123B 11 11 19:02 Helloworld.java</span><br></pre></td></tr></table></figure><p>代码的内容。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Helloworld</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Hello world.\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>做好以上准备后，就可以编辑 Dockerfile 的内容。</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FROM</span> openjdk:<span class="number">8</span>  <span class="comment">#基于 openjdk:8 构建镜像</span></span><br><span class="line"><span class="keyword">COPY</span><span class="bash"> . /usr/src/myapp    <span class="comment">#将目录内的代码拷贝到镜像中 /usr/src/myapp 的位置</span></span></span><br><span class="line"><span class="keyword">WORKDIR</span><span class="bash"> /usr/src/myapp  <span class="comment">#将 /usr/src/myapp 设为工作目录</span></span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> javac Helloworld.java    <span class="comment">#运行编译命令，编译 Helloworld.java 程序</span></span></span><br><span class="line"><span class="keyword">CMD</span><span class="bash"> [<span class="string">&quot;java&quot;</span>, <span class="string">&quot;Helloworld&quot;</span>]    <span class="comment">#执行编译出来的 Helloworld</span></span></span><br></pre></td></tr></table></figure><p>构建镜像文件。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> docker build -t java_in_docker_env_8 .</span> </span><br><span class="line"><span class="meta">$</span><span class="bash"> docker images <span class="comment"># 使用 docker images 命令可以看到构建出来的 java_in_docker_env_8 镜像</span></span></span><br></pre></td></tr></table></figure><p>运行容器。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> docker run -it --rm java_in_docker_env_8</span></span><br><span class="line">Hello world.</span><br><span class="line"></span><br><span class="line"><span class="meta">$</span><span class="bash"> ls -lh</span>                                  </span><br><span class="line">total 24</span><br><span class="line">-rw-r--r--  1 shiqiang  staff   112B 11 12 10:53 Dockerfile</span><br><span class="line">-rw-r--r--  1 shiqiang  staff   123B 11 12 10:49 Helloworld.java</span><br></pre></td></tr></table></figure><p>可以看到程序的输出，并且看到当前目录下并有没编译出来的结果。但是这种方式每次启动容器的时候都要进行编译，并且没有办法把编译结果进行分享，下一节的内容介绍如何在容器外保存编译结果。</p><h2 id="容器外编译与运行"><a href="#容器外编译与运行" class="headerlink" title="容器外编译与运行"></a>容器外编译与运行</h2><p>工作目录和代码准备与上一节相同，Dockerfile 文件与上一节略有不同。</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FROM</span> openjdk:<span class="number">8</span></span><br><span class="line"><span class="keyword">COPY</span><span class="bash"> . /usr/src/myapp</span></span><br><span class="line"><span class="keyword">WORKDIR</span><span class="bash"> /usr/src/myapp</span></span><br></pre></td></tr></table></figure><p>构建镜像文件。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> docker build -t java_env_8</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> docker images <span class="comment"># 使用 docker images 命令可以看到构建出来的 java_env_8 镜像</span></span></span><br></pre></td></tr></table></figure><p>编译文件。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> docker run --rm -v <span class="string">&quot;<span class="variable">$PWD</span>&quot;</span>:/usr/src/myapp -w /usr/src/myapp java_env_8 javac Helloworld.java</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> ls -lh<span class="comment"># 可以看到编译出来的结果</span></span></span><br><span class="line">total 32</span><br><span class="line">-rw-r--r--  1 shiqiang  staff   112B 11 12 10:53 Dockerfile</span><br><span class="line">-rw-r--r--  1 shiqiang  staff   427B 11 12 11:09 Helloworld.class</span><br><span class="line">-rw-r--r--  1 shiqiang  staff   123B 11 12 10:49 Helloworld.java</span><br></pre></td></tr></table></figure><p>运行程序。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> docker run --rm -v <span class="string">&quot;<span class="variable">$PWD</span>&quot;</span>:/usr/src/myapp -w /usr/src/myapp java_env_8 java Helloworld</span>      </span><br><span class="line">Hello world.</span><br></pre></td></tr></table></figure><h2 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h2><p>本文仅仅构建了一个简单的 java 开发环境，使用这种方式编译运行 java 程序的好处是无需在本地安装 jdk ，在需要为多个 jdk 版本编译程序的时候更加方便。但是对于复杂的工程常常使用 maven 或者 graddle 进行构建。</p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;首先确保已经安装了 Docker ，并且把 &lt;code&gt;openjdk:8&lt;/code&gt; 的镜像拉取下来&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="Docker" scheme="https://blog.gwjzc.top/categories/Docker/"/>
    
    <category term="Java" scheme="https://blog.gwjzc.top/categories/Docker/Java/"/>
    
    
    <category term="Docker" scheme="https://blog.gwjzc.top/tags/Docker/"/>
    
    <category term="Java" scheme="https://blog.gwjzc.top/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>上海的互联网公司</title>
    <link href="https://blog.gwjzc.top/archives/44fdb130.html"/>
    <id>https://blog.gwjzc.top/archives/44fdb130.html</id>
    <published>2021-11-01T02:05:35.000Z</published>
    <updated>2021-11-01T02:05:35.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>目前上海it公司介绍</p></blockquote><span id="more"></span><h3 id="第一梯队"><a href="#第一梯队" class="headerlink" title="第一梯队"></a>第一梯队</h3><p>1.阿里巴巴（阿里上海研发中心，闵行大虹桥，本地生活总部：盒马/口碑，阿里国际站等，10-10-5，加班氛围浓，年底一般1+3=4个月，极少数最多可拿7个月，考核按3-6-1比例）；</p><p>2.腾讯（腾讯华东总部，徐汇漕河泾，游戏、人工智能、云计算等，10-10-5，归属感强，食堂伙食好。年底标准2个月，一般能拿4个月，极少数拿8个月，部分团队n个月，考核按 1 星到 5 星）；</p><p>3.字节跳动（上海研发中心、巨量引擎，闵行漕河泾，抖音、游戏、教育等，字节本体和巨量引擎差距较大，不同岗位加班差距很大，21年8月取消大小周。年终0-6个月，一般拿3个月，少数5个月以上）；</p><p>4.蚂蚁集团（上海研发中心，唯一未上市巨头，浦东支付宝大厦，支付宝、蚂蚁科技中心等，10-10-5，比较卷，年终与阿里类似）;</p><p>5.美团点评（大众点评，长宁北新泾，生活服务平台，10-9-5，年底一般3.5个月，其中0.5个月上半年绩效工资+0.5个月下半年绩效工资+2.5个月年终奖工资）；</p><p>6.拼多多（总部，长宁娄山关路，综合电商，11-11-6，周末给加班费，猝死1例；年底一般4个月，其中固定年终奖 2 个月，在春节前发放；绩效年终奖则根据 “ 271 ” 的绩效考核评定后发放，70% 的员工能拿 2 个月）。</p><h3 id="第二梯队——背靠巨头-or-小巨头"><a href="#第二梯队——背靠巨头-or-小巨头" class="headerlink" title="第二梯队——背靠巨头 or 小巨头"></a><strong>第二梯队——背靠巨头 or 小巨头</strong></h3><ol><li>哔哩哔哩（总部，杨浦五角场，视频平台，10-8-5，年奖一般2到3个月）；</li><li>滴滴出行（上海分公司，静安区共和新路，出行平台，10-10-5，年奖一般3个月）；</li><li>携程（总部，长宁大虹桥，OTA巨头，10-7-5，年奖一般3个月，随月份发或半年发）；</li><li>饿了么（总部，普陀近铁城市广场，阿里本地生活，10-9-5，年奖一般2个月）；</li><li>阅文集团（总部，浦东张江高科，网文平台，腾讯，10-7-5，年奖一般4个月）；</li><li>哈啰出行（总部，闵行莘庄，出行平台，阿里系独立公司，10-10-5，年奖一般2个月）；</li><li>趣头条（总部，浦东广兰路，资讯网文类，含趣头条和米读，10-10-5，年奖一般3个月）；</li><li>快手（上海分公司少量人员，徐汇漕河泾，短视频，21年7月取消大小周，年奖4个月）；</li><li>百度（上海分公司，浦东中科路，研发/电销团队，9-9-5，年奖一般3个月）；</li><li>京东（上海分公司，宝山<a href="https://www.zhihu.com/search?q=%E5%91%BC%E5%85%B0%E8%B7%AF&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22:%22answer%22,%22sourceId%22:2243717386%7D">呼兰路</a>，综合电商，9-9-5，年奖一般2个月）；</li><li>网易（上海分公司，徐汇漕河泾，10-8-5，年奖一般3个月）；</li></ol><h3 id="第三梯队——独角兽or垂直领域or互联网-（排名不分先后，上榜即可）"><a href="#第三梯队——独角兽or垂直领域or互联网-（排名不分先后，上榜即可）" class="headerlink" title="第三梯队——独角兽or垂直领域or互联网+（排名不分先后，上榜即可）"></a><strong>第三梯队——独角兽or垂直领域or互联网+（排名不分先后，上榜即可）</strong></h3><p><strong>电商类</strong></p><ul><li>得物App（总部，杨浦黄兴路，炒鞋电商，9-9-5，大小周，周末给加班费，年底1个月➕四个季度各0.75个月）</li><li>唯品会（上海分公司，闵行申长路，品牌特卖，9-9-5，部分大小周）</li><li>叮咚买菜（总部，浦东广兰路，生鲜电商，9-9-5，大小周）</li><li><a href="https://www.zhihu.com/search?q=%E8%BF%94%E5%88%A9%E7%BD%91&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22:%22answer%22,%22sourceId%22:2243717386%7D">返利网</a>（总部，徐汇龙漕路，导购电商，9-8-5，年底1个月）</li><li>小红书（总部，黄浦新天地，内容电商，10-9-5）</li><li>洋码头（总部，静安江场三路，<a href="https://www.zhihu.com/search?q=%E8%B7%A8%E5%A2%83%E7%94%B5%E5%95%86&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22:%22answer%22,%22sourceId%22:2243717386%7D">跨境电商</a>，加班不明）</li><li>达达&amp;<a href="https://www.zhihu.com/search?q=%E4%BA%AC%E4%B8%9C%E5%88%B0%E5%AE%B6&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22:%22answer%22,%22sourceId%22:2280108280%7D">京东到家</a>（总部，杨浦东方渔人码头，电商及本地生活劳动力外包，9-9-5）</li><li>微盟（总部，宝山淞发路，SaaS小程序服务商，9-7-5，年底1个月）</li><li>宝尊电商（总部，静安万荣路，toB，淘宝代运营，9-6-5，周末给加班费，年底1个月）</li><li><a href="https://www.zhihu.com/search?q=%E6%89%BE%E9%92%A2%E7%BD%91&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22:%22answer%22,%22sourceId%22:2243717386%7D">找钢网</a>（总部，嘉定区新培路，钢铁产业链电商平台，9-9-6，年底一般0.5个月）</li></ul><p><strong>资讯类</strong></p><ul><li>虎扑（总部，虹口足球场，篮球等门户网，9-6-5，部分部门大小周）</li><li>爱奇艺（上海分公司，长宁临虹路，百度，9-7-5，加班有加班费）</li><li>即刻（总部，杨浦<a href="https://www.zhihu.com/search?q=%E6%B7%9E%E6%B2%AA%E8%B7%AF&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22:%22answer%22,%22sourceId%22:2283520830%7D">淞沪路</a>，互联网资讯，加班不明）</li><li>任意门（总部，产品：soul，浦东大唐国际，即时通讯，10-8-5）</li><li>喜马拉雅（总部，浦东丹桂路，电台类，10-7-5，部分10-10-5）</li><li><a href="https://www.zhihu.com/search?q=%E8%9C%BB%E8%9C%93FM&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22:%22answer%22,%22sourceId%22:2243717386%7D">蜻蜓FM</a>（总部，浦东陆家嘴软件园，音频电台类,10-7-5，部分10-10-5）</li><li>樊登读书（总部，长宁<a href="https://www.zhihu.com/search?q=%E9%81%B5%E4%B9%89%E8%B7%AF&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22:%22answer%22,%22sourceId%22:2243717386%7D">遵义路</a>，音频读书类，部分9-9-5，部分9-6-5）</li><li>咪咕（上海分公司，<a href="https://www.zhihu.com/search?q=%E6%B5%A6%E4%B8%9C%E9%87%91%E6%A1%A5&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22:%22answer%22,%22sourceId%22:2243717386%7D">浦东金桥</a>，移动下属视频/音乐类，加班不明）</li></ul><p><strong>旅游类</strong></p><ul><li>同程艺龙（上海研发中心，长宁中山公园，旅游一线，加班不明）</li><li>驴妈妈（总部，嘉定景域大道，旅游二线，9-8-5，近年有年奖拖欠情况）</li><li>途牛（上海分公司，松江<a href="https://www.zhihu.com/search?q=%E5%98%89%E6%9D%BE%E5%8D%97%E8%B7%AF&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22:%22answer%22,%22sourceId%22:2283520830%7D">嘉松南路</a>，旅游二线，加班不明）</li></ul><p><strong>人工智能&amp;商业智能</strong></p><ul><li>触宝（总部，闵行新龙路，<a href="https://www.zhihu.com/search?q=%E8%A7%A6%E5%AE%9D%E8%BE%93%E5%85%A5%E6%B3%95&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22:%22answer%22,%22sourceId%22:2243717386%7D">触宝输入法</a>、触宝电话等海外市场为主，10-9-5）</li><li>商汤（总部，徐汇漕河泾，人工智能领域，9-8-5，猝死1例，年奖一般3个月）</li><li>旷视（上海分公司，徐汇虹漕路，人工智能领域，年奖一般2个月）</li><li>依图（总部，长宁区<a href="https://www.zhihu.com/search?q=%E5%A8%84%E5%B1%B1%E5%85%B3%E8%B7%AF&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22:%22answer%22,%22sourceId%22:2283520830%7D">娄山关路</a>，人工智能领域，年底1-2个月）</li><li><a href="https://www.zhihu.com/search?q=%E4%BA%91%E4%BB%8E&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22:%22answer%22,%22sourceId%22:2283520830%7D">云从</a>（上海分公司，浦东张江高科，人工智能领域）</li><li>ucloud（总部，杨浦区隆昌路，IaaS、PaaS服务商）</li><li>泛微网络（总部，闵行联航路，主要产品：eteams，OA类SaaS服务商）</li><li><a href="https://www.zhihu.com/search?q=%E5%A3%B0%E7%BD%91&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22:%22answer%22,%22sourceId%22:2283520830%7D">声网</a>（总部，杨浦五角场，音视频PaaS服务商）</li><li><a href="https://www.zhihu.com/search?q=%E4%B8%83%E7%89%9B%E4%BA%91&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22:%22answer%22,%22sourceId%22:2243717386%7D">七牛云</a>（总部，浦东亮秀路，PaaS服务商，云计算及数据服务）</li></ul><p><strong>工具类</strong></p><ul><li>WiFi<a href="https://www.zhihu.com/search?q=%E4%B8%87%E8%83%BD%E9%92%A5%E5%8C%99&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22:%22answer%22,%22sourceId%22:2268918674%7D">万能钥匙</a>（总部，浦东张衡路，连尚科技，wifi工具类）</li><li>商米科技（总部，杨浦淞沪路，IoT硬件解决方案，小米）</li><li>收钱吧（总部，<a href="https://www.zhihu.com/search?q=%E8%99%B9%E5%8F%A3%E5%8C%BA&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22:%22answer%22,%22sourceId%22:2243717386%7D">虹口区</a>中山北一路，收银硬件服务商，9-6-5）</li><li>前程无忧（总部，浦东张江高科，互联网招聘领域）</li><li><a href="https://www.zhihu.com/search?q=%E6%A0%BC%E7%93%A6%E6%8B%89&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22:%22answer%22,%22sourceId%22:2243717386%7D">格瓦拉</a>（总部，浦东陆家嘴，电影话剧等票务）</li><li>世纪佳缘（总部，徐汇漕溪北路，相亲交友网站）</li></ul><p><strong>游戏类</strong></p><ul><li>米哈游（总部，徐汇宜山路，游戏，代表作崩坏、原神系列，10-10-5）</li><li>莉莉丝游戏（总部，闵行宜山路，游戏，代表作万国觉醒等）</li><li><a href="https://www.zhihu.com/search?q=%E6%B8%B8%E6%97%8F%E7%BD%91%E7%BB%9C&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22:%22answer%22,%22sourceId%22:2243717386%7D">游族网络</a>（总部，徐汇宜山路，游戏）</li><li><a href="https://www.zhihu.com/search?q=%E4%B8%89%E4%B8%83%E4%BA%92%E5%A8%B1&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22:%22answer%22,%22sourceId%22:2268918674%7D">三七互娱</a>（总部，普陀武宁路，游戏）</li><li>巨人网络（总部，徐汇宜山路➡️松江中凯路，游戏）</li><li>盛趣游戏（总部，浦东张江高科，游戏）</li><li>心动网络（总部，静安大宁，游戏）</li><li>TapTap（总部，静安万荣路，游戏）</li><li>小牛互娱（总部，浦东张江高科，游戏&amp;应用软件，9-12-6，指纹打卡，工时排行）</li></ul><p><strong>房产汽车类</strong></p><ul><li>58（58上海分公司+安居客总部，浦东陆家嘴软件园，年底9-9-6，平时9-8-5）</li><li>链家/贝壳（上海分公司，黄浦黄陂南路，互联网房产，21年10月中旬开始上海地区研发和金融团队大规模裁员N+3，10-9-5）</li><li>途虎养车（总部，闵行虹中路，互联网汽车b2c）</li><li><a href="https://www.zhihu.com/search?q=%E7%99%BE%E5%A7%93%E7%BD%91&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22:%22answer%22,%22sourceId%22:2243717386%7D">百姓网</a>（总部，徐汇浩然大楼，分类信息检索，9-7-5）</li></ul><p><strong>金融类</strong></p><ul><li>陆金所（总部，浦东陆家嘴，互联网金融，加班不明）</li><li>平安系列（上海分公司，办公地点遍布上海，平安好医生在浦东中科路，9-6-5）</li><li><a href="https://www.zhihu.com/search?q=%E4%B8%9C%E6%96%B9%E8%B4%A2%E5%AF%8C&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22:%22answer%22,%22sourceId%22:2268918674%7D">东方财富</a>（总部，徐汇宛平南路，互联网金融，加班不明）</li><li>众安在线（总部，黄浦圆明园路，互联网保险，加班不明）</li><li>360数科（总部，浦东陆家嘴，360旗下信贷平台，加班不明）</li></ul><p><strong>在线教育</strong></p><ul><li>沪江英语（总部，浦东张江高科，互联网在线教育，加班不明）</li><li>英语流利说（总部，杨浦长阳创谷，互联网英语教育，加班不明）</li><li>掌门1对1（总部，虹口四平路，互联网在线教育，大小周，指纹打卡，有工时排名）</li></ul><p><strong>物流运输</strong></p><ul><li>满帮（上海分公司，长宁天山路，运满满，互联网物流）</li></ul><h3 id="外包公司"><a href="#外包公司" class="headerlink" title="外包公司"></a>外包公司</h3><p>1.博朗软件Bleum(上海)</p><p>2.中软国际(北京)</p><p>3.东软集团Neusoft (沈阳)</p><p>4.博彦科技BeyondSoft (北京)</p><p>5.中电金信(北京)</p><p>\6. 法本信息（深圳）</p><p>7.浙大网新Insigma (杭州)</p><p>8.奥博杰天Objectiva (北京)</p><p>9.浪潮Inspur (济南)</p><p>10.软通动力iSoftStone(北京 )</p><p>11.福瑞博德Freeborders(深圳 )</p><p>12.信必优Symbio(北京)</p><p>\13. 大展科技Achievo(深圳)</p><p>14.恒生电子hundsun(杭州)</p><p>15.日电卓越软件(北京 )</p><p>16.大连华信(大连 )</p><p>17.中和软件chuwa(. 上海)</p><p>18.新致软件newtouch(上海)</p><p>19.艾斯克雷(北京)</p><p>20.海隆软件hyron(上海)</p><p>21.大宇宙信息(天津)</p><p>22.晟峰软件(上海)</p><p>23.富士通信息(上海)</p><p>\24. NTTDATA(北京 )</p><p>25.宏智科技(苏州)</p><p>26.神州数码通用软件(北京)</p><p>27.凌志软件(上海苏州)</p><p>28.音泰思(成都 )</p><p>29.微创软件(上海)</p><p>30.开目佰钧成(武汉)</p><p>31.浩鲸智能（南京）</p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;目前上海it公司介绍&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="公司" scheme="https://blog.gwjzc.top/categories/%E5%85%AC%E5%8F%B8/"/>
    
    
    <category term="公司" scheme="https://blog.gwjzc.top/tags/%E5%85%AC%E5%8F%B8/"/>
    
  </entry>
  
  <entry>
    <title>Docker简单概述</title>
    <link href="https://blog.gwjzc.top/archives/3647edf5.html"/>
    <id>https://blog.gwjzc.top/archives/3647edf5.html</id>
    <published>2021-09-20T08:30:32.000Z</published>
    <updated>2021-09-20T08:30:32.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Docker 是一个应用程序开发、部署、运行的平台，使用 go 语言开发。相较于传统的主机虚拟化，Docker 提供了轻量级的应用隔离方案，并且为我们提供了应用程序快速扩容、缩容的能力。</p></blockquote><span id="more"></span><h3 id="Docker-Engine"><a href="#Docker-Engine" class="headerlink" title="Docker Engine"></a>Docker Engine</h3><p>先来看一下 Docker Engine 的结构，它是一个Client-Server应用程序，包含了三个主要部分：dockerd守护进程、REST API接口层、cli接口层(管理容器、镜像、网络、存储等等)。</p><p>![image-20220831163205749](/Users/dieselchen/Library/Application Support/typora-user-images/image-20220831163205749.png)</p><h4 id="Docker-架构"><a href="#Docker-架构" class="headerlink" title="Docker 架构"></a>Docker 架构</h4><p>Docker采用的是CS架构，docker client 通过Unix套接字或者网络接口访问 docker daemon，从而完成容器、镜像等内容的管理。</p><p><img src="https://image.dieselchen.work/uPic/2022/08/31/image-20220831163353576.png" alt="image-20220831163353576"></p><h3 id="Docker-Daemon"><a href="#Docker-Daemon" class="headerlink" title="Docker Daemon"></a>Docker Daemon</h3><p>Docker的守护进程监听对于API的请求，并且管理Docker对象，包括容器、镜像、网络、存储等。不同守护进程之间可以互相通信，从而构成集群服务。</p><h3 id="Docker-Client"><a href="#Docker-Client" class="headerlink" title="Docker Client"></a>Docker Client</h3><p>Dokcer 客户端 docker 命令是与Dokcer交互的主要方式</p><h3 id="Docker-仓库"><a href="#Docker-仓库" class="headerlink" title="Docker 仓库"></a>Docker 仓库</h3><p>Docker仓库保存Docker镜像，可以通过<code>docker pull</code>以及<code>docker push</code>来下载、上传镜像文件。</p><h3 id="Docker-对象"><a href="#Docker-对象" class="headerlink" title="Docker 对象"></a>Docker 对象</h3><p><em>1. 镜像</em></p><p>镜像是一个用来构建容器的只读模版，通常一个镜像会依赖其他的镜像。例如我们编写的一个Node程序需要依赖Node环境，那在构建这个应用镜像时就需要依赖基础的Node镜像。</p><p>我们可以创建自己的镜像，也可以使用仓库中已经创建好的镜像。创建镜像需要创建一个 <code>Dockerfile</code> 文件。每个Dockerfile定义镜像文件中的一层，当定义发生变化的时候，只需要更新着一层的文件即可。</p><p><em>2. 容器</em></p><p>容器是一个运行时状态下的镜像，通过docker命令我们可以创建、启动、停止、删除容器。例如以下命令：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker run -i -t ubuntu /bin/bash</span><br></pre></td></tr></table></figure><p>实际上经过了6个步骤：1、如果本地没有 <em>ubuntu</em> 镜像，那么首先执行 <code>docker pull ubuntu</code>镜像文件到本地；2、自动创建一个容器，相当于命令 <code>dock container create</code>；3、Docker分配一块文件系统给容器；4、Docker创建网络接口、分配网络地址；5、启动容器，并且执行<code>/bin/bash</code>命令；6、我们可以在bash中执行命令，执行exit后，退出ubuntu的命令行，同时容器关闭。</p><p><em>3. 网络</em></p><p>Docker的网络子系统是可插拔的，支持bridge、host、overlay、macvlan、none等网络模式。熟悉虚拟机的同学可能对这些有概念，想要了解更多参考<a href="https://docs.docker.com/network/network-tutorial-standalone/">这里</a>。</p><p><em>4. 存储</em></p><p>默认情况下，容器中的应用生成的所有文件都存放在一个可写的容器层，意味着这些数据的生命周期和容器保持一致，一旦容器重启数据就丢了。另外，这些文件与容器高度关联，想要将这些文件分享给其他的容器或者设备非常困难。</p><p>为此，Docker提供了两种方案解决数据问题：<em>Volumes</em>、<em>bind mount</em>。不管使用哪种方式，容器内看起来都是一样的，或者作为一个文件夹存在、或者作为一个文件存在。</p><p>上图说明了不同方式的区别，<em>Volumes</em> 是存在本地文件系统中的一部分，其他应用程序不能对这个文件系统进行修改，Linux下在<code>/var/lib/docker/volumes</code>。这是数据持久化的最好方案。<em>Bind Mount</em> 允许将主机中任何位置的数据挂载，这些数据的读写没有收到保护。<em>tmps</em>是存储在主机内存中的数据。</p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;Docker 是一个应用程序开发、部署、运行的平台，使用 go 语言开发。相较于传统的主机虚拟化，Docker 提供了轻量级的应用隔离方案，并且为我们提供了应用程序快速扩容、缩容的能力。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="Docker" scheme="https://blog.gwjzc.top/categories/Docker/"/>
    
    
    <category term="Docker" scheme="https://blog.gwjzc.top/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>简单了解一下Mysql和InnoDB</title>
    <link href="https://blog.gwjzc.top/archives/e6f74ec.html"/>
    <id>https://blog.gwjzc.top/archives/e6f74ec.html</id>
    <published>2021-08-15T07:40:10.000Z</published>
    <updated>2021-08-15T07:40:10.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>平常在数据库选型时，会考虑到MySQL、PostgreSQL、MongoDB、sqlite，但你知道他们之间的区别吗？一直以来都没有一个清晰的认知，所以最近两个月的时间看了几本数据库相关的书籍并且阅读了 MySQL 的官方文档，在此来总结一下相关知识点</p></blockquote><span id="more"></span><h2 id="数据库的定义"><a href="#数据库的定义" class="headerlink" title="数据库的定义"></a>数据库的定义</h2><p>很多开发者在最开始时其实都对数据库有一个比较模糊的认识，觉得数据库就是一堆数据的集合，但是实际却比这复杂的多，数据库领域中有两个词非常容易混淆，也就是<em>数据库</em>和<em>实例</em>：</p><ul><li>数据库：物理操作文件系统或其他形式文件类型的集合；</li><li>实例：MySQL 数据库由后台线程以及一个共享内存区组成；</li></ul><h2 id="事务与隔离级别"><a href="#事务与隔离级别" class="headerlink" title="事务与隔离级别"></a>事务与隔离级别</h2><p>在介绍了锁之后，我们再来谈谈数据库中一个非常重要的概念 —— 事务；相信只要是一个合格的软件工程师就对事务的特性有所了解，其中被人经常提起的就是事务的原子性，在数据提交工作时，要么保证所有的修改都能够提交，要么就所有的修改全部回滚。</p><p>但是事务还遵循包括原子性在内的 ACID 四大特性：原子性（Atomicity）、一致性（Consistency）、隔离性（Isolation）和持久性（Durability）；文章不会对这四大特性全部展开进行介绍，相信你能够通过 Google 和数据库相关的书籍轻松获得有关它们的概念，本文最后要介绍的就是事务的四种隔离级别。</p><h3 id="几种隔离级别"><a href="#几种隔离级别" class="headerlink" title="几种隔离级别"></a>几种隔离级别</h3><p>事务的隔离性是数据库处理数据的几大基础之一，而隔离级别其实就是提供给用户用于在性能和可靠性做出选择和权衡的配置项。</p><p>ISO 和 ANSI SQL 标准制定了四种事务隔离级别，而 InnoDB 遵循了 SQL:1992 标准中的四种隔离级别：<code>READ UNCOMMITED</code>、<code>READ COMMITED</code>、<code>REPEATABLE READ</code> 和 <code>SERIALIZABLE</code>；每个事务的隔离级别其实都比上一级多解决了一个问题：</p><ul><li><code>RAED UNCOMMITED</code>：使用查询语句不会加锁，可能会读到未提交的行（Dirty Read）；</li><li><code>READ COMMITED</code>：只对记录加记录锁，而不会在记录之间加间隙锁，所以允许新的记录插入到被锁定记录的附近，所以再多次使用查询语句时，可能得到不同的结果（Non-Repeatable Read）；</li><li><code>REPEATABLE READ</code>：多次读取同一范围的数据会返回第一次查询的快照，不会返回不同的数据行，但是可能发生幻读（Phantom Read）；</li><li><code>SERIALIZABLE</code>：InnoDB 隐式地将全部的查询语句加上共享锁，解决了幻读的问题；</li></ul><p>MySQL 中默认的事务隔离级别就是 <code>REPEATABLE READ</code>，但是它通过 Next-Key 锁也能够在某种程度上解决幻读的问题。</p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;平常在数据库选型时，会考虑到MySQL、PostgreSQL、MongoDB、sqlite，但你知道他们之间的区别吗？一直以来都没有一个清晰的认知，所以最近两个月的时间看了几本数据库相关的书籍并且阅读了 MySQL 的官方文档，在此来总结一下相关知识点&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="MySQL" scheme="https://blog.gwjzc.top/categories/MySQL/"/>
    
    
    <category term="MySQL" scheme="https://blog.gwjzc.top/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>2021年8月入门级电脑推荐</title>
    <link href="https://blog.gwjzc.top/archives/8764d356.html"/>
    <id>https://blog.gwjzc.top/archives/8764d356.html</id>
    <published>2021-08-03T09:31:43.000Z</published>
    <updated>2021-08-03T10:26:57.992Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>远房表弟中考考了省里最好的高中，正直暑假想配台电脑，列了一份清单。</p></blockquote><span id="more"></span><h3 id="配置一：京东整机"><a href="#配置一：京东整机" class="headerlink" title="配置一：京东整机"></a>配置一：京东整机</h3><p>处理器：i7-860 、i7-920、i7-930、i7-940随机发货   4核8线程  基本频率2.66GHz 最大睿频2.99GHz</p><p>显卡：   GTX1050 4g独显</p><p>主板：   英特尔 H55</p><p>内存：   镁光 8*2 16g双通道   ddr3 频率1600</p><p>硬盘：   镁光 nvme M.2 512固态硬盘</p><p>显示器 ：24寸 1080p 75Hz va面板</p><p>到手价：<span style='color:;background:rgb(249,240,242);font-size:文字大小;padding-left:5px;padding-right:5px;'>3880元</span></p><p>优点：这个价位性价比还是可以的。和实体店一样，赠送鼠标 键盘 鼠标垫。收到货连上电源线就可以用</p><p>缺点：处理器频率偏低了，主板太老了可扩展性也不太行。只支持ddr3内存。内存虽说16g但是 ddr3频率有点低。现在都是ddr4 入门级。个人不太推荐这款。主要核心 cpu和主板都有点老。不好升级。主板是2010年出的，</p><p>cpu是2008年上市的。相当于 10年之前的顶级配置 在 10年之后便宜价出售。</p><h3 id="配置二：京东整机"><a href="#配置二：京东整机" class="headerlink" title="配置二：京东整机"></a>配置二：京东整机</h3><p>处理器：i5 10400F 6核心12线程 基本频率2.9GHz 最大睿频4.3GHz</p><p>显卡：    GTX1050Ti 4g独显</p><p>主板：    微星 B560M</p><p>内存：    威刚 8G ddr4  频率2666</p><p>硬盘：   256  nvme M.2 固态硬盘</p><p>到手价：<span style='color:;background:rgb(249,240,242);font-size:文字大小;padding-left:5px;padding-right:5px;'>3599元</span>    </p><p>优点：处理器+主板都是近两年的新品。比较推荐。显卡入门级。内存也是ddr4 。</p><p>缺点：1显示器需要单独购买。500元左右可以买到入门级配置 24寸+1080p+75hz +ips面板 那合计 要在4100-4200左右。2.独立显卡考虑运送过程中有损坏，和主机分开发货，需要安装一下。有安装视频。</p><p>内存还是推荐16g ddr4 硬盘 500G固态 那就+500 总预算 4100+显示器价格 ～ 4600左右</p><h3 id="配置三：淘宝"><a href="#配置三：淘宝" class="headerlink" title="配置三：淘宝"></a>配置三：淘宝</h3><p><img src="https://image.dieselchen.work/uPic/2021/08/01/image-20210801125709535.png" alt="image-20210801125709535"></p><p>总价格：<span style='color:;background:rgb(249,240,242);font-size:文字大小;padding-left:5px;padding-right:5px;'>3899元</span>     </p><p>和配置二 +500元后 4100元相比 。内存频率 2666-》3200 而且便宜200元。</p><p>也是需要单独安装独立显卡和单独买显示器</p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;远房表弟中考考了省里最好的高中，正直暑假想配台电脑，列了一份清单。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="硬件" scheme="https://blog.gwjzc.top/categories/%E7%A1%AC%E4%BB%B6/"/>
    
    <category term="台式机" scheme="https://blog.gwjzc.top/categories/%E7%A1%AC%E4%BB%B6/%E5%8F%B0%E5%BC%8F%E6%9C%BA/"/>
    
    
    <category term="台式电脑" scheme="https://blog.gwjzc.top/tags/%E5%8F%B0%E5%BC%8F%E7%94%B5%E8%84%91/"/>
    
    <category term="组装电脑" scheme="https://blog.gwjzc.top/tags/%E7%BB%84%E8%A3%85%E7%94%B5%E8%84%91/"/>
    
    <category term="硬件" scheme="https://blog.gwjzc.top/tags/%E7%A1%AC%E4%BB%B6/"/>
    
  </entry>
  
</feed>
