<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>DieselChen</title>
  
  <subtitle>个人博客,记录一下学习的点滴～</subtitle>
  <link href="https://www.dieselchen.work/atom.xml" rel="self"/>
  
  <link href="https://www.dieselchen.work/"/>
  <updated>2022-08-25T10:17:34.248Z</updated>
  <id>https://www.dieselchen.work/</id>
  
  <author>
    <name>Diesel-Chen</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>近期关于图像相关的技术选型及总结</title>
    <link href="https://www.dieselchen.work/archives/71bcff18.html"/>
    <id>https://www.dieselchen.work/archives/71bcff18.html</id>
    <published>2022-08-05T09:41:41.000Z</published>
    <updated>2022-08-25T10:17:34.248Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>近期有相关业务需要自适应抠图，在了解到阿里云有相关api后 进行了对接。总结一下踩的坑～</p></blockquote><span id="more"></span><h3 id="阿里云视觉智能开放平台"><a href="#阿里云视觉智能开放平台" class="headerlink" title="阿里云视觉智能开放平台"></a>阿里云视觉智能开放平台</h3><p>阿里云视觉智能开放平台将围绕多个视觉领域，例如：通用、图像、视频、目标识别以及3D、AR/VR等类目，不断的为您提供多种视觉AI能力。具体方向包括：</p><ul><li>人脸人体</li><li>文字识别</li><li>商品理解</li><li>内容审核</li><li>图像识别</li><li>分割抠图</li><li>图像生产</li><li>视觉搜索</li><li>视频理解</li><li>视频分割</li><li>视频生产</li><li>视频搜索</li><li>目标检测</li><li>3D 视觉</li><li>AR/VR</li></ul><p>​    之前用阿里云这个平台做个文字识别感觉还是很不错的。api的对接以及文档规范程度都不错。按流量收费性价比也很高。这一次的新业务也用到了自适应抠图。正好阿里云平台提供了分割抠图</p><h3 id="人体分割"><a href="#人体分割" class="headerlink" title="人体分割"></a>人体分割</h3><h4 id="输入限制"><a href="#输入限制" class="headerlink" title="输入限制"></a>输入限制</h4><ul><li>图像格式：JPEG、JPG、PNG、BMP。</li><li>图像大小：不超过3 MB。</li><li>图像分辨率：大于32×32像素，小于2000×2000像素。</li><li>URL地址不能包含中文字符。</li></ul><p>​    首先改api在2QPS的时候是免费的。所以我们写demo的时候需要控制一个队列来让其满足2QPS。通过ImageMagick 调用相关go的api cgo完成对一些图像的预处理让其符合规范。而且阿里云处理好的图像底部以及大小位置并不是透明的。位置有坐标信息我们可以通过ImageMagick重新定位这些元素以及让背景透明化</p><p>以下是核心代码</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">segBodyRateLimit = time.Tick(time.Second / <span class="number">2</span>)</span><br><span class="line">segBodyReqQueue = <span class="built_in">make</span>([]<span class="keyword">string</span>, <span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">HandleSegmentBody</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> (</span><br><span class="line">req  requestBody.SegmentReq</span><br><span class="line">lock sync.Mutex</span><br><span class="line">)</span><br><span class="line">err := c.BindJSON(&amp;req)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">logrus.Println(<span class="string">&quot;bind requestBody.SegmentReq failed err:&quot;</span>, err)</span><br><span class="line">handler.ResponseJson(c, <span class="string">&quot;&quot;</span>, errno.BadRequest)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">lock.Lock()</span><br><span class="line">segBodyReqQueue = <span class="built_in">append</span>(segBodyReqQueue, req.Url)</span><br><span class="line">lock.Unlock()</span><br><span class="line">u, err := segmentBody()</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="comment">//进行对常见的错误处理</span></span><br><span class="line">ExplainErr(c, err)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//处理照片 自适应裁剪</span></span><br><span class="line">localFile, err := imageMagick.TrimImageByUrl(u.Resp.Url)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">logrus.Println(<span class="string">&quot;[imageMagick trim err]:&quot;</span>, err.Error())</span><br><span class="line">handler.ResponseJson(c, <span class="string">&quot;自适应处理图片失败&quot;</span>, errno.ErrTrimImageMagickFail)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//图像地址持久化</span></span><br><span class="line">returnUrl, err := handler.UploadToAliyunOssByLocalFile(localFile)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">logrus.Println(<span class="string">&quot;[upload err]:&quot;</span>, err.Error())</span><br><span class="line">handler.ResponseJson(c, <span class="string">&quot;上传到阿里云oss失败&quot;</span>, errno.ErrUploadAliOssFail)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">u.Resp.Url = returnUrl</span><br><span class="line"></span><br><span class="line">handler.ResponseJson(c, u, <span class="literal">nil</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="踩过的坑"><a href="#踩过的坑" class="headerlink" title="踩过的坑"></a>踩过的坑</h3><ul><li>一开始把阿里云处理的结果直接返回给前端，居然发现背景是白色而不是透明的。就自己引入了ImageMagick对图像进行了处理</li><li>ImageMagick配合go的生产环境搭配起来是个坑。我是利用docker-compose 编排的服务。所以在写dockerfile的时候修改了好几个版本，一开始我自己本地mac环境跑的是iamgeMagick 6版本。本地用是没什么问题打，但是在docker环境跑6一直失败，调研之后发现。由于ImageMagick依赖很多第三方的包比如libjpeg-dev libpng-dev libtiff-dev 在ubuntu中和go的兼容性6的版本做的不好，智能用7</li><li>在docker引入ImageMagick的缺点。docker的编排时间由原来的1分钟到现在的4分钟。由于ImageMagick所依赖的依赖包比较多。所以后续针对CI、CD的时间还需要进一步的优化</li></ul><h3 id="dockerfile"><a href="#dockerfile" class="headerlink" title="dockerfile"></a>dockerfile</h3><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FROM</span> golang:<span class="number">1.14</span> as builder</span><br><span class="line"></span><br><span class="line"><span class="keyword">WORKDIR</span><span class="bash"> /app</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">ENV</span> DEBIAN_FRONTEND noninteractive</span><br><span class="line"><span class="keyword">ENV</span> GO111MODULE on</span><br><span class="line"><span class="keyword">ENV</span> GOPROXY=https://goproxy.cn</span><br><span class="line"><span class="keyword">ENV</span> CGO_ENABLED=<span class="number">1</span></span><br><span class="line"><span class="keyword">ENV</span> CGO_CFLAGS_ALLOW=-Xpreprocessor</span><br><span class="line"><span class="keyword">ENV</span> GIN_MODE release</span><br><span class="line"><span class="keyword">ENV</span> IMAGEMAGICK_VERSION=<span class="number">7.0</span>.<span class="number">8</span>-<span class="number">11</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># install build essentials</span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> apt-get update &amp;&amp; \</span></span><br><span class="line"><span class="bash">    apt-get install -y wget build-essential pkg-config --no-install-recommends</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Install ImageMagick deps</span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> apt-get -q -y install libjpeg-dev libpng-dev libtiff-dev \</span></span><br><span class="line"><span class="bash">    libgif-dev libx11-dev --no-install-recommends</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">COPY</span><span class="bash"> go.mod go.sum ./</span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> go mod download</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">COPY</span><span class="bash"> . .</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> <span class="built_in">cd</span> static/font/tmp &amp;&amp; \</span></span><br><span class="line"><span class="bash">tar xvzf ImageMagick-<span class="variable">$&#123;IMAGEMAGICK_VERSION&#125;</span>.tar.gz &amp;&amp; \</span></span><br><span class="line"><span class="bash"><span class="built_in">cd</span> ImageMagick* &amp;&amp; \</span></span><br><span class="line"><span class="bash">./configure \</span></span><br><span class="line"><span class="bash">    --without-magick-plus-plus \</span></span><br><span class="line"><span class="bash">    --without-perl \</span></span><br><span class="line"><span class="bash">    --disable-openmp \</span></span><br><span class="line"><span class="bash">    --with-gvc=no \</span></span><br><span class="line"><span class="bash">    --disable-docs &amp;&amp; \</span></span><br><span class="line"><span class="bash">make -j$(nproc) &amp;&amp; make install &amp;&amp; \</span></span><br><span class="line"><span class="bash">ldconfig /usr/<span class="built_in">local</span>/lib</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> go build -a -installsuffix cgo -o api ./main.go</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">CMD</span><span class="bash"> [<span class="string">&quot;/app/api&quot;</span>]</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;近期有相关业务需要自适应抠图，在了解到阿里云有相关api后 进行了对接。总结一下踩的坑～&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="总结" scheme="https://www.dieselchen.work/categories/%E6%80%BB%E7%BB%93/"/>
    
    <category term="ImageMagick" scheme="https://www.dieselchen.work/categories/%E6%80%BB%E7%BB%93/ImageMagick/"/>
    
    
    <category term="总结" scheme="https://www.dieselchen.work/tags/%E6%80%BB%E7%BB%93/"/>
    
    <category term="ImageMagick" scheme="https://www.dieselchen.work/tags/ImageMagick/"/>
    
  </entry>
  
  <entry>
    <title>上海的互联网公司</title>
    <link href="https://www.dieselchen.work/archives/44fdb130.html"/>
    <id>https://www.dieselchen.work/archives/44fdb130.html</id>
    <published>2022-06-24T06:08:49.000Z</published>
    <updated>2022-06-24T06:47:57.170Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>目前上海it公司介绍</p></blockquote><span id="more"></span><h3 id="第一梯队"><a href="#第一梯队" class="headerlink" title="第一梯队"></a>第一梯队</h3><p>1.阿里巴巴（阿里上海研发中心，闵行大虹桥，本地生活总部：盒马/口碑，阿里国际站等，10-10-5，加班氛围浓，年底一般1+3=4个月，极少数最多可拿7个月，考核按3-6-1比例）；</p><p>2.腾讯（腾讯华东总部，徐汇漕河泾，游戏、人工智能、云计算等，10-10-5，归属感强，食堂伙食好。年底标准2个月，一般能拿4个月，极少数拿8个月，部分团队n个月，考核按 1 星到 5 星）；</p><p>3.字节跳动（上海研发中心、巨量引擎，闵行漕河泾，抖音、游戏、教育等，字节本体和巨量引擎差距较大，不同岗位加班差距很大，21年8月取消大小周。年终0-6个月，一般拿3个月，少数5个月以上）；</p><p>4.蚂蚁集团（上海研发中心，唯一未上市巨头，浦东支付宝大厦，支付宝、蚂蚁科技中心等，10-10-5，比较卷，年终与阿里类似）;</p><p>5.美团点评（大众点评，长宁北新泾，生活服务平台，10-9-5，年底一般3.5个月，其中0.5个月上半年绩效工资+0.5个月下半年绩效工资+2.5个月年终奖工资）；</p><p>6.拼多多（总部，长宁娄山关路，综合电商，11-11-6，周末给加班费，猝死1例；年底一般4个月，其中固定年终奖 2 个月，在春节前发放；绩效年终奖则根据 “ 271 ” 的绩效考核评定后发放，70% 的员工能拿 2 个月）。</p><h3 id="第二梯队——背靠巨头-or-小巨头"><a href="#第二梯队——背靠巨头-or-小巨头" class="headerlink" title="第二梯队——背靠巨头 or 小巨头"></a><strong>第二梯队——背靠巨头 or 小巨头</strong></h3><ol><li>哔哩哔哩（总部，杨浦五角场，视频平台，10-8-5，年奖一般2到3个月）；</li><li>滴滴出行（上海分公司，静安区共和新路，出行平台，10-10-5，年奖一般3个月）；</li><li>携程（总部，长宁大虹桥，OTA巨头，10-7-5，年奖一般3个月，随月份发或半年发）；</li><li>饿了么（总部，普陀近铁城市广场，阿里本地生活，10-9-5，年奖一般2个月）；</li><li>阅文集团（总部，浦东张江高科，网文平台，腾讯，10-7-5，年奖一般4个月）；</li><li>哈啰出行（总部，闵行莘庄，出行平台，阿里系独立公司，10-10-5，年奖一般2个月）；</li><li>趣头条（总部，浦东广兰路，资讯网文类，含趣头条和米读，10-10-5，年奖一般3个月）；</li><li>快手（上海分公司少量人员，徐汇漕河泾，短视频，21年7月取消大小周，年奖4个月）；</li><li>百度（上海分公司，浦东中科路，研发/电销团队，9-9-5，年奖一般3个月）；</li><li>京东（上海分公司，宝山<a href="https://www.zhihu.com/search?q=%E5%91%BC%E5%85%B0%E8%B7%AF&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22:%22answer%22,%22sourceId%22:2243717386%7D">呼兰路</a>，综合电商，9-9-5，年奖一般2个月）；</li><li>网易（上海分公司，徐汇漕河泾，10-8-5，年奖一般3个月）；</li></ol><h3 id="第三梯队——独角兽or垂直领域or互联网-（排名不分先后，上榜即可）"><a href="#第三梯队——独角兽or垂直领域or互联网-（排名不分先后，上榜即可）" class="headerlink" title="第三梯队——独角兽or垂直领域or互联网+（排名不分先后，上榜即可）"></a><strong>第三梯队——独角兽or垂直领域or互联网+（排名不分先后，上榜即可）</strong></h3><p><strong>电商类</strong></p><ul><li>得物App（总部，杨浦黄兴路，炒鞋电商，9-9-5，大小周，周末给加班费，年底1个月➕四个季度各0.75个月）</li><li>唯品会（上海分公司，闵行申长路，品牌特卖，9-9-5，部分大小周）</li><li>叮咚买菜（总部，浦东广兰路，生鲜电商，9-9-5，大小周）</li><li><a href="https://www.zhihu.com/search?q=%E8%BF%94%E5%88%A9%E7%BD%91&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22:%22answer%22,%22sourceId%22:2243717386%7D">返利网</a>（总部，徐汇龙漕路，导购电商，9-8-5，年底1个月）</li><li>小红书（总部，黄浦新天地，内容电商，10-9-5）</li><li>洋码头（总部，静安江场三路，<a href="https://www.zhihu.com/search?q=%E8%B7%A8%E5%A2%83%E7%94%B5%E5%95%86&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22:%22answer%22,%22sourceId%22:2243717386%7D">跨境电商</a>，加班不明）</li><li>达达&amp;<a href="https://www.zhihu.com/search?q=%E4%BA%AC%E4%B8%9C%E5%88%B0%E5%AE%B6&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22:%22answer%22,%22sourceId%22:2280108280%7D">京东到家</a>（总部，杨浦东方渔人码头，电商及本地生活劳动力外包，9-9-5）</li><li>微盟（总部，宝山淞发路，SaaS小程序服务商，9-7-5，年底1个月）</li><li>宝尊电商（总部，静安万荣路，toB，淘宝代运营，9-6-5，周末给加班费，年底1个月）</li><li><a href="https://www.zhihu.com/search?q=%E6%89%BE%E9%92%A2%E7%BD%91&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22:%22answer%22,%22sourceId%22:2243717386%7D">找钢网</a>（总部，嘉定区新培路，钢铁产业链电商平台，9-9-6，年底一般0.5个月）</li></ul><p><strong>资讯类</strong></p><ul><li>虎扑（总部，虹口足球场，篮球等门户网，9-6-5，部分部门大小周）</li><li>爱奇艺（上海分公司，长宁临虹路，百度，9-7-5，加班有加班费）</li><li>即刻（总部，杨浦<a href="https://www.zhihu.com/search?q=%E6%B7%9E%E6%B2%AA%E8%B7%AF&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22:%22answer%22,%22sourceId%22:2283520830%7D">淞沪路</a>，互联网资讯，加班不明）</li><li>任意门（总部，产品：soul，浦东大唐国际，即时通讯，10-8-5）</li><li>喜马拉雅（总部，浦东丹桂路，电台类，10-7-5，部分10-10-5）</li><li><a href="https://www.zhihu.com/search?q=%E8%9C%BB%E8%9C%93FM&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22:%22answer%22,%22sourceId%22:2243717386%7D">蜻蜓FM</a>（总部，浦东陆家嘴软件园，音频电台类,10-7-5，部分10-10-5）</li><li>樊登读书（总部，长宁<a href="https://www.zhihu.com/search?q=%E9%81%B5%E4%B9%89%E8%B7%AF&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22:%22answer%22,%22sourceId%22:2243717386%7D">遵义路</a>，音频读书类，部分9-9-5，部分9-6-5）</li><li>咪咕（上海分公司，<a href="https://www.zhihu.com/search?q=%E6%B5%A6%E4%B8%9C%E9%87%91%E6%A1%A5&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22:%22answer%22,%22sourceId%22:2243717386%7D">浦东金桥</a>，移动下属视频/音乐类，加班不明）</li></ul><p><strong>旅游类</strong></p><ul><li>同程艺龙（上海研发中心，长宁中山公园，旅游一线，加班不明）</li><li>驴妈妈（总部，嘉定景域大道，旅游二线，9-8-5，近年有年奖拖欠情况）</li><li>途牛（上海分公司，松江<a href="https://www.zhihu.com/search?q=%E5%98%89%E6%9D%BE%E5%8D%97%E8%B7%AF&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22:%22answer%22,%22sourceId%22:2283520830%7D">嘉松南路</a>，旅游二线，加班不明）</li></ul><p><strong>人工智能&amp;商业智能</strong></p><ul><li>触宝（总部，闵行新龙路，<a href="https://www.zhihu.com/search?q=%E8%A7%A6%E5%AE%9D%E8%BE%93%E5%85%A5%E6%B3%95&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22:%22answer%22,%22sourceId%22:2243717386%7D">触宝输入法</a>、触宝电话等海外市场为主，10-9-5）</li><li>商汤（总部，徐汇漕河泾，人工智能领域，9-8-5，猝死1例，年奖一般3个月）</li><li>旷视（上海分公司，徐汇虹漕路，人工智能领域，年奖一般2个月）</li><li>依图（总部，长宁区<a href="https://www.zhihu.com/search?q=%E5%A8%84%E5%B1%B1%E5%85%B3%E8%B7%AF&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22:%22answer%22,%22sourceId%22:2283520830%7D">娄山关路</a>，人工智能领域，年底1-2个月）</li><li><a href="https://www.zhihu.com/search?q=%E4%BA%91%E4%BB%8E&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22:%22answer%22,%22sourceId%22:2283520830%7D">云从</a>（上海分公司，浦东张江高科，人工智能领域）</li><li>ucloud（总部，杨浦区隆昌路，IaaS、PaaS服务商）</li><li>泛微网络（总部，闵行联航路，主要产品：eteams，OA类SaaS服务商）</li><li><a href="https://www.zhihu.com/search?q=%E5%A3%B0%E7%BD%91&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22:%22answer%22,%22sourceId%22:2283520830%7D">声网</a>（总部，杨浦五角场，音视频PaaS服务商）</li><li><a href="https://www.zhihu.com/search?q=%E4%B8%83%E7%89%9B%E4%BA%91&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22:%22answer%22,%22sourceId%22:2243717386%7D">七牛云</a>（总部，浦东亮秀路，PaaS服务商，云计算及数据服务）</li></ul><p><strong>工具类</strong></p><ul><li>WiFi<a href="https://www.zhihu.com/search?q=%E4%B8%87%E8%83%BD%E9%92%A5%E5%8C%99&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22:%22answer%22,%22sourceId%22:2268918674%7D">万能钥匙</a>（总部，浦东张衡路，连尚科技，wifi工具类）</li><li>商米科技（总部，杨浦淞沪路，IoT硬件解决方案，小米）</li><li>收钱吧（总部，<a href="https://www.zhihu.com/search?q=%E8%99%B9%E5%8F%A3%E5%8C%BA&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22:%22answer%22,%22sourceId%22:2243717386%7D">虹口区</a>中山北一路，收银硬件服务商，9-6-5）</li><li>前程无忧（总部，浦东张江高科，互联网招聘领域）</li><li><a href="https://www.zhihu.com/search?q=%E6%A0%BC%E7%93%A6%E6%8B%89&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22:%22answer%22,%22sourceId%22:2243717386%7D">格瓦拉</a>（总部，浦东陆家嘴，电影话剧等票务）</li><li>世纪佳缘（总部，徐汇漕溪北路，相亲交友网站）</li></ul><p><strong>游戏类</strong></p><ul><li>米哈游（总部，徐汇宜山路，游戏，代表作崩坏、原神系列，10-10-5）</li><li>莉莉丝游戏（总部，闵行宜山路，游戏，代表作万国觉醒等）</li><li><a href="https://www.zhihu.com/search?q=%E6%B8%B8%E6%97%8F%E7%BD%91%E7%BB%9C&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22:%22answer%22,%22sourceId%22:2243717386%7D">游族网络</a>（总部，徐汇宜山路，游戏）</li><li><a href="https://www.zhihu.com/search?q=%E4%B8%89%E4%B8%83%E4%BA%92%E5%A8%B1&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22:%22answer%22,%22sourceId%22:2268918674%7D">三七互娱</a>（总部，普陀武宁路，游戏）</li><li>巨人网络（总部，徐汇宜山路➡️松江中凯路，游戏）</li><li>盛趣游戏（总部，浦东张江高科，游戏）</li><li>心动网络（总部，静安大宁，游戏）</li><li>TapTap（总部，静安万荣路，游戏）</li><li>小牛互娱（总部，浦东张江高科，游戏&amp;应用软件，9-12-6，指纹打卡，工时排行）</li></ul><p><strong>房产汽车类</strong></p><ul><li>58（58上海分公司+安居客总部，浦东陆家嘴软件园，年底9-9-6，平时9-8-5）</li><li>链家/贝壳（上海分公司，黄浦黄陂南路，互联网房产，21年10月中旬开始上海地区研发和金融团队大规模裁员N+3，10-9-5）</li><li>途虎养车（总部，闵行虹中路，互联网汽车b2c）</li><li><a href="https://www.zhihu.com/search?q=%E7%99%BE%E5%A7%93%E7%BD%91&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22:%22answer%22,%22sourceId%22:2243717386%7D">百姓网</a>（总部，徐汇浩然大楼，分类信息检索，9-7-5）</li></ul><p><strong>金融类</strong></p><ul><li>陆金所（总部，浦东陆家嘴，互联网金融，加班不明）</li><li>平安系列（上海分公司，办公地点遍布上海，平安好医生在浦东中科路，9-6-5）</li><li><a href="https://www.zhihu.com/search?q=%E4%B8%9C%E6%96%B9%E8%B4%A2%E5%AF%8C&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22:%22answer%22,%22sourceId%22:2268918674%7D">东方财富</a>（总部，徐汇宛平南路，互联网金融，加班不明）</li><li>众安在线（总部，黄浦圆明园路，互联网保险，加班不明）</li><li>360数科（总部，浦东陆家嘴，360旗下信贷平台，加班不明）</li></ul><p><strong>在线教育</strong></p><ul><li>沪江英语（总部，浦东张江高科，互联网在线教育，加班不明）</li><li>英语流利说（总部，杨浦长阳创谷，互联网英语教育，加班不明）</li><li>掌门1对1（总部，虹口四平路，互联网在线教育，大小周，指纹打卡，有工时排名）</li></ul><p><strong>物流运输</strong></p><ul><li>满帮（上海分公司，长宁天山路，运满满，互联网物流）</li></ul><h3 id="外包公司"><a href="#外包公司" class="headerlink" title="外包公司"></a>外包公司</h3><p>1.博朗软件Bleum(上海)</p><p>2.中软国际(北京)</p><p>3.东软集团Neusoft (沈阳)</p><p>4.博彦科技BeyondSoft (北京)</p><p>5.中电金信(北京)</p><p>\6. 法本信息（深圳）</p><p>7.浙大网新Insigma (杭州)</p><p>8.奥博杰天Objectiva (北京)</p><p>9.浪潮Inspur (济南)</p><p>10.软通动力iSoftStone(北京 )</p><p>11.福瑞博德Freeborders(深圳 )</p><p>12.信必优Symbio(北京)</p><p>\13. 大展科技Achievo(深圳)</p><p>14.恒生电子hundsun(杭州)</p><p>15.日电卓越软件(北京 )</p><p>16.大连华信(大连 )</p><p>17.中和软件chuwa(. 上海)</p><p>18.新致软件newtouch(上海)</p><p>19.艾斯克雷(北京)</p><p>20.海隆软件hyron(上海)</p><p>21.大宇宙信息(天津)</p><p>22.晟峰软件(上海)</p><p>23.富士通信息(上海)</p><p>\24. NTTDATA(北京 )</p><p>25.宏智科技(苏州)</p><p>26.神州数码通用软件(北京)</p><p>27.凌志软件(上海苏州)</p><p>28.音泰思(成都 )</p><p>29.微创软件(上海)</p><p>30.开目佰钧成(武汉)</p><p>31.浩鲸智能（南京）</p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;目前上海it公司介绍&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="公司" scheme="https://www.dieselchen.work/categories/%E5%85%AC%E5%8F%B8/"/>
    
    
    <category term="公司" scheme="https://www.dieselchen.work/tags/%E5%85%AC%E5%8F%B8/"/>
    
  </entry>
  
  <entry>
    <title>2021年终总结</title>
    <link href="https://www.dieselchen.work/archives/a23e5172.html"/>
    <id>https://www.dieselchen.work/archives/a23e5172.html</id>
    <published>2022-01-01T02:05:35.000Z</published>
    <updated>2022-08-26T02:10:26.128Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>2021年就这样过去了，这一年有得有失，稍微总结一下</p></blockquote><span id="more"></span>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;2021年就这样过去了，这一年有得有失，稍微总结一下&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="总结" scheme="https://www.dieselchen.work/categories/%E6%80%BB%E7%BB%93/"/>
    
    <category term="成长与收获" scheme="https://www.dieselchen.work/categories/%E6%80%BB%E7%BB%93/%E6%88%90%E9%95%BF%E4%B8%8E%E6%94%B6%E8%8E%B7/"/>
    
    
    <category term="总结" scheme="https://www.dieselchen.work/tags/%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>2021年8月入门级电脑推荐</title>
    <link href="https://www.dieselchen.work/archives/8764d356.html"/>
    <id>https://www.dieselchen.work/archives/8764d356.html</id>
    <published>2021-08-03T09:31:43.000Z</published>
    <updated>2021-08-03T10:26:57.992Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>远房表弟中考考了省里最好的高中，正直暑假想配台电脑，列了一份清单。</p></blockquote><span id="more"></span><h3 id="配置一：京东整机"><a href="#配置一：京东整机" class="headerlink" title="配置一：京东整机"></a>配置一：京东整机</h3><p>处理器：i7-860 、i7-920、i7-930、i7-940随机发货   4核8线程  基本频率2.66GHz 最大睿频2.99GHz</p><p>显卡：   GTX1050 4g独显</p><p>主板：   英特尔 H55</p><p>内存：   镁光 8*2 16g双通道   ddr3 频率1600</p><p>硬盘：   镁光 nvme M.2 512固态硬盘</p><p>显示器 ：24寸 1080p 75Hz va面板</p><p>到手价：<span style='color:;background:rgb(249,240,242);font-size:文字大小;padding-left:5px;padding-right:5px;'>3880元</span></p><p>优点：这个价位性价比还是可以的。和实体店一样，赠送鼠标 键盘 鼠标垫。收到货连上电源线就可以用</p><p>缺点：处理器频率偏低了，主板太老了可扩展性也不太行。只支持ddr3内存。内存虽说16g但是 ddr3频率有点低。现在都是ddr4 入门级。个人不太推荐这款。主要核心 cpu和主板都有点老。不好升级。主板是2010年出的，</p><p>cpu是2008年上市的。相当于 10年之前的顶级配置 在 10年之后便宜价出售。</p><h3 id="配置二：京东整机"><a href="#配置二：京东整机" class="headerlink" title="配置二：京东整机"></a>配置二：京东整机</h3><p>处理器：i5 10400F 6核心12线程 基本频率2.9GHz 最大睿频4.3GHz</p><p>显卡：    GTX1050Ti 4g独显</p><p>主板：    微星 B560M</p><p>内存：    威刚 8G ddr4  频率2666</p><p>硬盘：   256  nvme M.2 固态硬盘</p><p>到手价：<span style='color:;background:rgb(249,240,242);font-size:文字大小;padding-left:5px;padding-right:5px;'>3599元</span>    </p><p>优点：处理器+主板都是近两年的新品。比较推荐。显卡入门级。内存也是ddr4 。</p><p>缺点：1显示器需要单独购买。500元左右可以买到入门级配置 24寸+1080p+75hz +ips面板 那合计 要在4100-4200左右。2.独立显卡考虑运送过程中有损坏，和主机分开发货，需要安装一下。有安装视频。</p><p>内存还是推荐16g ddr4 硬盘 500G固态 那就+500 总预算 4100+显示器价格 ～ 4600左右</p><h3 id="配置三：淘宝"><a href="#配置三：淘宝" class="headerlink" title="配置三：淘宝"></a>配置三：淘宝</h3><p><img src="https://image.dieselchen.work/uPic/2021/08/01/image-20210801125709535.png" alt="image-20210801125709535"></p><p>总价格：<span style='color:;background:rgb(249,240,242);font-size:文字大小;padding-left:5px;padding-right:5px;'>3899元</span>     </p><p>和配置二 +500元后 4100元相比 。内存频率 2666-》3200 而且便宜200元。</p><p>也是需要单独安装独立显卡和单独买显示器</p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;远房表弟中考考了省里最好的高中，正直暑假想配台电脑，列了一份清单。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="硬件" scheme="https://www.dieselchen.work/categories/%E7%A1%AC%E4%BB%B6/"/>
    
    <category term="台式机" scheme="https://www.dieselchen.work/categories/%E7%A1%AC%E4%BB%B6/%E5%8F%B0%E5%BC%8F%E6%9C%BA/"/>
    
    
    <category term="台式电脑" scheme="https://www.dieselchen.work/tags/%E5%8F%B0%E5%BC%8F%E7%94%B5%E8%84%91/"/>
    
    <category term="组装电脑" scheme="https://www.dieselchen.work/tags/%E7%BB%84%E8%A3%85%E7%94%B5%E8%84%91/"/>
    
    <category term="硬件" scheme="https://www.dieselchen.work/tags/%E7%A1%AC%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>git提交了想撤回怎么做？</title>
    <link href="https://www.dieselchen.work/archives/fc0a4be0.html"/>
    <id>https://www.dieselchen.work/archives/fc0a4be0.html</id>
    <published>2021-07-12T09:47:37.000Z</published>
    <updated>2021-07-12T09:50:34.622Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>写完代码后，我们一般这样 git add . //添加所有文件 git commit -m “本功能全部完成”   执行完commit后，想撤回commit，怎么办？</p></blockquote><span id="more"></span><p>写完代码后，我们一般这样</p><p>git add . //添加所有文件</p><p>git commit -m “本功能全部完成”</p><p>执行完commit后，想撤回commit，怎么办？</p><p>这样凉拌：</p><p><strong>git reset –soft HEAD^</strong></p><p>这样就成功的撤销了你的commit</p><p>注意，仅仅是撤回commit操作，您写的代码仍然保留。</p><h2 id="说一下个人理解"><a href="#说一下个人理解" class="headerlink" title="说一下个人理解"></a>说一下个人理解</h2><p>HEAD^的意思是上一个版本，也可以写成HEAD~1</p><p>如果你进行了2次commit，想都撤回，可以使用HEAD~2</p><h2 id="至于这几个参数："><a href="#至于这几个参数：" class="headerlink" title="至于这几个参数："></a>至于这几个参数：</h2><h3 id="–mixed"><a href="#–mixed" class="headerlink" title="–mixed"></a>–mixed</h3><p>意思是：不删除工作空间改动代码，撤销commit，并且撤销git add . 操作</p><p>这个为默认参数,git reset –mixed HEAD^ 和 git reset HEAD^ 效果是一样的。</p><h3 id="–soft"><a href="#–soft" class="headerlink" title="–soft"></a>–soft</h3><p>不删除工作空间改动代码，撤销commit，不撤销git add . </p><h3 id="–hard"><a href="#–hard" class="headerlink" title="–hard"></a>–hard</h3><p>删除工作空间改动代码，撤销commit，撤销git add . </p><p>注意完成这个操作后，就恢复到了上一次的commit状态。</p><h3 id="顺便说一下，如果commit注释写错了，只是想改一下注释，只需要："><a href="#顺便说一下，如果commit注释写错了，只是想改一下注释，只需要：" class="headerlink" title="顺便说一下，如果commit注释写错了，只是想改一下注释，只需要："></a>顺便说一下，如果commit注释写错了，只是想改一下注释，只需要：</h3><p>git commit –amend</p><p>此时会进入默认vim编辑器，修改注释完毕后保存就好了。</p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;写完代码后，我们一般这样 git add . //添加所有文件 git commit -m “本功能全部完成”   执行完commit后，想撤回commit，怎么办？&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="语言" scheme="https://www.dieselchen.work/categories/%E8%AF%AD%E8%A8%80/"/>
    
    <category term="Git" scheme="https://www.dieselchen.work/categories/%E8%AF%AD%E8%A8%80/Git/"/>
    
    
    <category term="Git" scheme="https://www.dieselchen.work/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>golang精度丢失问题</title>
    <link href="https://www.dieselchen.work/archives/9359d6b3.html"/>
    <id>https://www.dieselchen.work/archives/9359d6b3.html</id>
    <published>2021-05-27T04:11:36.000Z</published>
    <updated>2021-05-27T04:18:07.696Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>最近fix一个奇怪的bug，这个bug源于是为了解决商品价格在计算的时候因为有小数，在计算的时候由于存在精度丢失所以选择了乘 100 以分单位进行计算。但是在golang中 float64类型的 13.8 ✖️ 100 ！=1380</p></blockquote><span id="more"></span><p>在遇到这个bug之前。我一度以为浮点数的精度丢失问题，在保留2位小数的情况下，乘100变成整数再进行加减计算就不会丢精度，但事实是，乘法本身算出来的数就已经走样了。</p><h3 id="浮点数如何存储的-IEEE-754"><a href="#浮点数如何存储的-IEEE-754" class="headerlink" title="浮点数如何存储的-IEEE-754"></a>浮点数如何存储的-IEEE-754</h3><p>浮点数数据类型主要有：单精度float32、双精度float64</p><p><img src="https://image.dieselchen.work/uPic/2021/05/27/image-20210527115559707.png" alt="image-20210527115559707"></p><p><img src="https://image.dieselchen.work/uPic/2021/05/27/image-20210527115620932.png" alt="image-20210527115620932"></p><p>IEEE-754 标准是一个浮点数标准，存在 32、64、128 bit 三种格式（上面两幅图分别是 32 bit 和 64 bit 的情况，结构是一致的）</p><p>IEEE-754 标准将 64 位分为三部分：</p><ul><li><strong>sign</strong>，1 bit 的标识位，0 为正数，1 为负数</li><li><strong>exponent</strong>，指数，11 bit</li><li><strong>fraction</strong>，小数部分，52 bit</li></ul><h3 id="什么是精度丢失"><a href="#什么是精度丢失" class="headerlink" title="什么是精度丢失"></a>什么是精度丢失</h3><p> 计算机在处理数据都涉及到数据的转换和各种复杂运算，比如，不同单位换算，不同进制（如二进制十进制）换算等，很多除法运算不能除尽，比如10÷3=3.3333…..无穷无尽，而精度是有限的，3.3333333x3并不等于10，经过复杂的处理后得到的十进制数据并不精确，精度越高越精确。float32和float64的精度是由尾数的位数来决定的,其整数部分始终是一个隐含着的“1”，由于它是不变的，故不能对精度造成影响。float32：2^23 = 8388608，一共七位，由于最左为1的一位省略了，这意味着最多能表示8位数：28388608 = 16777216 。有8位有效数字，但绝对能保证的为7位，也即float32的精度为7<del>8位有效数字；float64：2^52 = 4503599627370496，一共16位，同理，float64的精度为16</del>17位。</p><p><strong>所谓的精度丢失就是无限循环小数在计算机怎么存储？计算机再大的内存它也存不下，对吧! 所以不能存储一个相对于数学来说的值，只能存储一个近似值，所以当计算机存储后再取出来用时就会出现精度问题。</strong></p><h3 id="Golang的解决方案"><a href="#Golang的解决方案" class="headerlink" title="Golang的解决方案"></a>Golang的解决方案</h3><p>使用第三方库 decimal</p><p>运行：go get github.com/shopspring/decimal</p><p>在运算开始前，设置你需要的精确的小数位数，自动四舍五入</p><p>decimal.DivisionPrecision = 2 // 保留两位小数，如有更多位，则进行四舍五入保留两位小数</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//  1.2+3 float和int相加</span></span><br><span class="line"><span class="keyword">var</span> num1 <span class="keyword">float64</span> = <span class="number">1.1</span></span><br><span class="line"><span class="keyword">var</span> num2 <span class="keyword">int</span> = <span class="number">2</span></span><br><span class="line">d1:=decimal.NewFromFloat(num1).Add(decimal.NewFromFloat(<span class="keyword">float64</span>(num2)))</span><br><span class="line"></span><br><span class="line"><span class="comment">//加 Add</span></span><br><span class="line"><span class="comment">//减 Sub</span></span><br><span class="line"><span class="comment">//乘 Mul</span></span><br><span class="line"><span class="comment">//除 Div</span></span><br><span class="line"><span class="comment">//decimal运算得到的结果可以转成自己想要的数据类型</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 13.8 *100</span></span><br><span class="line"><span class="keyword">var</span>  priceInt <span class="keyword">int64</span></span><br><span class="line"><span class="keyword">var</span> priceFloat <span class="keyword">float64</span> =<span class="number">13.8</span></span><br><span class="line">price:= decimal.NewFromFloat(priceFloat).Mul(decimal.NewFromInt(<span class="keyword">int64</span>(<span class="number">100</span>))).IntPart()</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;最近fix一个奇怪的bug，这个bug源于是为了解决商品价格在计算的时候因为有小数，在计算的时候由于存在精度丢失所以选择了乘 100 以分单位进行计算。但是在golang中 float64类型的 13.8 ✖️ 100 ！=1380&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="语言" scheme="https://www.dieselchen.work/categories/%E8%AF%AD%E8%A8%80/"/>
    
    <category term="Golang" scheme="https://www.dieselchen.work/categories/%E8%AF%AD%E8%A8%80/Golang/"/>
    
    
    <category term="Golang" scheme="https://www.dieselchen.work/tags/Golang/"/>
    
    <category term="精度丢失" scheme="https://www.dieselchen.work/tags/%E7%B2%BE%E5%BA%A6%E4%B8%A2%E5%A4%B1/"/>
    
  </entry>
  
  <entry>
    <title>使用Gorm遇到的坑</title>
    <link href="https://www.dieselchen.work/archives/3e3fcedd.html"/>
    <id>https://www.dieselchen.work/archives/3e3fcedd.html</id>
    <published>2021-05-07T04:06:19.000Z</published>
    <updated>2021-05-07T04:10:58.158Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>使用Gorm遇到的坑</p></blockquote><span id="more"></span><p>Gorm是用go语言编写的orm框架，它将数据库的结构与语言(golang)本身的数据结构对应了起来，其目的是为了加快我们CRUD的速度，简化sql语句的书写，利用对象的思想，让Gorm框架为我们拼接sql语句。但是在使用过程中有不少的坑还是需要注意一下。</p><h3 id="使用struct更新仅适用于非零值"><a href="#使用struct更新仅适用于非零值" class="headerlink" title="使用struct更新仅适用于非零值"></a>使用struct更新仅适用于非零值</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">user:=User&#123;</span><br><span class="line">Name:<span class="string">&quot;&quot;</span>,</span><br><span class="line">Age:<span class="number">0</span>,</span><br><span class="line">Actived:<span class="literal">false</span>,</span><br><span class="line">&#125;</span><br><span class="line">db.Model(&amp;user).Updates(user)</span><br><span class="line"><span class="comment">//此时不会更新这些零值，如需更新零值使用map</span></span><br><span class="line">userMap:=<span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">interface</span>&#123;&#125;&#123;</span><br><span class="line">  <span class="string">&quot;name&quot;</span>:<span class="string">&quot;&quot;</span>,</span><br><span class="line">  <span class="string">&quot;age&quot;</span>:<span class="number">0</span>,</span><br><span class="line">  <span class="string">&quot;actived&quot;</span>:<span class="number">0</span>,</span><br><span class="line">&#125;</span><br><span class="line">db.Model(&amp;user).Updates(userMap)</span><br></pre></td></tr></table></figure><h3 id="Gorm表名尾部自动加s"><a href="#Gorm表名尾部自动加s" class="headerlink" title="Gorm表名尾部自动加s"></a>Gorm表名尾部自动加s</h3><p>Gorm处理数据结构的时候遵循的是首字母规则和驼峰规则。对于结构体User，根据约定，其表名为users。</p><p>这里有两种方式去修改表名：第一种就是去掉这个默认设置；第二种就是在保留默认设置的基础上通过重新设定表名来替换。</p><p>先说如何通过重新设定表名来替换，可以实现 <code>Tabler</code> 接口来更改默认表名，例如：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> Tabler <span class="keyword">interface</span> &#123;</span><br><span class="line">TableName() <span class="keyword">string</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// TableName 会将User的表名重写为 `new_user`</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(User)</span> <span class="title">TableName</span><span class="params">()</span><span class="title">string</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;new_user&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以在创建数据库连接的时候，去掉这个默认设置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.SingularTable(true)</span><br></pre></td></tr></table></figure><h3 id="错误的使用ErrRecordNotFound"><a href="#错误的使用ErrRecordNotFound" class="headerlink" title="错误的使用ErrRecordNotFound"></a>错误的使用ErrRecordNotFound</h3><p>在我印象中有个错误的认知：如果Gorm没有找到record，则会返回<code>ErrRecordNotFound</code> 的错误，但是在具体使用中并不是这样</p><h4 id="Demo"><a href="#Demo" class="headerlink" title="Demo"></a>Demo</h4><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">  db := gorm.Open(<span class="string">&quot;mysql&quot;</span>,url)</span><br><span class="line">  user := &amp;User&#123;&#125;</span><br><span class="line">  users := <span class="built_in">make</span>([]*User, <span class="number">0</span>, <span class="number">0</span>)</span><br><span class="line">  err := db.Model(user).Where(<span class="string">&quot;id = ?&quot;</span>, <span class="number">1</span>).First(user).Error</span><br><span class="line">  fmt.Println(err, user)</span><br><span class="line"></span><br><span class="line">  err = db.Model(user).Where(<span class="string">&quot;id = ?&quot;</span>, <span class="number">1</span>).Find(&amp;users).Error</span><br><span class="line">  fmt.Println(err, user)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">record not found &amp;&#123;<span class="number">0</span>  &#125;</span><br><span class="line">&lt;<span class="literal">nil</span>&gt; &amp;&#123;<span class="number">0</span>  &#125;</span><br></pre></td></tr></table></figure><h3 id="使用Gorm-Model后无法查询数据"><a href="#使用Gorm-Model后无法查询数据" class="headerlink" title="使用Gorm.Model后无法查询数据"></a>使用Gorm.Model后无法查询数据</h3><ul><li>Scan error on column index 1, name “created_at”: unsupported Scan, storing driver.Value type []uint8</li></ul><p>解决方法：</p><p>打开数据库的时候加上parseTime=true</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root:123456@tcp(127.0.0.1:3306)&#x2F;mapdb?charset&#x3D;utf8&amp;parseTime&#x3D;true</span><br></pre></td></tr></table></figure><h3 id="数据库字段映射"><a href="#数据库字段映射" class="headerlink" title="数据库字段映射"></a>数据库字段映射</h3><ul><li>正常的数据库字段映射 user_name 映射为UserName</li><li>带梳子的数据库字段映射 api_ip_1映射为ApiIp_1而非ApiIp1</li></ul>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;使用Gorm遇到的坑&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="语言" scheme="https://www.dieselchen.work/categories/%E8%AF%AD%E8%A8%80/"/>
    
    <category term="Golang" scheme="https://www.dieselchen.work/categories/%E8%AF%AD%E8%A8%80/Golang/"/>
    
    
    <category term="Golang" scheme="https://www.dieselchen.work/tags/Golang/"/>
    
  </entry>
  
  <entry>
    <title>golang原生实现爬虫架构</title>
    <link href="https://www.dieselchen.work/archives/f05bbbc9.html"/>
    <id>https://www.dieselchen.work/archives/f05bbbc9.html</id>
    <published>2021-04-07T08:50:07.000Z</published>
    <updated>2021-04-09T15:13:21.814Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>学习了慕课网 golang爬虫。爬取珍爱网，从单机版–&gt;并发版–&gt;分布式版</p><p>本文对此过程做个总结</p></blockquote><span id="more"></span><h2 id="架构图演进"><a href="#架构图演进" class="headerlink" title="架构图演进"></a>架构图演进</h2><h3 id="单机版爬虫"><a href="#单机版爬虫" class="headerlink" title="单机版爬虫"></a>单机版爬虫</h3><p><img src="https://image.dieselchen.work/uPic/2021/04/09/%E5%8D%95%E6%9C%BA%E7%89%88%20%E7%88%AC%E8%99%AB.png" alt="单机版 爬虫"></p><h3 id="并发版爬虫-简单版调度器"><a href="#并发版爬虫-简单版调度器" class="headerlink" title="并发版爬虫(简单版调度器)"></a>并发版爬虫(简单版调度器)</h3><ul><li>把fetcher和parser封装成worker，输入request，输出requestresult.</li><li>新增scheduler，engine拿到request扔给scheduler。worker的输入输出都是channel</li><li>所有的worker共用一个输入。致命缺点！会产生循环等待</li></ul><p><img src="https://image.dieselchen.work/uPic/2021/04/09/%E5%B9%B6%E5%8F%91%E7%89%88%E7%88%AC%E8%99%AB%EF%BC%88%E7%AE%80%E5%8D%95%E7%89%88%E8%B0%83%E5%BA%A6%E5%99%A8%EF%BC%89.png" alt="并发版爬虫（简单版调度器）"></p><h3 id="并发版爬虫-并发版调度器"><a href="#并发版爬虫-并发版调度器" class="headerlink" title="并发版爬虫(并发版调度器)"></a>并发版爬虫(并发版调度器)</h3><ul><li>engine把request送给scheduler，scheduler给每个request启动一个groutine</li></ul>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;学习了慕课网 golang爬虫。爬取珍爱网，从单机版–&amp;gt;并发版–&amp;gt;分布式版&lt;/p&gt;
&lt;p&gt;本文对此过程做个总结&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="语言" scheme="https://www.dieselchen.work/categories/%E8%AF%AD%E8%A8%80/"/>
    
    <category term="Golang" scheme="https://www.dieselchen.work/categories/%E8%AF%AD%E8%A8%80/Golang/"/>
    
    
    <category term="Golang" scheme="https://www.dieselchen.work/tags/Golang/"/>
    
    <category term="爬虫" scheme="https://www.dieselchen.work/tags/%E7%88%AC%E8%99%AB/"/>
    
  </entry>
  
  <entry>
    <title>go源码分析-sync.Pool</title>
    <link href="https://www.dieselchen.work/archives/e7b919d2.html"/>
    <id>https://www.dieselchen.work/archives/e7b919d2.html</id>
    <published>2021-03-30T09:51:22.000Z</published>
    <updated>2021-03-30T10:30:45.543Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>go萌新入门，本文记录一下大佬们的优秀博文，精心研读，日积月累。</p></blockquote><span id="more"></span><h2 id="大佬博文"><a href="#大佬博文" class="headerlink" title="大佬博文"></a>大佬博文</h2><ul><li><a href="https://changkun.us/archives/2018/09/256/">欧神 源码分析</a></li><li><a href="https://reading.hidevops.io/reading/20180817/2018-08-17-sync-pool-reading.pdf">Go 夜读</a></li><li><a href="https://juejin.cn/post/6844903903046320136">源码分析，伪共享</a></li><li><a href="https://zhuanlan.zhihu.com/p/99710992">golang的对象池sync.pool源码解读</a></li><li><a href="https://www.jianshu.com/p/2e08332481c5">sync.Pool 的实现与演进</a></li></ul>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;go萌新入门，本文记录一下大佬们的优秀博文，精心研读，日积月累。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="语言" scheme="https://www.dieselchen.work/categories/%E8%AF%AD%E8%A8%80/"/>
    
    <category term="Golang" scheme="https://www.dieselchen.work/categories/%E8%AF%AD%E8%A8%80/Golang/"/>
    
    
    <category term="Golang" scheme="https://www.dieselchen.work/tags/Golang/"/>
    
    <category term="源码分析" scheme="https://www.dieselchen.work/tags/%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>记录一下第一次离职</title>
    <link href="https://www.dieselchen.work/archives/25ce9345.html"/>
    <id>https://www.dieselchen.work/archives/25ce9345.html</id>
    <published>2021-03-17T07:43:57.000Z</published>
    <updated>2021-03-17T15:03:50.671Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>20年6月毕业，7月底在上海找到一份工作。总结一下在牛牛成长的收获。在职时间2020-7-31 ～2021-3-17</p></blockquote><span id="more"></span><h3 id="找到第一份工作的激动"><a href="#找到第一份工作的激动" class="headerlink" title="找到第一份工作的激动"></a>找到第一份工作的激动</h3><p>​        毕业了找工作很难，现阶段程序员初级岗很饱和，想找到一份不错的工作还是有难度的。记得当时牛牛成长一面是视频面：文林哥给我面的，说真的当时面的很不好，我简历上写的很夸张，导致很多问题问深了就不会了。当时我记得文林问了一句，你觉得你的优势在哪？我抓住了这个机会说我学习能力很强，我也很想转go开发。可能是因为我当时真的很想进这家公司，在hr问我期望薪资的时候，我压到了6k左右。在二面之前已经拿到一个外包的offer。当时也是很激动，但还好没有去外包。外包是程序员的一生黑，能不去外包尽量不去外包。二面是和磊哥聊的，当时聊的还挺不错的，就斗胆要了7k，谁知当场就拿到了offer。</p><h3 id="第一个月的压力之大"><a href="#第一个月的压力之大" class="headerlink" title="第一个月的压力之大"></a>第一个月的压力之大</h3><p>​        从java转go对我来说挑战挺大的，因为我java学的也不咋样，所以每天回到家里还是会继续熟悉项目、熟悉数据库表的设计、熟悉各种框架。这一个月体重飙升，因为朝10晚7，再加会班，到家基本上10-11点了。再猛吃一顿，对于我这种易胖体质来说简直是灾难。可能是因为压力有点大导致自己的精神面貌可能不是很好，解决一些问题给人的感觉很困难。其实我分析过为啥文林、磊哥对我的评价 那么低，我一直抱着一种被低估的心态参与工作 ，虽说自我感觉是能够在规定时间完成任务，但可能言语之间就暴露了自己的问题。导致我心态发生变化是我打听到两个前端应届生都比我高2k，但实力感觉和我差不多。</p><h3 id="艰难的涨薪"><a href="#艰难的涨薪" class="headerlink" title="艰难的涨薪"></a>艰难的涨薪</h3><p>​        我好像在第三个月就开始提涨薪了，因为自我感觉良好，我做的东西还是很多的。但直接被否定了，可能对我的打击挺大的，不管怎么样我应该在平时的工作中都受到了影响。在任务驱动的环境下，我还是按部就班的完成leader布置的任务。可能问林看到我完成度还不错，跟我说让我转node，给app后端写服务就给我涨薪到 10k，但是当场就被磊哥拦下了，当时诗文已经走了，磊哥想带着我用go去写一些东西，而且想把我们现有的服务用CI、CD的方式部署。说当我完成了就给我涨薪。没过多久文林就走了，从那时候感觉app团队做的东西肯定要凉，磊哥还是继续带领我们做事情。我花了一周的时间完成了CI、CD，紧接着参与了app后端数据提供、用户中心搭建。我在年前看完成度不错又再一次和磊哥提了涨薪，磊哥给予我的是肯定，但也说了我现在还需要继续学，给我推荐了一本书《clean code》、让我 多看看源码。也说了差不多2个月就会给我涨薪。还提醒了我，我们现在的最重要的任务就是完成App的开发。转眼间就快到除夕了。在过年之前我还是把sms短信登陆做完了，可能是照着node写的，当时磊哥直接在群里@我说做的不行，我也进行了反驳，我之前一直找他说怎么设计sms表，一直没给回复，说先把oauth2完成。我也是先给个demo，在群里激辩起来。可能是我做的不对吧，自己才疏学浅，没有达到磊哥的要求。我是真的没想到磊哥年终奖居然给我了不到300。这一下子给我打醒了，这段时间的工作毫无意义，自己的绩效是最差的，我做的所有东西都是无用功 ，没有给公司带来任务的利益。之后……之后磊哥就带领着核心成员投奔了文林，其实这波操作我是真的没想到的。</p><h3 id="学习成长过程"><a href="#学习成长过程" class="headerlink" title="学习成长过程"></a>学习成长过程</h3><p>​        其实我在牛牛成长的这半年内，自己学到的东西还是很多的。比如 linux命令的熟练掌握 、git流程的掌握 、前后端连调、从产品、开发、测试、验收的整体流程等等。具体到项目就是我做了wbs后端leads线索公海、leads状态流转、找教练功能。cms改了很多很多bug，越来越熟悉cms系统，熟悉各种表结构。小程序也做了体能测试等。自己写了很多sql 完成bi报表。也进行了sql优化。explain分析sql。知道了docker、dockerfile、docker-compose、k8s。在磊哥的带领下用 go-zero从0-1起了个新的项目。集成了钉钉的扫码登录 ，自己基于oauth2的标准协议提供了授权接口。总的来说学到了很多、在 大牛们的带领下，我算是入了后端的门了 。</p><h3 id="展望"><a href="#展望" class="headerlink" title="展望"></a>展望</h3><p>​        今天办理了离职、明天就要奔赴新的公司、认识新的同事、在新的环境里工作。我希望自己可以在新的工作环境中提高自己的工作效率，和同事们处好关系，保持一个积极向上的乐观心态。一步一个脚印，加油！</p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;20年6月毕业，7月底在上海找到一份工作。总结一下在牛牛成长的收获。在职时间2020-7-31 ～2021-3-17&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="成长与收获" scheme="https://www.dieselchen.work/categories/%E6%88%90%E9%95%BF%E4%B8%8E%E6%94%B6%E8%8E%B7/"/>
    
    <category term="离职" scheme="https://www.dieselchen.work/categories/%E6%88%90%E9%95%BF%E4%B8%8E%E6%94%B6%E8%8E%B7/%E7%A6%BB%E8%81%8C/"/>
    
    
    <category term="牛牛成长" scheme="https://www.dieselchen.work/tags/%E7%89%9B%E7%89%9B%E6%88%90%E9%95%BF/"/>
    
    <category term="离职" scheme="https://www.dieselchen.work/tags/%E7%A6%BB%E8%81%8C/"/>
    
    <category term="跳槽" scheme="https://www.dieselchen.work/tags/%E8%B7%B3%E6%A7%BD/"/>
    
  </entry>
  
  <entry>
    <title>golang学习笔记</title>
    <link href="https://www.dieselchen.work/archives/f20814c0.html"/>
    <id>https://www.dieselchen.work/archives/f20814c0.html</id>
    <published>2021-03-17T04:25:17.000Z</published>
    <updated>2021-03-17T15:17:29.521Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>golang一些用法记录一下（持续更新）</p></blockquote><span id="more"></span><h2 id="golang中截取字符串"><a href="#golang中截取字符串" class="headerlink" title="golang中截取字符串"></a>golang中截取字符串</h2><h3 id="截取普通英文字符串"><a href="#截取普通英文字符串" class="headerlink" title="截取普通英文字符串"></a>截取普通英文字符串</h3><p>当你需要截取字符串中的一部分时，可以使用像截取数组某部分那样来操作</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">s := <span class="string">&quot;GoXHelloWorldX&quot;</span></span><br><span class="line">content:=s[<span class="number">3</span>:<span class="built_in">len</span>(s)<span class="number">-1</span>]</span><br><span class="line">fmt.Println(content)</span><br></pre></td></tr></table></figure><p>运行结果为： HelloWorld</p><h3 id="截取带中文字符串"><a href="#截取带中文字符串" class="headerlink" title="截取带中文字符串"></a>截取带中文字符串</h3><p>一个中文字符肯定不止一个字节，难道我还得遍历每个字节，判断编码，那也太麻烦了吧。我们不需要考虑那么多，除了byte还有另外一个类型rune，使用它完全不用考虑unicode字节问题，一个中文就只占一个数组下标</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">s:=<span class="string">&quot;我He你好吗？&quot;</span></span><br><span class="line">content:=[]<span class="keyword">rune</span>(s)[<span class="number">3</span>:]</span><br><span class="line">fmt.Println(content)</span><br></pre></td></tr></table></figure><p>运行结果：你好吗？</p><h2 id="golang-string-和int-转换"><a href="#golang-string-和int-转换" class="headerlink" title="golang string 和int 转换"></a>golang string 和int 转换</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//string转成int：</span></span><br><span class="line"><span class="keyword">int</span>, err := strconv.Atoi(<span class="keyword">string</span>)</span><br><span class="line"><span class="comment">//string转成int64：</span></span><br><span class="line"><span class="keyword">int64</span>, err := strconv.ParseInt(<span class="keyword">string</span>, <span class="number">10</span>, <span class="number">64</span>)</span><br><span class="line"><span class="comment">//int转成string：</span></span><br><span class="line"><span class="keyword">string</span> := strconv.Itoa(<span class="keyword">int</span>)</span><br><span class="line"><span class="comment">//int64转成string：</span></span><br><span class="line"><span class="keyword">string</span> := strconv.FormatInt(<span class="keyword">int64</span>,<span class="number">10</span>)</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;golang一些用法记录一下（持续更新）&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="语言" scheme="https://www.dieselchen.work/categories/%E8%AF%AD%E8%A8%80/"/>
    
    <category term="Golang" scheme="https://www.dieselchen.work/categories/%E8%AF%AD%E8%A8%80/Golang/"/>
    
    
    <category term="Golang" scheme="https://www.dieselchen.work/tags/Golang/"/>
    
    <category term="学习笔记" scheme="https://www.dieselchen.work/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>牛牛App登陆过程</title>
    <link href="https://www.dieselchen.work/archives/7474afea.html"/>
    <id>https://www.dieselchen.work/archives/7474afea.html</id>
    <published>2021-03-17T03:24:37.000Z</published>
    <updated>2021-03-17T03:44:21.149Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>牛牛成长直播app搭建用户中心</p></blockquote><span id="more"></span><p>牛牛APP登录全流程</p><p>当前流程如下</p><p><img src="https://image.dieselchen.work/uPic/2021/03/17/image-20210317113919021.png" alt="image-20210317113919021"></p><h1 id="验证码登录过程描述"><a href="#验证码登录过程描述" class="headerlink" title="验证码登录过程描述"></a>验证码登录过程描述</h1><h2 id="请求发送验证码"><a href="#请求发送验证码" class="headerlink" title="请求发送验证码"></a>请求发送验证码</h2><ol><li>查找 <a href="https://e1z7tg61mh.feishu.cn/docs/doccncpydiPIcsDoT4pktxBsdof#ngf20O">sms_codes</a> 记录，是否存在手机号相同且未过期的验证码。如不存在，新建记录；如存在，更新验证码的过期时间。</li><li>追加相关的设备信息。</li><li>检查 <strong>手机号</strong> 与 <strong>国家区号</strong> 发送次数是否被限制，否则直接返回失败。错误码 <a href="https://e1z7tg61mh.feishu.cn/docs/doccncpydiPIcsDoT4pktxBsdof#toyMPx">403</a></li><li>检查腾讯云短信服务是否发送成功，否则直接返回失败。错误码 <a href="https://e1z7tg61mh.feishu.cn/docs/doccncpydiPIcsDoT4pktxBsdof#toyMPx">503</a></li><li>发送成功</li></ol><h2 id="验证发送的验证码"><a href="#验证发送的验证码" class="headerlink" title="验证发送的验证码"></a>验证发送的验证码</h2><ol><li>正则匹配 code 是否通过，否则直接返回失败。错误码 <a href="https://e1z7tg61mh.feishu.cn/docs/doccncpydiPIcsDoT4pktxBsdof#toyMPx">403</a></li><li>查找 <a href="https://e1z7tg61mh.feishu.cn/docs/doccncpydiPIcsDoT4pktxBsdof#ngf20O">sms_codes</a> 存在未验证的短信验证码，否则直接返回失败。错误码 <a href="https://e1z7tg61mh.feishu.cn/docs/doccncpydiPIcsDoT4pktxBsdof#toyMPx">404</a></li><li>通过 <strong>手机号</strong> 与 <strong>国家区号</strong> 查找用户，如果查找不到完成自动注册</li><li>生成 tshn 的 access_token</li><li>验证成功</li></ol><h1 id="OAuth-登录鉴权过程"><a href="#OAuth-登录鉴权过程" class="headerlink" title="OAuth 登录鉴权过程"></a>OAuth 登录鉴权过程</h1><h2 id="请求OAuth2授权码"><a href="#请求OAuth2授权码" class="headerlink" title="请求OAuth2授权码"></a>请求OAuth2授权码</h2><table><thead><tr><th>接口地址</th><th>GET /oauth/authorize</th><th></th></tr></thead><tbody><tr><td>请求参数</td><td>client_id</td><td>客户端标识，如 “nnapp-student”</td></tr><tr><td></td><td>response_type</td><td>这里按照规范约定值为 “code”</td></tr><tr><td></td><td>redirect_uri</td><td>请求成功后的回调地址，例如 <a href="https://example.com/oauth/callback">https://example.com/oauth/callback</a></td></tr><tr><td></td><td>state</td><td>规范中约定的防止 CSRF 的值，通常为随机字符串</td></tr><tr><td>请求头</td><td>Authorization</td><td>tshn 专用的 access token</td></tr><tr><td></td><td>x-user-id</td><td>用户在 tshn 中 userid</td></tr><tr><td>返回结果</td><td>重定向到 redirect_uri 参数指定的地址</td><td>在本例中，会返回重定向请求到 <a href="https://example.com/oauth/callback?code=xxxx&amp;state=xx">https://example.com/oauth/callback?code=xxxx&amp;state=xx</a> 其中 code 为后续换取 access token 所用的临时验证码</td></tr></tbody></table><h2 id="换取Access-Token"><a href="#换取Access-Token" class="headerlink" title="换取Access Token"></a>换取Access Token</h2><table><thead><tr><th>接口地址</th><th>POST /oauth/token</th><th></th></tr></thead><tbody><tr><td>请求参数</td><td>code</td><td>用于换取 access code 的验证码，由上一个接口返回，例如 “xxxx”</td></tr><tr><td></td><td>grant_type</td><td>按照规范约定，此处为 “authorization_code”</td></tr><tr><td></td><td>client_id</td><td>用于表明客户端身份的标识，如 “nncz-student”</td></tr><tr><td></td><td>client_secret</td><td>客户端 client_id 对应的密钥</td></tr><tr><td>请求头</td><td>Authorization</td><td>tshn 专用的 access token</td></tr><tr><td></td><td>x-user-id</td><td>用户在 tshn 中 userid</td></tr><tr><td>返回结果</td><td>一个 JSON object</td><td>{  “access_token”: “”,  “token_type: “Bearer”,  “expires_at”: “unix timestamp”,  “role”: “coach”, //  “scope”: …,  “refresh_token”: … }</td></tr></tbody></table><h2 id="刷新Access-Token"><a href="#刷新Access-Token" class="headerlink" title="刷新Access Token"></a>刷新Access Token</h2><table><thead><tr><th>接口地址</th><th>POST /oauth/token</th><th></th></tr></thead><tbody><tr><td>请求参数</td><td>refresh_token</td><td>refresh_token</td></tr><tr><td></td><td>grant_type</td><td>按照规范约定，此处为 “refresh_token”</td></tr><tr><td></td><td>client_id</td><td>用于表明客户端身份的标识，如 “nncz-student”</td></tr><tr><td></td><td>client_secret</td><td>客户端 client_id 对应的密钥</td></tr><tr><td>请求头</td><td>Authorization</td><td>tshn 专用的 access token</td></tr><tr><td></td><td>x-user-id</td><td>用户在 tshn 中 userid</td></tr><tr><td>返回结果</td><td>一个 JSON object</td><td>{  “access_token”: “”,  “token_type: “Bearer”,  “expires_at”: “unix timestamp”,  “role”: “coach”, //  “scope”: …,  “refresh_token”: … }</td></tr></tbody></table><h1 id="接口定义"><a href="#接口定义" class="headerlink" title="接口定义"></a>接口定义</h1><h2 id="SMS-接口"><a href="#SMS-接口" class="headerlink" title="SMS 接口"></a>SMS 接口</h2><h3 id="发送验证码"><a href="#发送验证码" class="headerlink" title="发送验证码"></a>发送验证码</h3><table><thead><tr><th>请求路径</th><th>/sms/send</th></tr></thead><tbody><tr><td>请求方法</td><td>POST</td></tr><tr><td>请求头</td><td>content-type: application/x-www-form-urlencoded</td></tr><tr><td>请求参数</td><td>phone=17671773306&amp;country_code=86&amp;unique_id=xxx&amp;device_id=iPhone13%2C4&amp;mac_address=xxx&amp;ip_address=127.0.0.1</td></tr><tr><td>返回</td><td>Status=200 {“message”: “发送成功”}</td></tr><tr><td>错误码error</td><td><a href="https://e1z7tg61mh.feishu.cn/docs/doccncpydiPIcsDoT4pktxBsdof#toyMPx">牛牛APP登录全流程</a></td></tr></tbody></table><h3 id="检查验证码"><a href="#检查验证码" class="headerlink" title="检查验证码"></a>检查验证码</h3><table><thead><tr><th>请求路径</th><th>/sms/verify</th></tr></thead><tbody><tr><td>请求方法</td><td>POST</td></tr><tr><td>请求头</td><td>content-type: application/x-www-form-urlencoded</td></tr><tr><td>请求参数</td><td>phone=17671773306&amp;country_code=86&amp;code=9999</td></tr><tr><td>返回</td><td>Status=200 {“tshn_access_token”:token,”user_id”:1000000} tshn 用 token（通过 jwt 方式加密），token 的内容包含 {  userId: … // 学生 id 从 100 0000 开始  role: … // 可能值为 coach, student  exp: … // timestamp   iat: ..//timestamp } Status!=200  {    “error”: “invalid-code-error”,    “error_description”: “验证码没有通过正则匹配” }</td></tr><tr><td>错误码error</td><td><a href="https://e1z7tg61mh.feishu.cn/docs/doccncpydiPIcsDoT4pktxBsdof#toyMPx">牛牛APP登录全流程</a></td></tr></tbody></table><h3 id="错误码"><a href="#错误码" class="headerlink" title="错误码"></a>错误码</h3><table><thead><tr><th><strong>error</strong></th><th><strong>message</strong></th><th><strong>描述</strong></th></tr></thead><tbody><tr><td>100</td><td>action_not_found</td><td>操作的方法不存在</td></tr><tr><td>403</td><td>send-restricted</td><td>该手机号发送次数受到限制</td></tr><tr><td>403</td><td>invalid-code-error</td><td>验证码没有通过正则匹配  regex: <strong>/^\d{4}$/</strong></td></tr><tr><td>404</td><td>code-not-found</td><td>没有查询到匹配的验证码</td></tr><tr><td>500</td><td>find-user-error</td><td>没有查询到该手机号绑定的用户（自动注册功能完成后该错误失效）</td></tr><tr><td>503</td><td>send-fail-error</td><td>短信发送失败了（腾讯云短信服务）</td></tr><tr><td>999</td><td>incomplete_device_info</td><td>没有设备信息</td></tr></tbody></table><h2 id="OAuth-接口"><a href="#OAuth-接口" class="headerlink" title="OAuth 接口"></a>OAuth 接口</h2><h3 id="获取授权"><a href="#获取授权" class="headerlink" title="获取授权"></a>获取授权</h3><h3 id="获取-AccessToken"><a href="#获取-AccessToken" class="headerlink" title="获取 AccessToken"></a>获取 AccessToken</h3><h3 id="请求业务接口"><a href="#请求业务接口" class="headerlink" title="请求业务接口"></a>请求业务接口</h3><h1 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h1><h2 id="SMS-相关表结构"><a href="#SMS-相关表结构" class="headerlink" title="SMS 相关表结构"></a>SMS 相关表结构</h2><h3 id="sms-code-包含gorm-Model"><a href="#sms-code-包含gorm-Model" class="headerlink" title="sms_code(包含gorm.Model)"></a>sms_code(包含gorm.Model)</h3><table><thead><tr><th>属性</th><th>类型</th><th>备注</th></tr></thead><tbody><tr><td>phone</td><td>varchar(30)</td><td>手机号，如：131012345678</td></tr><tr><td>country_code</td><td>varchar(10)</td><td>地区号，如 86，与手机号一同构成唯一标识</td></tr><tr><td>expire_at</td><td>timestamp</td><td>“2020-01-01 13:05:39”，表示这个 code 的过期时间</td></tr><tr><td>code</td><td>String</td><td>四位数字，例如 9527</td></tr><tr><td>verified</td><td>tinyint</td><td>默认为 0，当通过 /verify API 验证过以后会设置为 1</td></tr></tbody></table><h3 id="sms-client-包含gorm-Model"><a href="#sms-client-包含gorm-Model" class="headerlink" title="sms_client(包含gorm.Model)"></a>sms_client(包含gorm.Model)</h3><table><thead><tr><th>属性</th><th>类型</th><th>备注</th></tr></thead><tbody><tr><td>sms_code_id</td><td>int</td><td>sms_code_id    sms_code的主键</td></tr><tr><td>device_id</td><td>varchar(100)</td><td>设备ID</td></tr><tr><td>mac_address</td><td>varchar(100)</td><td>设备网卡的mac地址(ios7之后无法检索出)</td></tr><tr><td>unique_id</td><td>varchar(255)</td><td>设备唯一标识</td></tr><tr><td>ip_address</td><td>varchar(50)</td><td>设备网卡分配的ip地址</td></tr></tbody></table><p><img src="https://image.dieselchen.work/uPic/2021/03/17/image-20210317114229778.png" alt="image-20210317114229778"></p><h2 id="OAuth-相关表结构-（tshn-的数据库中）"><a href="#OAuth-相关表结构-（tshn-的数据库中）" class="headerlink" title="OAuth 相关表结构 （tshn 的数据库中）"></a>OAuth 相关表结构 （tshn 的数据库中）</h2><h3 id="oauth-client-包含gorm-Model"><a href="#oauth-client-包含gorm-Model" class="headerlink" title="oauth_client(包含gorm.Model)"></a>oauth_client(包含gorm.Model)</h3><table><thead><tr><th>client_id</th><th>varchar(255)</th><th>发起对资源请求的客户端标识符，对应 /oauth/authorize 请求中的 client_id。客户端是指 手机端 app，或者小程序，等。</th></tr></thead><tbody><tr><td>client_secret</td><td>varchar(255)</td><td>对应请求中的参数 client_secret</td></tr><tr><td>redirect_uri</td><td>varchar(255)</td><td>重定向地址    “<a href="https://chat3.nncz.cn/oauth/callback&quot;">https://chat3.nncz.cn/oauth/callback&quot;</a></td></tr><tr><td>data</td><td>json</td><td>clientInfo Json存储信息</td></tr></tbody></table><h3 id="oauth-token-包含gorm-Model"><a href="#oauth-token-包含gorm-Model" class="headerlink" title="oauth_token(包含gorm.Model)"></a>oauth_token(包含gorm.Model)</h3><table><thead><tr><th>code</th><th>varchar(255)</th><th>授权码 authorization_code</th></tr></thead><tbody><tr><td>access</td><td>varchar(255)</td><td>access_token</td></tr><tr><td>refresh</td><td>varchar(255)</td><td>refresh_token</td></tr><tr><td>expire_at</td><td>timestamp</td><td>refresh过期时间</td></tr><tr><td>data</td><td>json</td><td>tokenInfo Json存储信息</td></tr></tbody></table><h2 id="短信配置"><a href="#短信配置" class="headerlink" title="短信配置"></a>短信配置</h2><table><thead><tr><th>常量名称</th><th>描述</th></tr></thead><tbody><tr><td>secretId</td><td>腾讯云Apikey的id</td></tr><tr><td>secretKey</td><td>腾讯云Apikey的key</td></tr><tr><td>smsAppId</td><td>短信服务的项目appId</td></tr><tr><td>smsSign</td><td>短信签名</td></tr><tr><td>smsTemplateID</td><td>短信模版id</td></tr></tbody></table><h2 id="登录配置"><a href="#登录配置" class="headerlink" title="登录配置"></a>登录配置</h2><table><thead><tr><th>code</th><th>有效期时长，默认 5分钟</th></tr></thead><tbody><tr><td>access_token</td><td>有效期，默认 6 小时</td></tr><tr><td>refresh_token</td><td>刷新token，默认 30 天</td></tr></tbody></table><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ol><li><a href="https://zhuanlan.zhihu.com/p/89020647">OAuth 2.0 详解</a></li><li><a href="http://www.ruanyifeng.com/blog/2019/04/oauth-grant-types.html">OAuth 2.0 的四种方式</a>（阮一峰的博客）</li><li>oauth2-server 的<a href="https://oauth2-server.readthedocs.io/">开发文档</a></li><li><a href="https://tools.ietf.org/html/rfc6749.html">RFC 6749</a></li><li><a href="https://www.oauth.com/playground/">OAuth Playground</a></li><li><a href="https://console.cloud.tencent.com/api/explorer?Product=sms">QCloud API Explorer(短信)</a></li></ol>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;牛牛成长直播app搭建用户中心&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="架构设计" scheme="https://www.dieselchen.work/categories/%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1/"/>
    
    <category term="技术文档" scheme="https://www.dieselchen.work/categories/%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1/%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/"/>
    
    
    <category term="登陆" scheme="https://www.dieselchen.work/tags/%E7%99%BB%E9%99%86/"/>
    
    <category term="用户中心" scheme="https://www.dieselchen.work/tags/%E7%94%A8%E6%88%B7%E4%B8%AD%E5%BF%83/"/>
    
  </entry>
  
  <entry>
    <title>集成钉钉扫码登陆</title>
    <link href="https://www.dieselchen.work/archives/d3f55236.html"/>
    <id>https://www.dieselchen.work/archives/d3f55236.html</id>
    <published>2021-03-17T03:08:47.000Z</published>
    <updated>2021-03-17T03:44:21.150Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>集成钉钉扫码登录的时序图</p></blockquote><span id="more"></span><p>已在钉钉创建登录应用 (<a href="https://open-dev.dingtalk.com/">https://open-dev.dingtalk.com</a>)</p><table><thead><tr><th>名称</th><th>OAuth 系统集成</th></tr></thead><tbody><tr><td>描述</td><td>用于企业内部系统的登录</td></tr><tr><td>LOGO 地址</td><td><a href="https://nnemp-product-1254101407.cos.ap-shanghai.myqcloud.com/logo/logo1.png">https://nnemp-product-1254101407.cos.ap-shanghai.myqcloud.com/logo/logo1.png</a></td></tr><tr><td>回调地址</td><td><a href="https://oauth.nncz.cn/dingtalk/callback">https://oauth.nncz.cn/dingtalk/callback</a></td></tr><tr><td>appId</td><td>*<strong>**</strong></td></tr><tr><td>appSecret</td><td>*<strong>**</strong></td></tr></tbody></table><ol><li>扫码成功以后返回 loginTmpCode</li><li>浏览器发送请求到 goto 参数指定的地址</li><li>通过这个地址生成 jwt token 并返回给浏览器</li></ol><h2 id="时序图"><a href="#时序图" class="headerlink" title="时序图"></a>时序图</h2><p><img src="https://image.dieselchen.work/uPic/2021%2003%2017%20image-20210317110406824%20.png" alt="image-20210317110406824"></p><h2 id="staff表结构"><a href="#staff表结构" class="headerlink" title="staff表结构"></a>staff表结构</h2><table><thead><tr><th>属性</th><th>类型</th><th align="center">备注</th></tr></thead><tbody><tr><td>id</td><td>Uint</td><td align="center">主键自增</td></tr><tr><td>unionid</td><td>String</td><td align="center">用户在当前开放应用所属企业的唯一标识</td></tr><tr><td>openid</td><td>String</td><td align="center">用户在当前开放应用内的唯一标识</td></tr><tr><td>dingid</td><td>String</td><td align="center">钉钉id</td></tr><tr><td>nickname</td><td>String</td><td align="center">用户在钉钉上面的昵称</td></tr><tr><td>created_at</td><td>Date</td><td align="center">记录创建时间</td></tr><tr><td>updated_at</td><td>Date</td><td align="center">记录更新时间</td></tr><tr><td>deleted_at</td><td>Date</td><td align="center">记录删除时间</td></tr></tbody></table><h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><ul><li><a href="https://developers.dingtalk.com/document/app">钉钉开发者文档</a></li></ul>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;集成钉钉扫码登录的时序图&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="架构设计" scheme="https://www.dieselchen.work/categories/%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1/"/>
    
    <category term="技术文档" scheme="https://www.dieselchen.work/categories/%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1/%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/"/>
    
    
    <category term="钉钉" scheme="https://www.dieselchen.work/tags/%E9%92%89%E9%92%89/"/>
    
    <category term="扫码登录" scheme="https://www.dieselchen.work/tags/%E6%89%AB%E7%A0%81%E7%99%BB%E5%BD%95/"/>
    
    <category term="技术文档" scheme="https://www.dieselchen.work/tags/%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/"/>
    
  </entry>
  
  <entry>
    <title>go语言的并发模型GPM</title>
    <link href="https://www.dieselchen.work/archives/c5d273ba.html"/>
    <id>https://www.dieselchen.work/archives/c5d273ba.html</id>
    <published>2021-03-09T03:05:30.000Z</published>
    <updated>2021-03-17T03:44:21.146Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>go语言并发模型 GPM的解释</p></blockquote><span id="more"></span><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="https://learnku.com/articles/41728">Golang 调度器 GMP 原理与调度全分析</a></li><li><a href="https://www.golangroadmap.com/class/goadvanced/3-4.html#_2-3-runqueue%E6%89%A7%E8%A1%8C%E5%AE%8C%E6%88%90">go语言并发模型</a></li></ul>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;go语言并发模型 GPM的解释&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="语言" scheme="https://www.dieselchen.work/categories/%E8%AF%AD%E8%A8%80/"/>
    
    <category term="Golang" scheme="https://www.dieselchen.work/categories/%E8%AF%AD%E8%A8%80/Golang/"/>
    
    
    <category term="Golang" scheme="https://www.dieselchen.work/tags/Golang/"/>
    
    <category term="并发模型" scheme="https://www.dieselchen.work/tags/%E5%B9%B6%E5%8F%91%E6%A8%A1%E5%9E%8B/"/>
    
    <category term="Goroutine" scheme="https://www.dieselchen.work/tags/Goroutine/"/>
    
  </entry>
  
  <entry>
    <title>hexo 部署到服务器上</title>
    <link href="https://www.dieselchen.work/archives/60f3c3ab.html"/>
    <id>https://www.dieselchen.work/archives/60f3c3ab.html</id>
    <published>2021-03-07T10:19:20.000Z</published>
    <updated>2021-03-07T10:40:17.546Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本站之前的博客是部署在github pages 上的，考虑到国内用户并不是都可以科学上网，并且我在20年双11买的阿里云轻量型ecs 一直闲置，今天捣鼓一下，把hexo 部署到阿里云上</p></blockquote><span id="more"></span><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="https://zhuanlan.zhihu.com/p/82437065">带你跳过各种坑，一次性把 Hexo 博客部署到自己的服务器</a></li><li><a href="https://www.jianshu.com/p/70bf58c48010">HEXO 部署到云服务器详细指南</a></li></ul><h2 id="前提"><a href="#前提" class="headerlink" title="前提"></a>前提</h2><p>你得拥有一台云服务器，阿里云，腾讯云都可以，我们通过ssh连接到 服务器，下载git、nginx，具体的下载步骤就不说了，网上都有。</p><h2 id="创建git私有库"><a href="#创建git私有库" class="headerlink" title="创建git私有库"></a>创建git私有库</h2><h3 id="在云服务器上创建一个-GIT-用户，用来运行-GIT-服务"><a href="#在云服务器上创建一个-GIT-用户，用来运行-GIT-服务" class="headerlink" title="在云服务器上创建一个 GIT 用户，用来运行 GIT 服务"></a>在云服务器上创建一个 GIT 用户，用来运行 GIT 服务</h3><ul><li>创建用户：<code>adduser git</code></li><li>设置密码：<code>passwd git</code></li></ul><h3 id="创建证书"><a href="#创建证书" class="headerlink" title="创建证书"></a>创建证书</h3><ul><li>切换到git用户：<code>su git</code></li><li>创建.ssh目录：<code>mkdir .ssh &amp;&amp; chmod 700 .ssh</code></li><li>然后在云服务创建<code>authorized_keys</code>公钥保存文件：<code>touch .ssh/authorized_keys &amp;&amp; chmod 600 .ssh/authorized_keys</code></li></ul><h3 id="创建git仓库目录"><a href="#创建git仓库目录" class="headerlink" title="创建git仓库目录"></a>创建git仓库目录</h3><p>创建一个名为blog的git仓库</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir /home/git/repos</span><br><span class="line">cd /home/git/repos</span><br><span class="line">git <span class="keyword">init</span> --bare blog.git</span><br></pre></td></tr></table></figure><h3 id="配置GitHOOKS"><a href="#配置GitHOOKS" class="headerlink" title="配置GitHOOKS"></a>配置GitHOOKS</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /<span class="keyword">var</span>/repo/blog.git/hooks/post-receive</span><br></pre></td></tr></table></figure><p>添加</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line">git --work-tree=/home/git/project/blog --git-dir=/home/git/repos/blog.git checkout -f</span><br></pre></td></tr></table></figure><p>然后保存退出，并设置权限</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod +x /<span class="keyword">var</span>/repo/blog.git/hooks/post-receive</span><br></pre></td></tr></table></figure><h3 id="改变-BLOG-GIT-目录的拥有者为-GIT-用户"><a href="#改变-BLOG-GIT-目录的拥有者为-GIT-用户" class="headerlink" title="改变 BLOG.GIT 目录的拥有者为 GIT 用户"></a>改变 BLOG.GIT 目录的拥有者为 GIT 用户</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chown -R git:git blog.git</span><br></pre></td></tr></table></figure><h3 id="创建静态文件目录"><a href="#创建静态文件目录" class="headerlink" title="创建静态文件目录"></a>创建静态文件目录</h3><ul><li>创建静态文件目录（文章网页）：<code>mkdir /home/git/project/blog</code></li><li>链接git仓库：<code>chown -R git:git /home/git/project/blog</code></li><li>配置权限：<code>chmod -R 755 /home/git/project/blog</code><br> 这样git仓库更新便会自动同步到hexo目录下</li></ul><h2 id="hexo配置"><a href="#hexo配置" class="headerlink" title="hexo配置"></a>hexo配置</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo:</span><br><span class="line">    - git@github.com:Diesel-Chen&#x2F;diesel-chen.github.io.git</span><br><span class="line">    - git@47.116.78.14:&#x2F;home&#x2F;git&#x2F;repos&#x2F;blog.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;本站之前的博客是部署在github pages 上的，考虑到国内用户并不是都可以科学上网，并且我在20年双11买的阿里云轻量型ecs 一直闲置，今天捣鼓一下，把hexo 部署到阿里云上&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="博客搭建" scheme="https://www.dieselchen.work/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    <category term="hexo" scheme="https://www.dieselchen.work/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/hexo/"/>
    
    
    <category term="hexo" scheme="https://www.dieselchen.work/tags/hexo/"/>
    
    <category term="博客搭建" scheme="https://www.dieselchen.work/tags/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
  </entry>
  
  <entry>
    <title>网络方面的面试题</title>
    <link href="https://www.dieselchen.work/archives/add768a0.html"/>
    <id>https://www.dieselchen.work/archives/add768a0.html</id>
    <published>2021-03-05T00:24:04.000Z</published>
    <updated>2021-03-07T08:45:05.697Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>网络方面的面试题(持续更新……)</p></blockquote><span id="more"></span><h2 id="问题汇总"><a href="#问题汇总" class="headerlink" title="问题汇总"></a>问题汇总</h2><h4 id="谈谈你对TCP-IP四层模型的理解？OSI七层模型呢？"><a href="#谈谈你对TCP-IP四层模型的理解？OSI七层模型呢？" class="headerlink" title="谈谈你对TCP/IP四层模型的理解？OSI七层模型呢？"></a>谈谈你对TCP/IP四层模型的理解？OSI七层模型呢？</h4><h4 id="说说HTTP协议的工作原理，还有HTTP1-0、1-1以及2-0的区别是什么？"><a href="#说说HTTP协议的工作原理，还有HTTP1-0、1-1以及2-0的区别是什么？" class="headerlink" title="说说HTTP协议的工作原理，还有HTTP1.0、1.1以及2.0的区别是什么？"></a>说说HTTP协议的工作原理，还有HTTP1.0、1.1以及2.0的区别是什么？</h4><h4 id="你现场画一下HTTPS协议的原理，如何使用HTTPS协议？"><a href="#你现场画一下HTTPS协议的原理，如何使用HTTPS协议？" class="headerlink" title="你现场画一下HTTPS协议的原理，如何使用HTTPS协议？"></a>你现场画一下HTTPS协议的原理，如何使用HTTPS协议？</h4><h4 id="你知道什么是网络抓包的问题吗？能说说怎么解决这个问题吗？"><a href="#你知道什么是网络抓包的问题吗？能说说怎么解决这个问题吗？" class="headerlink" title="你知道什么是网络抓包的问题吗？能说说怎么解决这个问题吗？"></a>你知道什么是网络抓包的问题吗？能说说怎么解决这个问题吗？</h4><h4 id="谈谈你对TCP三次握手和四次挥手的理解，以及为什么要这么做？"><a href="#谈谈你对TCP三次握手和四次挥手的理解，以及为什么要这么做？" class="headerlink" title="谈谈你对TCP三次握手和四次挥手的理解，以及为什么要这么做？"></a>谈谈你对TCP三次握手和四次挥手的理解，以及为什么要这么做？</h4><h4 id="当你用浏览器打开一个链接的时候，计算机做了哪些工作步骤。"><a href="#当你用浏览器打开一个链接的时候，计算机做了哪些工作步骤。" class="headerlink" title="当你用浏览器打开一个链接的时候，计算机做了哪些工作步骤。"></a>当你用浏览器打开一个链接的时候，计算机做了哪些工作步骤。</h4>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;网络方面的面试题(持续更新……)&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="面试" scheme="https://www.dieselchen.work/categories/%E9%9D%A2%E8%AF%95/"/>
    
    <category term="网络" scheme="https://www.dieselchen.work/categories/%E9%9D%A2%E8%AF%95/%E7%BD%91%E7%BB%9C/"/>
    
    
    <category term="面试" scheme="https://www.dieselchen.work/tags/%E9%9D%A2%E8%AF%95/"/>
    
    <category term="网络" scheme="https://www.dieselchen.work/tags/%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>MySQL相关的面试题</title>
    <link href="https://www.dieselchen.work/archives/607df68b.html"/>
    <id>https://www.dieselchen.work/archives/607df68b.html</id>
    <published>2021-03-05T00:03:27.000Z</published>
    <updated>2021-03-07T08:45:05.705Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>mysql相关的面试题(持续更新……)</p></blockquote><span id="more"></span><h2 id="问题汇总"><a href="#问题汇总" class="headerlink" title="问题汇总"></a>问题汇总</h2><h4 id="MySQL的存储引擎有哪些？区别是什么？底层文件结构是什么？"><a href="#MySQL的存储引擎有哪些？区别是什么？底层文件结构是什么？" class="headerlink" title="MySQL的存储引擎有哪些？区别是什么？底层文件结构是什么？"></a>MySQL的存储引擎有哪些？区别是什么？底层文件结构是什么？</h4><h4 id="对MySQL的索引原理了解吗？索引的数据结构是什么？B-树和B树有什么区别？"><a href="#对MySQL的索引原理了解吗？索引的数据结构是什么？B-树和B树有什么区别？" class="headerlink" title="对MySQL的索引原理了解吗？索引的数据结构是什么？B+树和B树有什么区别？"></a>对MySQL的索引原理了解吗？索引的数据结构是什么？B+树和B树有什么区别？</h4><h4 id="你知道MySQL中支持哪几种锁吗？说说你对MySQL行锁实现原理的理解？"><a href="#你知道MySQL中支持哪几种锁吗？说说你对MySQL行锁实现原理的理解？" class="headerlink" title="你知道MySQL中支持哪几种锁吗？说说你对MySQL行锁实现原理的理解？"></a>你知道MySQL中支持哪几种锁吗？说说你对MySQL行锁实现原理的理解？</h4><h4 id="谈谈你对MySQL中的事务原理的理解？有哪几种事务隔离级别？"><a href="#谈谈你对MySQL中的事务原理的理解？有哪几种事务隔离级别？" class="headerlink" title="谈谈你对MySQL中的事务原理的理解？有哪几种事务隔离级别？"></a>谈谈你对MySQL中的事务原理的理解？有哪几种事务隔离级别？</h4><h4 id="谈谈MySQL常见的性能优化方法，以及SQL调优的方法？"><a href="#谈谈MySQL常见的性能优化方法，以及SQL调优的方法？" class="headerlink" title="谈谈MySQL常见的性能优化方法，以及SQL调优的方法？"></a>谈谈MySQL常见的性能优化方法，以及SQL调优的方法？</h4>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;mysql相关的面试题(持续更新……)&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="面试" scheme="https://www.dieselchen.work/categories/%E9%9D%A2%E8%AF%95/"/>
    
    <category term="MySQL" scheme="https://www.dieselchen.work/categories/%E9%9D%A2%E8%AF%95/MySQL/"/>
    
    
    <category term="面试" scheme="https://www.dieselchen.work/tags/%E9%9D%A2%E8%AF%95/"/>
    
    <category term="MySQL" scheme="https://www.dieselchen.work/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>Redis相关的面试题</title>
    <link href="https://www.dieselchen.work/archives/fd8c1fb6.html"/>
    <id>https://www.dieselchen.work/archives/fd8c1fb6.html</id>
    <published>2021-03-04T06:33:43.000Z</published>
    <updated>2021-03-07T10:07:14.280Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>redis面试常问汇总 （持续更新……）</p></blockquote><span id="more"></span><h2 id="问题汇总"><a href="#问题汇总" class="headerlink" title="问题汇总"></a>问题汇总</h2><h4 id="Redis缓存的作用？"><a href="#Redis缓存的作用？" class="headerlink" title="Redis缓存的作用？"></a>Redis缓存的作用？</h4><h4 id="Redis线程模型？为什么Redis单线程还能支持高并发？"><a href="#Redis线程模型？为什么Redis单线程还能支持高并发？" class="headerlink" title="Redis线程模型？为什么Redis单线程还能支持高并发？"></a>Redis线程模型？为什么Redis单线程还能支持高并发？</h4><h4 id="Redis有哪些数据类型？在哪些场景下使用比较合适呢？"><a href="#Redis有哪些数据类型？在哪些场景下使用比较合适呢？" class="headerlink" title="Redis有哪些数据类型？在哪些场景下使用比较合适呢？"></a>Redis有哪些数据类型？在哪些场景下使用比较合适呢？</h4><h4 id="Redis的过期策略和内存淘汰机制是什么？能否手写一个LRU？"><a href="#Redis的过期策略和内存淘汰机制是什么？能否手写一个LRU？" class="headerlink" title="Redis的过期策略和内存淘汰机制是什么？能否手写一个LRU？"></a>Redis的过期策略和内存淘汰机制是什么？能否手写一个LRU？</h4><h4 id="怎么保证Redis是高并发以及高可用的？"><a href="#怎么保证Redis是高并发以及高可用的？" class="headerlink" title="怎么保证Redis是高并发以及高可用的？"></a>怎么保证Redis是高并发以及高可用的？</h4><h4 id="怎么保证Redis挂掉之后再重启数据可以进行修复？"><a href="#怎么保证Redis挂掉之后再重启数据可以进行修复？" class="headerlink" title="怎么保证Redis挂掉之后再重启数据可以进行修复？"></a>怎么保证Redis挂掉之后再重启数据可以进行修复？</h4><h4 id="能聊一聊Redis-cluster集群模式的原理吗？"><a href="#能聊一聊Redis-cluster集群模式的原理吗？" class="headerlink" title="能聊一聊Redis cluster集群模式的原理吗？"></a>能聊一聊Redis cluster集群模式的原理吗？</h4><h4 id="遇到缓存穿透、缓存击穿、缓存雪崩怎么处理？"><a href="#遇到缓存穿透、缓存击穿、缓存雪崩怎么处理？" class="headerlink" title="遇到缓存穿透、缓存击穿、缓存雪崩怎么处理？"></a>遇到缓存穿透、缓存击穿、缓存雪崩怎么处理？</h4><h4 id="如何保证缓存与数据库双写时的数据一致性？"><a href="#如何保证缓存与数据库双写时的数据一致性？" class="headerlink" title="如何保证缓存与数据库双写时的数据一致性？"></a>如何保证缓存与数据库双写时的数据一致性？</h4><h4 id="你们公司生产环境的Redis集群怎么搭建的？"><a href="#你们公司生产环境的Redis集群怎么搭建的？" class="headerlink" title="你们公司生产环境的Redis集群怎么搭建的？"></a>你们公司生产环境的Redis集群怎么搭建的？</h4><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="https://juejin.cn/post/6844903953092575246">Redis的过期策略及内存淘汰机制</a></li><li>java面试突击第一季(有需要三季视频资料的评论区找我)</li></ul>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;redis面试常问汇总 （持续更新……）&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="面试" scheme="https://www.dieselchen.work/categories/%E9%9D%A2%E8%AF%95/"/>
    
    <category term="Redis" scheme="https://www.dieselchen.work/categories/%E9%9D%A2%E8%AF%95/Redis/"/>
    
    
    <category term="面试" scheme="https://www.dieselchen.work/tags/%E9%9D%A2%E8%AF%95/"/>
    
    <category term="Redis" scheme="https://www.dieselchen.work/tags/Redis/"/>
    
  </entry>
  
  <entry>
    <title>使用hexo搭建博客的自定义设置</title>
    <link href="https://www.dieselchen.work/archives/4f6256ee.html"/>
    <id>https://www.dieselchen.work/archives/4f6256ee.html</id>
    <published>2021-02-26T08:53:27.000Z</published>
    <updated>2021-02-26T08:57:09.804Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>个人博客搭建一些自定义设置，基于hexo + next +github pages</p></blockquote><span id="more"></span><h2 id="数据文件"><a href="#数据文件" class="headerlink" title="数据文件"></a>数据文件</h2><p>自从 NexT-7.3.0 开始，官方推荐采用数据文件将配置与主题分离，这样我们可以在不修改主题源码的同时完成选项配置、自定义布局、自定义样式，便于后续 NexT 版本更新。</p><h4 id="next-yml"><a href="#next-yml" class="headerlink" title="next.yml"></a><span style='color:red;background:rgb(249,240,242);font-size:文字大小;padding-left:5px;padding-right:5px;'>next.yml</span></h4><p>我们可以将所有主题配置放在一个位置（<span style='color:red;background:rgb(249,240,242);font-size:文字大小;padding-left:5px;padding-right:5px;'>hexo/source/_data/next.yml</span>）</p><p>具体步骤：</p><ol><li>在 <code>hexo/source/_data</code> 目录中创建 <code>next.yml</code>（如果<code>_data</code> 不存在，则创建目录）。</li><li>在 <code>next.yml</code> 设置 <code>override</code> 选项为 true。</li><li>将<strong>所有 NexT 主题选项</strong>从主题配置文件复制到 <code>hexo/source/_data/next.yml</code> 中。</li></ol><h4 id="styles-styl"><a href="#styles-styl" class="headerlink" title="styles.styl"></a><span style='color:red;background:rgb(249,240,242);font-size:文字大小;padding-left:5px;padding-right:5px;'>styles.styl</span></h4><p>我们只需要把原来的 <code>hexo/next/source/css/_custom/_custom.styl</code> 中的全部自定义样式放到 <code>hexo/source/_data/styles.styl</code> 即可。</p><p>然后在 NexT 的配置文件 <code>next.yml</code> 中取消 <code>styles.styl</code> 的注释：</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">custom_file_path:</span><br><span class="line"></span><br><span class="line"><span class="deletion">-  #style: source/_data/styles.styl</span></span><br><span class="line"><span class="addition">+  style: source/_data/styles.styl</span></span><br></pre></td></tr></table></figure><h4 id="variables-styl"><a href="#variables-styl" class="headerlink" title="variables.styl"></a><span style='color:red;background:rgb(249,240,242);font-size:文字大小;padding-left:5px;padding-right:5px;'>variables.styl</span></h4><p>在自定义样式文件 <code>variables.styl</code> 中添加：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; 圆角设置</span><br><span class="line">$border-radius-inner     &#x3D; 20px 20px 20px 20px;</span><br><span class="line">$border-radius           &#x3D; 20px;</span><br></pre></td></tr></table></figure><p>然后在 NexT 的配置文件 <code>next.yml</code> 中取消 <code>variables.styl</code> 的注释：</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">custom_file_path:</span><br><span class="line"></span><br><span class="line"><span class="deletion">-  #variables: source/_data/variables.styl</span></span><br><span class="line"><span class="addition">+  variables: source/_data/variables.styl</span></span><br></pre></td></tr></table></figure><h2 id="在文章底部增加版权信息"><a href="#在文章底部增加版权信息" class="headerlink" title="在文章底部增加版权信息"></a>在文章底部增加版权信息</h2><p>编辑 主题配置文件，修改如下配置：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">copycreative_commons:</span></span><br><span class="line">  <span class="attr">license:</span> <span class="string">by-nc-sa</span></span><br><span class="line">  <span class="attr">sidebar:</span> <span class="literal">false</span> <span class="comment"># 不在侧边栏显示版权信息</span></span><br><span class="line">  <span class="attr">post:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">language:</span></span><br></pre></td></tr></table></figure><h2 id="删除侧边栏目录下划线"><a href="#删除侧边栏目录下划线" class="headerlink" title="删除侧边栏目录下划线"></a>删除侧边栏目录下划线</h2><p>找到对应的a标签</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">// 修改链接样式</span><br><span class="line"><span class="selector-class">.post-body</span> <span class="selector-tag">p</span> <span class="selector-tag">a</span>&#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#0593d3</span>;</span><br><span class="line">  <span class="attribute">border-bottom</span>: none;</span><br><span class="line">  &amp;<span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#ff106c</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">a</span>, <span class="selector-tag">span</span><span class="selector-class">.exturl</span> &#123;</span><br><span class="line">  <span class="attribute">border-bottom</span>: none;</span><br><span class="line">  &amp;<span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#ff106c</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="顶部阅读进度条"><a href="#顶部阅读进度条" class="headerlink" title="顶部阅读进度条"></a>顶部阅读进度条</h3><p>主题配置文件 <code>next.yml</code> 中修改 <code>reading_progress</code> 选项。</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">reading_progress:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># 显示在顶部</span></span><br><span class="line">  <span class="attr">position:</span> <span class="string">top</span></span><br><span class="line">  <span class="attr">color:</span> <span class="string">&quot;#06d633&quot;</span></span><br><span class="line">  <span class="attr">height:</span> <span class="string">3px</span></span><br></pre></td></tr></table></figure><h3 id="在每篇文章末尾统一添加“本文结束”标记"><a href="#在每篇文章末尾统一添加“本文结束”标记" class="headerlink" title=". 在每篇文章末尾统一添加“本文结束”标记"></a>. 在每篇文章末尾统一添加“本文结束”标记</h3><p><strong>实现效果图</strong></p><p><a href="http://upload-images.jianshu.io/upload_images/5308475-90be73acbc5f8a7a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"><img src="http://upload-images.jianshu.io/upload_images/5308475-90be73acbc5f8a7a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="img"></a></p><p><strong>具体实现方法</strong></p><p>在路径 <code>\themes\next\layout\_macro</code> 中新建 <code>passage-end-tag.swig</code> 文件,并添加以下内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;div&gt;</span><br><span class="line">    &#123;% if not is_index %&#125;</span><br><span class="line">        &lt;div style&#x3D;&quot;text-align:center;color: #ccc;font-size:14px;&quot;&gt;-------------本文结束&lt;i class&#x3D;&quot;fa fa-paw&quot;&gt;&lt;&#x2F;i&gt;感谢您的阅读-------------&lt;&#x2F;div&gt;</span><br><span class="line">    &#123;% endif %&#125;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure><p>接着打开<code>\themes\next\layout\_macro\post.swig</code>文件，在<code>post-body</code> 之后， <code>post-footer</code> 之前添加如下画红色部分代码（post-footer之前两个DIV）：</p><p>代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;div&gt;</span><br><span class="line">  &#123;% if not is_index %&#125;</span><br><span class="line">    &#123;% include &#39;passage-end-tag.swig&#39; %&#125;</span><br><span class="line">  &#123;% endif %&#125;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure><p>然后打开主题配置文件（<code>_config.yml</code>),在末尾添加：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 文章末尾添加“本文结束”标记</span><br><span class="line">passage_end_tag:</span><br><span class="line">  enabled: true</span><br></pre></td></tr></table></figure><h3 id="标签页面样式"><a href="#标签页面样式" class="headerlink" title="标签页面样式"></a>标签页面样式</h3><p>在 hexo/source/_data/styles.styl 文件加入下面样式。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">.tag-cloud a &#123;</span><br><span class="line">    box-shadow: 0 1px 3px #6f42c1, 0 1px 2px #d9534f;</span><br><span class="line">    padding: 2px 10px;</span><br><span class="line">    margin: 8px;</span><br><span class="line">    background: rgba(193,66,92,0);</span><br><span class="line">    border-bottom: none;</span><br><span class="line">    border-radius: 20px;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="页面阅读统计"><a href="#页面阅读统计" class="headerlink" title="页面阅读统计"></a>页面阅读统计</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">busuanzi_count:</span><br><span class="line">  enable: false              # 设true 开启</span><br><span class="line">  total_visitors: true       # 总阅读人数（uv数）</span><br><span class="line">  total_visitors_icon: user  # 阅读总人数的图标</span><br><span class="line">  total_views: true          # 总阅读次数（pv数）</span><br><span class="line">  total_views_icon: eye      # 阅读总次数的图标</span><br><span class="line">  post_views: true           # 开启内容阅读次数</span><br><span class="line">  post_views_icon: eye       # 内容页阅读数的图标</span><br></pre></td></tr></table></figure><h3 id="首页文章不展示全文显示摘要"><a href="#首页文章不展示全文显示摘要" class="headerlink" title="首页文章不展示全文显示摘要"></a>首页文章不展示全文显示摘要</h3><p>我们可以在主题配置文件中设置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">scroll_to_more: true      # 点击阅读全文后是否跳到&lt;!--more--&gt;标记处,设为false时点击阅读全文可以从头阅读</span><br><span class="line"></span><br><span class="line">save_scroll: false        # 自动保存每篇文章或页面上一次滚动的地方</span><br><span class="line"></span><br><span class="line">excerpt_description: true # 自动在首页对文章进行摘要描述作为前言文本</span><br><span class="line"></span><br><span class="line">auto_excerpt:   # 是否自动截取摘要</span><br><span class="line">  enable: false # 设置为true则自动截取150字当做首页摘要</span><br><span class="line">  length: 150   # 自动截取的字数</span><br></pre></td></tr></table></figure><blockquote><p>官方公告：<code>auto_excerpt</code> 可以自动截断文章内容作为摘要。此功能不是一个 Hexo 主题应当负责的，这为主题的维护者带来了太大压力。自 7.6.0 版本开始，此功能被移除，请自行安装第三方插件，或阅读 Hexo 有关文档。当然，我们仍然建议通过 <code>&lt;!-- more --&gt;</code> 来精确控制 Read More 的位置。</p></blockquote><h3 id="hexo-new-post-打开markdown-编辑器"><a href="#hexo-new-post-打开markdown-编辑器" class="headerlink" title="hexo new post 打开markdown 编辑器"></a>hexo new post 打开markdown 编辑器</h3><p>方法<br>在博客根目录里新建一个scripts 的 folder。</p><p>在这个 scripts 的 folder 里新建一个js文件，內容如下 (Typora 是我用的编辑器，把路径和软件修改成你想要的）：</p><p>For Window:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">var spawn &#x3D; require(&#39;child_process&#39;).exec;</span><br><span class="line"></span><br><span class="line">hexo.on(&#39;new&#39;, function(data)&#123;</span><br><span class="line">  spawn(&#39;start  &quot;C:\Program Files (x86)\Brackets\Brackets.exe&quot; &#39; + data.path);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>For Mac:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">var exec &#x3D; require(&#39;child_process&#39;).exec;</span><br><span class="line"></span><br><span class="line">hexo.on(&#39;new&#39;, function(data)&#123;</span><br><span class="line">    exec(&#39;open -a &quot;..\Brackets\Brackets.app&quot; &#39; + data.path);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;个人博客搭建一些自定义设置，基于hexo + next +github pages&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="博客搭建" scheme="https://www.dieselchen.work/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    <category term="hexo" scheme="https://www.dieselchen.work/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/hexo/"/>
    
    
    <category term="hexo" scheme="https://www.dieselchen.work/tags/hexo/"/>
    
    <category term="博客搭建" scheme="https://www.dieselchen.work/tags/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
  </entry>
  
  <entry>
    <title>hexo搭建评论系统Valine</title>
    <link href="https://www.dieselchen.work/archives/bc2aa60e.html"/>
    <id>https://www.dieselchen.work/archives/bc2aa60e.html</id>
    <published>2021-02-26T03:52:06.000Z</published>
    <updated>2021-04-07T09:04:07.759Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>hexo 搭建评论系统 valine，记录一下相关配置</p></blockquote><span id="more"></span><h3 id="参考各位大佬的链接"><a href="#参考各位大佬的链接" class="headerlink" title="参考各位大佬的链接"></a>参考各位大佬的链接</h3><ul><li><a href="https://deserts.io/valine-admin-document/">Deserts</a>的文章<ul><li><a href="https://deserts.io/valine-admin-document/">《Valine Admin 配置手册》</a></li></ul></li><li><a href="https://postgres.fun/20190107095300.html">Francs’s blog</a>的文章<ul><li><a href="https://postgres.fun/20190107095300.html">《Hexo: 添加Valine评论(邮件通知、评论列表头像)》</a></li></ul></li><li><a href="https://tding.top/archives/ed8b904f.html">小丁的个人博客</a>的文章<ul><li><a href="https://tding.top/archives/ed8b904f.html">《Hexo-NexT 配置 Valine》</a></li></ul></li></ul><h3 id="LeanCloud注册"><a href="#LeanCloud注册" class="headerlink" title="LeanCloud注册"></a>LeanCloud注册</h3><p>Valine 用 LeanCloud 作为数据库，所以我们需要注册一个 <a href="https://leancloud.cn/">LeanCloud 账号</a>。</p><ol><li>注册完以后需要创建一个应用，然后 <strong>进入应用 -&gt; 设置 -&gt; 应用 key</strong>，得到 appid、appkey。</li><li>我们需要在 <strong>Leancloud -&gt; 设置 -&gt; 安全中心 -&gt; Web 安全域名</strong>把你的域名加进去</li></ol><p><span style='color:red;background:rgb(249,240,242);font-size:文字大小;padding-left:5px;padding-right:5px;'>注意点：</span> 注册的时候一定要选择国际版，如果你选择的是<code>华北</code>或者<code>华东</code>的话，Valine 后台评论管理是需要备案才能绑定的</p><h3 id="NexT-配置"><a href="#NexT-配置" class="headerlink" title="NexT 配置"></a>NexT 配置</h3><p>由于 NexT 7.1.2 已经内置了 Valine，所以我们只需要进行简单的配置即可。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Valine</span></span><br><span class="line"><span class="comment"># You can get your appid and appkey from https://leancloud.cn</span></span><br><span class="line"><span class="comment"># More info available at https://valine.js.org</span></span><br><span class="line"><span class="attr">valine:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span> <span class="comment"># When enable is set to be true, leancloud_visitors is recommended to be closed for the re-initialization problem within different leancloud adk version.</span></span><br><span class="line">  <span class="attr">appid:</span>  <span class="comment"># your leancloud application appid</span></span><br><span class="line">  <span class="attr">appkey:</span>  <span class="comment"># your leancloud application appkey</span></span><br><span class="line">  <span class="attr">notify:</span> <span class="literal">false</span> <span class="comment"># mail notifier, See: https://github.com/xCss/Valine/wiki</span></span><br><span class="line">  <span class="attr">verify:</span> <span class="literal">false</span> <span class="comment"># Verification code</span></span><br><span class="line">  <span class="attr">placeholder:</span> <span class="string">&#x27;ヾﾉ≧∀≦)o来啊，快活啊!&#x27;</span> <span class="comment"># comment box placeholder</span></span><br><span class="line">  <span class="attr">avatar:</span> <span class="string">mm</span> <span class="comment"># gravatar style</span></span><br><span class="line">  <span class="attr">guest_info:</span> <span class="string">nick,mail,link</span> <span class="comment"># custom comment header</span></span><br><span class="line">  <span class="attr">pageSize:</span> <span class="number">10</span> <span class="comment"># pagination size</span></span><br><span class="line">  <span class="attr">language:</span> <span class="string">zh-cn</span> <span class="comment"># language, available values: en, zh-cn</span></span><br><span class="line">  <span class="attr">visitor:</span> <span class="literal">true</span> <span class="comment"># leancloud-counter-security is not supported for now. When visitor is set to be true, appid and appkey are recommended to be the same as leancloud_visitors&#x27; for counter compatibility. Article reading statistic https://valine.js.org/visitor.html</span></span><br><span class="line">  <span class="attr">comment_count:</span> <span class="literal">true</span> <span class="comment"># if false, comment count will only be displayed in post page, not in home page</span></span><br></pre></td></tr></table></figure><p>主要就是填入前一步得到的 appid、appkey。然后由于我后面要用<strong>更完善的第三方邮件提醒 Valine-Admin</strong>，所以这里我关闭了自带的邮件提醒 <code>notify</code>。</p><p>由于自带的 CDN 加载很慢，所以这里我们在 NexT 配置文件<code>_config.yml</code> 中改成第三方 CDN：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">vendors:</span></span><br><span class="line">  <span class="comment"># valine</span></span><br><span class="line">  <span class="comment"># See: https://github.com/xCss/Valine</span></span><br><span class="line">  <span class="comment"># Example:</span></span><br><span class="line">  <span class="comment"># valine: //cdn.jsdelivr.net/npm/valine@1/dist/Valine.min.js</span></span><br><span class="line">  <span class="comment"># valine: //cdnjs.cloudflare.com/ajax/libs/valine/1.3.4/Valine.min.js</span></span><br><span class="line">  <span class="attr">valine:</span> <span class="string">//cdn.jsdelivr.net/npm/valine@1/dist/Valine.min.js</span></span><br></pre></td></tr></table></figure><p>到目前为止，我们就可以正常使用 Valine 了。</p><p>下面是一些可选的高级配置，比如我想要评论后得到邮件通知、垃圾邮件过滤，那就需要配置 Valine Admin。</p><h3 id="Valine-Admin相关配置"><a href="#Valine-Admin相关配置" class="headerlink" title="Valine Admin相关配置"></a>Valine Admin相关配置</h3><p>选择<code>云引擎</code>–&gt;<code>设置</code>–&gt;<code>云引擎域名</code>(<code>强调这个就是LeancLoud的后台地址</code>输入自己喜欢的一个的前缀)<br>后台地址后面加上<code>/sign-up</code>就可以注册<br>例如：<a href="https://letetest.avosapps.us/sign-up">https://letetest.avosapps.us/sign-up</a></p><p><img src="https://image.dieselchen.work/uPic/2021/04/07/07.png" alt="07"><br>当然如果你有自己的域名也可以选择绑定自己的域名，选择<code>设置</code>–&gt;<code>域名绑定</code>–&gt;<code>云引擎域名</code><br><img src="https://image.dieselchen.work/uPic/2021%2003%2017%20image-20210317111459392%20.png" alt="image-20210317111459392"></p><p><span style='color:red;background:rgb(249,240,242);font-size:文字大小;padding-left:5px;padding-right:5px;'>注意</span> 如果想要绑定自己网站的二级域名有两种方式：</p><ol><li>注册国际版本，这样域名不备案就行</li><li>注册国内版本，域名需要备案。</li></ol><p>环境变量：</p><table><thead><tr><th align="left">变量</th><th align="left">示例</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">SITE_NAME</td><td align="left">DieselChen</td><td align="left"><code>[必填]</code> 博客名称</td></tr><tr><td align="left">SITE_URL</td><td align="left"><code>https://dieselchen.work/</code></td><td align="left"><code>[必填]</code> 首页地址</td></tr><tr><td align="left">SMTP_SERVICE</td><td align="left">QQ</td><td align="left"><code>[新版支持]</code> 邮件服务提供商，支持 QQ、163、126、Gmail 以及 更多</td></tr><tr><td align="left">SMTP_USER</td><td align="left"><a href="mailto:xxxxxx@qq.com">xxxxxx@qq.com</a></td><td align="left"><code>[必填]</code>SMTP 登录用户</td></tr><tr><td align="left">SMTP_PASS</td><td align="left">ccxxxxxxxxch</td><td align="left"><code>[必填]</code>SMTP 登录密码（QQ 邮箱需要获取独立密码）</td></tr><tr><td align="left">SENDER_NAME</td><td align="left">DieselChen</td><td align="left"><code>[必填]</code> 发件人</td></tr><tr><td align="left">SENDER_EMAIL</td><td align="left"><a href="mailto:xxxxxx@qq.com">xxxxxx@qq.com</a></td><td align="left"><code>[必填]</code> 发件邮箱</td></tr><tr><td align="left">ADMIN_URL</td><td align="left"><code>https://valine.dieselchen.work/</code></td><td align="left"><code>[建议]</code>Web 主机二级域名，用于自动唤醒</td></tr><tr><td align="left">BLOGGER_EMAIL</td><td align="left"><a href="mailto:xxxxx@gmail.com">xxxxx@gmail.com</a></td><td align="left"><code>[可选]</code> 博主通知收件地址，默认使用 SENDER_EMAIL</td></tr><tr><td align="left">AKISMET_KEY</td><td align="left">xxxxxxxxxxxx</td><td align="left"><code>[可选]</code>Akismet Key 用于垃圾评论检测，设为 MANUAL_REVIEW 开启人工审核，留空不使用反垃圾</td></tr></tbody></table><h3 id="邮件通知模板"><a href="#邮件通知模板" class="headerlink" title="邮件通知模板"></a>邮件通知模板</h3><p>邮件通知模板在<strong>云引擎环境变量</strong>中设定，可自定义通知邮件标题及内容模板。</p><table><thead><tr><th align="left">环境变量</th><th align="left">示例</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left"><code>MAIL_SUBJECT</code></td><td align="left"><code>$&#123;PARENT_NICK&#125;</code>，您在 <code>$&#123;SITE_NAME&#125;</code> 上的评论收到了回复</td><td align="left"><code>[可选]</code>@通知邮件主题（标题）模板</td></tr><tr><td align="left"><code>MAIL_TEMPLATE</code></td><td align="left">见下文</td><td align="left"><code>[可选]</code>@通知邮件内容模板</td></tr><tr><td align="left"><code>MAIL_SUBJECT_ADMIN</code></td><td align="left"><code>$&#123;SITE_NAME&#125;</code> 上有新评论了</td><td align="left"><code>[可选]</code> 博主邮件通知主题模板</td></tr><tr><td align="left"><code>MAIL_TEMPLATE_ADMIN</code></td><td align="left">见下文</td><td align="left"><code>[可选]</code> 博主邮件通知内容模板</td></tr></tbody></table><p>邮件通知包含两种，分别是<code>被@通知</code>（上面的 <code>MAIL_TEMPLATE</code>）和<code>博主通知</code>（上面的 <code>MAIL_TEMPLATE_ADMIN</code>），这两种模板都可以完全自定义。默认使用经典的蓝色风格模板。</p><p>默认<code>被@通知</code>邮件内容模板如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div style&#x3D;&quot;border-top:2px solid #12ADDB;box-shadow:0 1px 3px #AAAAAA;line-height:180%;padding:0 15px 12px;margin:50px auto;font-size:12px;&quot;&gt;&lt;h2 style&#x3D;&quot;border-bottom:1px solid #DDD;font-size:14px;font-weight:normal;padding:13px 0 10px 8px;&quot;&gt;您在&lt;a style&#x3D;&quot;text-decoration:none;color: #12ADDB;&quot; href&#x3D;&quot;$&#123;SITE_URL&#125;&quot; target&#x3D;&quot;_blank&quot;&gt;            $&#123;SITE_NAME&#125;&lt;&#x2F;a&gt;上的评论有了新的回复&lt;&#x2F;h2&gt; $&#123;PARENT_NICK&#125; 同学，您曾发表评论：&lt;div style&#x3D;&quot;padding:0 12px 0 12px;margin-top:18px&quot;&gt;&lt;div style&#x3D;&quot;background-color: #f5f5f5;padding: 10px 15px;margin:18px 0;word-wrap:break-word;&quot;&gt;            $&#123;PARENT_COMMENT&#125;&lt;&#x2F;div&gt;&lt;p&gt;&lt;strong&gt;$&#123;NICK&#125;&lt;&#x2F;strong&gt;回复说：&lt;&#x2F;p&gt;&lt;div style&#x3D;&quot;background-color: #f5f5f5;padding: 10px 15px;margin:18px 0;word-wrap:break-word;&quot;&gt; $&#123;COMMENT&#125;&lt;&#x2F;div&gt;&lt;p&gt;您可以点击&lt;a style&#x3D;&quot;text-decoration:none; color:#12addb&quot; href&#x3D;&quot;$&#123;POST_URL&#125;&quot; target&#x3D;&quot;_blank&quot;&gt;查看回复的完整內容&lt;&#x2F;a&gt;，欢迎再次光临&lt;a style&#x3D;&quot;text-decoration:none; color:#12addb&quot; href&#x3D;&quot;$&#123;SITE_URL&#125;&quot; target&#x3D;&quot;_blank&quot;&gt;$&#123;SITE_NAME&#125;&lt;&#x2F;a&gt;。&lt;br&gt;&lt;&#x2F;p&gt;&lt;&#x2F;div&gt;&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure><p>默认博主通知邮件内容模板如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div style&#x3D;&quot;border-top:2px solid #12ADDB;box-shadow:0 1px 3px #AAAAAA;line-height:180%;padding:0 15px 12px;margin:50px auto;font-size:12px;&quot;&gt;&lt;h2 style&#x3D;&quot;border-bottom:1px solid #DDD;font-size:14px;font-weight:normal;padding:13px 0 10px 8px;&quot;&gt;您在&lt;a style&#x3D;&quot;text-decoration:none;color: #12ADDB;&quot; href&#x3D;&quot;$&#123;SITE_URL&#125;&quot; target&#x3D;&quot;_blank&quot;&gt;$&#123;SITE_NAME&#125;&lt;&#x2F;a&gt;上的文章有了新的评论&lt;&#x2F;h2&gt;&lt;p&gt;&lt;strong&gt;$&#123;NICK&#125;&lt;&#x2F;strong&gt;回复说：&lt;&#x2F;p&gt;&lt;div style&#x3D;&quot;background-color: #f5f5f5;padding: 10px 15px;margin:18px 0;word-wrap:break-word;&quot;&gt; $&#123;COMMENT&#125;&lt;&#x2F;div&gt;&lt;p&gt;您可以点击&lt;a style&#x3D;&quot;text-decoration:none; color:#12addb&quot; href&#x3D;&quot;$&#123;POST_URL&#125;&quot; target&#x3D;&quot;_blank&quot;&gt;查看回复的完整內容&lt;&#x2F;a&gt;&lt;br&gt;&lt;&#x2F;p&gt;&lt;&#x2F;div&gt;&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure><p>这里还提供一个彩虹风格的 <code>@通知</code>邮件模板代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div style&#x3D;&quot;border-radius: 10px 10px 10px 10px;font-size:13px;    color: #555555;width: 666px;font-family:&#39;Century Gothic&#39;,&#39;Trebuchet MS&#39;,&#39;Hiragino Sans GB&#39;,微软雅黑,&#39;Microsoft Yahei&#39;,Tahoma,Helvetica,Arial,&#39;SimSun&#39;,sans-serif;margin:50px auto;border:1px solid #eee;max-width:100%;background: #ffffff repeating-linear-gradient(-45deg,#fff,#fff 1.125rem,transparent 1.125rem,transparent 2.25rem);box-shadow: 0 1px 5px rgba(0, 0, 0, 0.15);&quot;&gt;&lt;div style&#x3D;&quot;width:100%;background:#49BDAD;color:#ffffff;border-radius: 10px 10px 0 0;background-image: -moz-linear-gradient(0deg, rgb(67, 198, 184), rgb(255, 209, 244));background-image: -webkit-linear-gradient(0deg, rgb(67, 198, 184), rgb(255, 209, 244));height: 66px;&quot;&gt;&lt;p style&#x3D;&quot;font-size:15px;word-break:break-all;padding: 23px 32px;margin:0;background-color: hsla(0,0%,100%,.4);border-radius: 10px 10px 0 0;&quot;&gt;您在&lt;a style&#x3D;&quot;text-decoration:none;color: #ffffff;&quot; href&#x3D;&quot;$&#123;SITE_URL&#125;&quot;&gt; $&#123;SITE_NAME&#125;&lt;&#x2F;a&gt;上的留言有新回复啦！&lt;&#x2F;p&gt;&lt;&#x2F;div&gt;&lt;div style&#x3D;&quot;margin:40px auto;width:90%&quot;&gt;&lt;p&gt;$&#123;PARENT_NICK&#125; 同学，您曾在文章上发表评论：&lt;&#x2F;p&gt;&lt;div style&#x3D;&quot;background: #fafafa repeating-linear-gradient(-45deg,#fff,#fff 1.125rem,transparent 1.125rem,transparent 2.25rem);box-shadow: 0 2px 5px rgba(0, 0, 0, 0.15);margin:20px 0px;padding:15px;border-radius:5px;font-size:14px;color:#555555;&quot;&gt;$&#123;PARENT_COMMENT&#125;&lt;&#x2F;div&gt;&lt;p&gt;$&#123;NICK&#125; 给您的回复如下：&lt;&#x2F;p&gt;&lt;div style&#x3D;&quot;background: #fafafa repeating-linear-gradient(-45deg,#fff,#fff 1.125rem,transparent 1.125rem,transparent 2.25rem);box-shadow: 0 2px 5px rgba(0, 0, 0, 0.15);margin:20px 0px;padding:15px;border-radius:5px;font-size:14px;color:#555555;&quot;&gt;$&#123;COMMENT&#125;&lt;&#x2F;div&gt;&lt;p&gt;您可以点击&lt;a style&#x3D;&quot;text-decoration:none; color:#12addb&quot; href&#x3D;&quot;$&#123;POST_URL&#125;#comments&quot;&gt;查看回复的完整內容&lt;&#x2F;a&gt;，欢迎再次光临&lt;a style&#x3D;&quot;text-decoration:none; color:#12addb&quot;                href&#x3D;&quot;$&#123;SITE_URL&#125;&quot;&gt; $&#123;SITE_NAME&#125;&lt;&#x2F;a&gt;。&lt;&#x2F;p&gt;&lt;style type&#x3D;&quot;text&#x2F;css&quot;&gt;a:link&#123;text-decoration:none&#125;a:visited&#123;text-decoration:none&#125;a:hover&#123;text-decoration:none&#125;a:active&#123;text-decoration:none&#125;&lt;&#x2F;style&gt;&lt;&#x2F;div&gt;&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure><h3 id="定时任务设置"><a href="#定时任务设置" class="headerlink" title="定时任务设置"></a>定时任务设置</h3><p>目前实现了两种云函数定时任务：</p><ul><li>(1) 自动唤醒，定时访问 Web APP 二级域名防止云引擎休眠；</li><li>(2) 每天定时检查 24 小时内漏发的邮件通知。</li></ul><p>进入云引擎 - 定时任务中，创建定时器，创建两个定时任务。</p><ul><li>选择 <code>self-wake</code> 云函数，Cron 表达式为 <code>0 0/30 7-23 * * ?</code>，表示每天早 6 点到晚 23 点每隔 30 分钟访问云引擎，<code>ADMIN_URL</code> 环境变量务必设置正确</li><li>选择 <code>resend-mails</code> 云函数，Cron 表达式为 <code>0 0 8 * * ?</code>，表示每天早 8 点检查过去 24 小时内漏发的通知邮件并补发</li></ul><p>添加定时器后记得点击启动方可生效。</p><p>至此，Valine Admin 已经可以正常工作，更多以下是可选的进阶配置。</p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;hexo 搭建评论系统 valine，记录一下相关配置&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="博客搭建" scheme="https://www.dieselchen.work/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    <category term="valine" scheme="https://www.dieselchen.work/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/valine/"/>
    
    
    <category term="hexo" scheme="https://www.dieselchen.work/tags/hexo/"/>
    
    <category term="valine" scheme="https://www.dieselchen.work/tags/valine/"/>
    
  </entry>
  
</feed>
